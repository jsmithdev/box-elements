{"version":3,"sources":["webpack:///./src/components/pill-cloud/PillCloud.js","webpack:///./src/components/primary-button/PrimaryButton.tsx","webpack:///./src/elements/content-sidebar/SkillsSidebar.js","webpack:///./src/elements/content-sidebar/SkillsSidebar.scss","webpack:///./src/elements/content-sidebar/skills/SidebarSkills.js","webpack:///./src/elements/content-sidebar/skills/SidebarSkillsCard.js","webpack:///./src/elements/content-sidebar/skills/faces/Face.js","webpack:///./src/elements/content-sidebar/skills/faces/Face.scss","webpack:///./src/elements/content-sidebar/skills/faces/Faces.js","webpack:///./src/elements/content-sidebar/skills/faces/Faces.scss","webpack:///./src/elements/content-sidebar/skills/faces/index.js","webpack:///./src/elements/content-sidebar/skills/keywords/EditableKeywords.js","webpack:///./src/elements/content-sidebar/skills/keywords/EditableKeywords.scss","webpack:///./src/elements/content-sidebar/skills/keywords/Keywords.js","webpack:///./src/elements/content-sidebar/skills/keywords/Keywords.scss","webpack:///./src/elements/content-sidebar/skills/keywords/ReadOnlyKeywords.js","webpack:///./src/elements/content-sidebar/skills/keywords/ReadOnlyKeywords.scss","webpack:///./src/elements/content-sidebar/skills/keywords/index.js","webpack:///./src/elements/content-sidebar/skills/keywords/keywordUtils.js","webpack:///./src/elements/content-sidebar/skills/status/Status.js","webpack:///./src/elements/content-sidebar/skills/status/index.js","webpack:///./src/elements/content-sidebar/skills/timeline/Timeline.js","webpack:///./src/elements/content-sidebar/skills/timeline/Timeline.scss","webpack:///./src/elements/content-sidebar/skills/timeline/Timeslice.js","webpack:///./src/elements/content-sidebar/skills/timeline/Timeslice.scss","webpack:///./src/elements/content-sidebar/skills/timeline/index.js","webpack:///./src/elements/content-sidebar/skills/transcript/EditingTranscriptRow.js","webpack:///./src/elements/content-sidebar/skills/transcript/EditingTranscriptRow.scss","webpack:///./src/elements/content-sidebar/skills/transcript/ReadOnlyTranscriptRow.js","webpack:///./src/elements/content-sidebar/skills/transcript/Transcript.js","webpack:///./src/elements/content-sidebar/skills/transcript/Transcript.scss","webpack:///./src/elements/content-sidebar/skills/transcript/TranscriptRow.js","webpack:///./src/elements/content-sidebar/skills/transcript/TranscriptRow.scss","webpack:///./src/elements/content-sidebar/skills/transcript/index.js","webpack:///./src/elements/content-sidebar/skills/transcript/timeSliceUtils.js","webpack:///./src/icons/general/IconClose.tsx","webpack:///./src/icons/general/IconCollapse.tsx","webpack:///./src/icons/general/IconCopy.tsx","webpack:///./src/icons/general/IconEdit.tsx","webpack:///./src/icons/general/IconExpand.tsx","webpack:///./src/icons/general/IconMinus.tsx","webpack:///./src/icons/general/IconTrackNext.tsx","webpack:///./src/icons/general/IconTrackPrevious.tsx","webpack:///./src/utils/download.js"],"names":["PillCloud","options","onSelect","selectedOptions","buttonProps","map","option","value","classNames","find","op","isEqual","undefined","displayText","PrimaryButton","children","className","rest","MARK_NAME_JS_READY","ORIGIN_SKILLS_SIDEBAR","EVENT_JS_READY","mark","SkillsSidebar","React","constructor","props","errors","cards","updatePreviewTranscript","setState","getPreview","getViewer","preview","viewer","transcriptCard","card","skill_card_type","SKILLS_TRANSCRIPT","addListener","loadedViewer","loadAutoGeneratedCaptions","index","updatedCards","state","clone","removes","adds","replaces","api","file","path","ops","canEdit","getProp","FIELD_PERMISSIONS_CAN_UPLOAD","Array","isArray","forEach","replaced","replacement","idx","entries","findIndex","entry","push","deletes","removed","sort","a","b","added","length","splice","getMetadataAPI","updateSkills","onSaveSuccessHandler","onSaveErrorHandler","logger","onReadyMetric","endMarkName","componentDidMount","getSkills","fetchSkillsSuccessCallback","noop","componentDidUpdate","refreshIdentity","prevRefreshIdentity","render","elementId","SIDEBAR_VIEW_SKILLS","messages","sidebarSkillsTitle","onSave","flow","withLogger","withErrorBoundary","withAPIContext","getCardInteractionTarget","SKILLS_KEYWORD","SKILLS_TARGETS","KEYWORDS","CARD","SKILLS_FACE","SKILLS_TIMELINE","FACES","TRANSCRIPTS","getCardTitle","skill_card_title","code","message","defaultKey","defaultMessage","defaultSkill","faceSkill","transcriptSkill","topicsSkill","statusSkill","error","SidebarSkills","onSkillChange","permissions","isSkillEditable","can_upload","status","SKILLS_STATUS","SKILLS_ERROR_UNKNOWN","id","cardId","uniqueId","isValid","isValidSkillsCard","interactionTarget","title","hasEntries","args","SidebarSkillsCard","hasError","isEditable","Face","face","selected","isEditing","onDelete","isAnyFaceSelected","isCurrentFaceSelected","isFaceSelected","faceClassName","FACE","text","image_url","COLOR_WHITE","DELETE","COLOR_999","Faces","prevState","slice","toggleIsEditing","isLoading","resetState","faces","duration","hasFaces","filter","includes","editClassName","editLabel","EDIT","sidebarSkillsErrorTitle","sidebarSkillsErrorContent","skillNoInfoFoundError","appears","TIMELINE","EDIT_CANCEL","onCancel","cancel","EDIT_SAVE","save","EditableKeywords","keywords","key","isInCompositionMode","onBlur","onAdd","keyword","type","event","currentTarget","pills","getPills","prevKeywords","onCompositionEnd","onCompositionStart","onInput","onKeyDown","onRemove","Keywords","PureComponent","transcript","locations","regex","RegExp","test","addedIndex","hasKeywords","concat","ReadOnlyselecteds","selectedIndex","pill","newIndex","pillCloudProps","INTERACTION_TARGET","SELECT","Status","localizedMessage","skillUnknownError","SKILLS_ERROR_INVALID_FILE_SIZE","skillInvalidFileSizeError","SKILLS_ERROR_INVALID_FILE_FORMAT","skillInvalidFileExtensionError","SKILLS_ERROR_EXTERNAL_AUTH","SKILLS_ERROR_BILLING","SKILLS_ERROR_INVOCATIONS","SKILLS_ERROR_FILE_PROCESSING","skillFileProcessingError","SKILLS_STATUS_PENDING","skillPendingStatus","SKILLS_STATUS_INVOKED","skillInvokedStatus","Timeline","timeslices","timeSliceIndex","playSegment","incr","Math","min","max","timeslice","validTime","isValidStartTime","play","start","end","PREVIOUS","previousSegment","NEXT","nextSegment","LENGTH_TEXT_ITEMLINE","MIN_WIDTH","Timeslice","onClick","barLength","startLeft","round","minEnding","ending","endLeft","width","left","EditingTranscriptRow","time","onChange","ReadOnlyTranscriptRow","Transcript","isEditingIndex","newTranscriptText","isCollapsed","accumulator","isValidTimeSlice","formatTime","isEditingRow","transcriptText","EDIT_TEXT","TRANSCRIPT","previewSegment","copiedClass","copy","reduce","transcriptReducer","copyBtn","classList","add","setTimeout","remove","btn","prevProps","wasEditing","timeSlice","hasManyEntries","editBtnClassName","contentClassName","expandCollapseMessage","expand","collapse","COPY","copyBtnRef","copyTranscript","bdlGray50","EXPAND","toggleExpandCollapse","transcriptEdit","transcriptMapper","TranscriptRow","IconClose","color","height","IconCollapse","IconCopy","IconEdit","IconExpand","IconMinus","IconTrackNext","IconTrackPrevious","download","string","name","blob","Blob","window","navigator","msSaveBlob","url","URL","createObjectURL","document","createElement","style","display","href","body","appendChild","click","removeChild","revokeObjectURL","textarea","select","execCommand"],"mappings":"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","file":"skills-sidebar.js","sourcesContent":["// @flow\nimport React from 'react';\nimport classNames from 'classnames';\nimport isEqual from 'lodash/isEqual';\n\nimport Button from '../button';\nimport type { Option } from '../pill-selector-dropdown/flowTypes';\n\ntype Props = {\n    buttonProps?: Object,\n    onSelect?: Function,\n    options: Array<Option>,\n    selectedOptions?: Array<Option>,\n};\n\nconst PillCloud = ({ options, onSelect, selectedOptions = [], buttonProps = {} }: Props) => (\n    <div className=\"bdl-PillCloud pill-cloud-container\">\n        {options &&\n            options.map(option => (\n                <Button\n                    key={option.value}\n                    className={classNames('bdl-Pill', 'bdl-PillCloud-button', 'pill', 'pill-cloud-button', {\n                        'is-selected': selectedOptions.find(op => isEqual(op, option)),\n                    })}\n                    onClick={onSelect ? () => onSelect(option) : undefined}\n                    data-resin-target={option.value}\n                    {...buttonProps}\n                >\n                    {option.displayText}\n                </Button>\n            ))}\n    </div>\n);\n\nexport default PillCloud;\n","import * as React from 'react';\nimport Button, { ButtonProps } from '../button/Button';\n\nconst PrimaryButton = ({ children, className = '', ...rest }: Partial<ButtonProps>) => (\n    <Button className={`btn-primary ${className}`} {...rest}>\n        {children}\n    </Button>\n);\n\nexport default PrimaryButton;\n","/**\n * @flow\n * @file Skills sidebar component\n * @author Box\n */\n\nimport * as React from 'react';\nimport flow from 'lodash/flow';\nimport getProp from 'lodash/get';\nimport noop from 'lodash/noop';\nimport { FormattedMessage } from 'react-intl';\nimport API from '../../api';\nimport LoadingIndicator from '../../components/loading-indicator/LoadingIndicator';\nimport messages from '../common/messages';\nimport SidebarContent from './SidebarContent';\nimport SidebarSkills from './skills/SidebarSkills';\nimport { EVENT_JS_READY } from '../common/logger/constants';\nimport { mark } from '../../utils/performance';\nimport { withAPIContext } from '../common/api-context';\nimport { withErrorBoundary } from '../common/error-boundary';\nimport { withLogger } from '../common/logger';\nimport {\n    FIELD_PERMISSIONS_CAN_UPLOAD,\n    SKILLS_TRANSCRIPT,\n    ORIGIN_SKILLS_SIDEBAR,\n    SIDEBAR_VIEW_SKILLS,\n} from '../../constants';\nimport type { WithLoggerProps } from '../../common/types/logging';\nimport type { SkillCardEntry, SkillCard } from '../../common/types/skills';\nimport type { NumberBooleanMap, BoxItem } from '../../common/types/core';\nimport type { JSONPatchOperations } from '../../common/types/api';\nimport './SkillsSidebar.scss';\n\ntype PropsWithoutContext = {\n    elementId: string,\n    file: BoxItem,\n    getPreview: Function,\n    getViewer: Function,\n    hasSidebarInitialized?: boolean,\n    refreshIdentity?: boolean,\n};\n\ntype Props = {\n    api: API,\n} & PropsWithoutContext &\n    WithLoggerProps;\n\ntype State = {\n    cards?: Array<SkillCard>,\n    errors: NumberBooleanMap,\n};\n\nconst MARK_NAME_JS_READY = `${ORIGIN_SKILLS_SIDEBAR}_${EVENT_JS_READY}`;\n\nmark(MARK_NAME_JS_READY);\n\nclass SkillsSidebar extends React.PureComponent<Props, State> {\n    state: State = {\n        errors: {},\n    };\n\n    constructor(props: Props) {\n        super(props);\n        const { logger } = this.props;\n        logger.onReadyMetric({\n            endMarkName: MARK_NAME_JS_READY,\n        });\n    }\n\n    componentDidMount() {\n        const { api, file }: Props = this.props;\n        api.getMetadataAPI(false).getSkills(file, this.fetchSkillsSuccessCallback, noop);\n    }\n\n    componentDidUpdate({ refreshIdentity: prevRefreshIdentity }: Props) {\n        const { api, file, refreshIdentity }: Props = this.props;\n\n        if (refreshIdentity !== prevRefreshIdentity) {\n            api.getMetadataAPI(false).getSkills(file, this.fetchSkillsSuccessCallback, noop);\n        }\n    }\n\n    /**\n     * Handles skills fetch success\n     *\n     * @private\n     * @param {Array<SkillCard>} cards - Skills cards\n     * @return {void}\n     */\n    fetchSkillsSuccessCallback = (cards: Array<SkillCard>) => {\n        this.updatePreviewTranscript(cards);\n        this.setState({ cards });\n    };\n\n    /**\n     * Updates Preview with transcript data\n     *\n     * @private\n     * @param {Array<SkillCard>} cards - Skills cards\n     * @return {void}\n     */\n    updatePreviewTranscript = (cards: Array<SkillCard>): void => {\n        const { getPreview, getViewer } = this.props;\n        const preview = getPreview ? getPreview() : null;\n        const viewer = getViewer ? getViewer() : null;\n        const transcriptCard = cards.find(card => card.skill_card_type === SKILLS_TRANSCRIPT);\n        if (!transcriptCard || !preview) {\n            return;\n        }\n\n        if (!viewer) {\n            preview.addListener('load', ({ viewer: loadedViewer }) => {\n                if (typeof loadedViewer.loadAutoGeneratedCaptions === 'function') {\n                    loadedViewer.loadAutoGeneratedCaptions(transcriptCard);\n                }\n            });\n        } else if (typeof viewer.loadAutoGeneratedCaptions === 'function') {\n            viewer.loadAutoGeneratedCaptions(transcriptCard);\n        }\n    };\n\n    /**\n     * Success handler for save\n     *\n     * @private\n     * @param {Array} updatedCards - updated skill cards\n     * @param {number} index - index of the card being edited\n     * @return {void}\n     */\n    onSaveSuccessHandler = (index: number, updatedCards: Array<SkillCard>): void => {\n        const { errors }: State = this.state;\n        const clone = { ...errors };\n        delete clone[index];\n        this.updatePreviewTranscript(updatedCards);\n        this.setState({ cards: updatedCards, errors: clone });\n    };\n\n    /**\n     * Error handler for save\n     *\n     * @private\n     * @param {number} index - index of the card being edited\n     * @return {void}\n     */\n    onSaveErrorHandler = (index: number): void => {\n        const { errors }: State = this.state;\n        const clone = { ...errors };\n        clone[index] = true;\n        this.setState({ errors: clone });\n    };\n\n    /**\n     * Updates skill metadata\n     *\n     * @private\n     * @param {number} index - index of the card being edited\n     * @param {Array} removes - entries to remove\n     * @param {Array} adds - entries to add\n     * @param {Array} replaces - entries to replace\n     * @return {void}\n     */\n    onSave = (\n        index: number,\n        removes: Array<SkillCardEntry> = [],\n        adds: Array<SkillCardEntry> = [],\n        replaces: Array<{\n            replaced: SkillCardEntry,\n            replacement: SkillCardEntry,\n        }> = [],\n    ): void => {\n        const { api, file }: Props = this.props;\n        const { cards = [] }: State = this.state;\n        const card = cards[index];\n        const path = `/cards/${index}`;\n        const ops: JSONPatchOperations = [];\n        const canEdit = getProp(file, FIELD_PERMISSIONS_CAN_UPLOAD, false);\n\n        if (!canEdit || !card) {\n            return;\n        }\n\n        if (Array.isArray(replaces)) {\n            replaces.forEach(({ replaced, replacement }) => {\n                const idx = card.entries.findIndex(entry => entry === replaced);\n                if (idx > -1) {\n                    ops.push({\n                        op: 'replace',\n                        path: `${path}/entries/${idx}`,\n                        value: replacement,\n                    });\n                }\n            });\n        }\n\n        if (Array.isArray(removes)) {\n            const deletes = [];\n            removes.forEach(removed => {\n                const idx = card.entries.findIndex(entry => entry === removed);\n                if (idx > -1) {\n                    deletes.push(idx);\n                }\n            });\n            // To maintain metadata index positions, removes should be\n            // done is reverse order with largest index being removed first.\n            // Remove operations are atomic and don't happen in batch.\n            deletes\n                .sort((a, b) => b - a) // number sort in descending order\n                .forEach(idx => {\n                    ops.push({\n                        op: 'remove',\n                        path: `${path}/entries/${idx}`,\n                    });\n                });\n        }\n\n        if (Array.isArray(adds)) {\n            adds.forEach(added => {\n                ops.push({\n                    op: 'add',\n                    path: `${path}/entries/-`,\n                    value: added,\n                });\n            });\n        }\n\n        // If no ops, don't proceed\n        if (ops.length === 0) {\n            return;\n        }\n\n        // Add test ops before any other ops\n        ops.splice(0, 0, {\n            op: 'test',\n            path,\n            value: card,\n        });\n\n        api.getMetadataAPI(false).updateSkills(\n            file,\n            ops,\n            (updatedCards: Array<SkillCard>) => {\n                this.onSaveSuccessHandler(index, updatedCards);\n            },\n            () => {\n                this.onSaveErrorHandler(index);\n            },\n        );\n    };\n\n    render() {\n        const { file, getViewer, elementId }: Props = this.props;\n        const { cards, errors }: State = this.state;\n\n        return (\n            <SidebarContent\n                className=\"bcs-skills\"\n                elementId={elementId}\n                sidebarView={SIDEBAR_VIEW_SKILLS}\n                title={<FormattedMessage {...messages.sidebarSkillsTitle} />}\n            >\n                {cards ? (\n                    <SidebarSkills\n                        cards={cards}\n                        errors={errors}\n                        file={file}\n                        getViewer={getViewer}\n                        onSkillChange={this.onSave}\n                    />\n                ) : (\n                    <LoadingIndicator />\n                )}\n            </SidebarContent>\n        );\n    }\n}\n\nexport { SkillsSidebar as SkillsSidebarComponent };\nexport default flow([withLogger(ORIGIN_SKILLS_SIDEBAR), withErrorBoundary(ORIGIN_SKILLS_SIDEBAR), withAPIContext])(\n    SkillsSidebar,\n);\n","// extracted by mini-css-extract-plugin","/**\n * @flow\n * @file Details sidebar component\n * @author Box\n */\n\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport uniqueId from 'lodash/uniqueId';\nimport messages from '../../common/messages';\nimport { SKILLS_TARGETS } from '../../common/interactionTargets';\nimport SidebarSection from '../SidebarSection';\nimport { isValidSkillsCard } from './skillUtils';\nimport SidebarSkillsCard from './SidebarSkillsCard';\nimport {\n    SKILLS_TRANSCRIPT,\n    SKILLS_KEYWORD,\n    SKILLS_TIMELINE,\n    SKILLS_FACE,\n    SKILLS_STATUS,\n    SKILLS_ERROR_UNKNOWN,\n} from '../../../constants';\nimport type { SkillCard, SkillCardLocalizableType } from '../../../common/types/skills';\nimport type { NumberBooleanMap, BoxItem } from '../../../common/types/core';\n\ntype Props = {\n    cards: Array<SkillCard>,\n    errors: NumberBooleanMap,\n    file: BoxItem,\n    getViewer: Function,\n    onSkillChange: Function,\n};\n\n/**\n * Get ths skill interaction target based on card type\n *\n * @param {Object} card - skill card\n * @return {string} - interaction target\n */\nconst getCardInteractionTarget = ({ skill_card_type }: SkillCard): string => {\n    switch (skill_card_type) {\n        case SKILLS_KEYWORD:\n            return SKILLS_TARGETS.KEYWORDS.CARD;\n        case SKILLS_FACE:\n        case SKILLS_TIMELINE:\n            return SKILLS_TARGETS.FACES.CARD;\n        case SKILLS_TRANSCRIPT:\n            return SKILLS_TARGETS.TRANSCRIPTS.CARD;\n        default:\n            return '';\n    }\n};\n\n/**\n * Get ths string skill title based on card title\n *\n * @param {Object} card - skill card\n * @return {string} - skill title\n */\nconst getCardTitle = ({ skill_card_type, skill_card_title = {} }: SkillCard): string | React.Node => {\n    const { code, message }: SkillCardLocalizableType = skill_card_title;\n    const defaultKey = `${skill_card_type}Skill`;\n    const defaultMessage = messages[defaultKey] || messages.defaultSkill;\n\n    switch (code) {\n        case 'skills_faces':\n            return <FormattedMessage {...messages.faceSkill} />;\n        case 'skills_transcript':\n            return <FormattedMessage {...messages.transcriptSkill} />;\n        case 'skills_topics':\n            return <FormattedMessage {...messages.topicsSkill} />;\n        case 'skills_status':\n            return <FormattedMessage {...messages.statusSkill} />;\n        case 'skills_error':\n            return <FormattedMessage {...messages.error} />;\n        default:\n            return message || <FormattedMessage {...defaultMessage} />;\n    }\n};\n\nconst SidebarSkills = ({ file, cards, errors, getViewer, onSkillChange }: Props): Array<React.Node> => {\n    const { permissions = {} }: BoxItem = file;\n    const isSkillEditable = !!permissions.can_upload;\n\n    return cards.map((card: SkillCard, index: number) => {\n        if (card.error && !card.status) {\n            card.skill_card_type = SKILLS_STATUS;\n            card.status = {\n                code: SKILLS_ERROR_UNKNOWN,\n            };\n            delete card.error;\n        }\n\n        const { id } = card;\n        const cardId = id || uniqueId('card_');\n        const isValid = isValidSkillsCard(file, card);\n        const interactionTarget = getCardInteractionTarget(card);\n        const title = getCardTitle(card);\n        const hasEntries = Array.isArray(card.entries) ? card.entries.length > 0 : isValid;\n\n        return isValid ? (\n            <SidebarSection key={cardId} interactionTarget={interactionTarget} isOpen={hasEntries} title={title}>\n                <SidebarSkillsCard\n                    card={card}\n                    cards={cards}\n                    getViewer={getViewer}\n                    hasError={!!errors[index]}\n                    isEditable={isSkillEditable}\n                    onSkillChange={(...args) => onSkillChange(index, ...args)}\n                />\n            </SidebarSection>\n        ) : null;\n    });\n};\n\nexport default SidebarSkills;\n","/**\n * @flow\n * @file Skills card component\n * @author Box\n */\n\nimport React from 'react';\nimport Status from './status';\nimport Transcript from './transcript';\nimport Keywords from './keywords';\nimport Faces from './faces';\nimport { SKILLS_TRANSCRIPT, SKILLS_KEYWORD, SKILLS_TIMELINE, SKILLS_FACE, SKILLS_STATUS } from '../../../constants';\nimport type { SkillCard } from '../../../common/types/skills';\n\ntype Props = {\n    card: SkillCard,\n    cards: Array<SkillCard>,\n    getViewer: Function,\n    hasError: boolean,\n    isEditable: boolean,\n    onSkillChange: Function,\n};\n\nconst SidebarSkillsCard = ({ card, cards, hasError, isEditable, onSkillChange, getViewer }: Props) => {\n    switch (card.skill_card_type) {\n        case SKILLS_KEYWORD:\n            return (\n                <Keywords\n                    card={card}\n                    getViewer={getViewer}\n                    hasError={hasError}\n                    isEditable={isEditable}\n                    onSkillChange={onSkillChange}\n                    transcript={\n                        isEditable\n                            ? cards.find(({ skill_card_type }) => skill_card_type === SKILLS_TRANSCRIPT)\n                            : undefined\n                    }\n                />\n            );\n        case SKILLS_TIMELINE:\n        case SKILLS_FACE:\n            return (\n                <Faces\n                    card={card}\n                    getViewer={getViewer}\n                    hasError={hasError}\n                    isEditable={isEditable}\n                    onSkillChange={onSkillChange}\n                />\n            );\n        case SKILLS_TRANSCRIPT:\n            return (\n                <Transcript\n                    card={card}\n                    getViewer={getViewer}\n                    hasError={hasError}\n                    isEditable={isEditable}\n                    onSkillChange={onSkillChange}\n                />\n            );\n        case SKILLS_STATUS:\n            return <Status card={card} />;\n        default:\n            return null;\n    }\n};\n\nexport default SidebarSkillsCard;\n","/**\n * @flow\n * @file File Keywords SkillCard component\n * @author Box\n */\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport PlainButton from '../../../../components/plain-button/PlainButton';\nimport IconClose from '../../../../icons/general/IconClose';\nimport IconMinus from '../../../../icons/general/IconMinus';\nimport { SKILLS_TARGETS } from '../../../common/interactionTargets';\nimport { COLOR_999, COLOR_WHITE } from '../../../../constants';\nimport type { SkillCardEntry } from '../../../../common/types/skills';\n\nimport './Face.scss';\n\ntype Props = {\n    face: SkillCardEntry,\n    isEditing: boolean,\n    onDelete: Function,\n    onSelect: Function,\n    selected?: SkillCardEntry,\n};\n\nconst Face = ({ face, selected, isEditing, onDelete, onSelect }: Props) => {\n    const isAnyFaceSelected = !!selected;\n    const isCurrentFaceSelected = face === selected;\n    const isFaceSelected = isAnyFaceSelected && isCurrentFaceSelected && !isEditing;\n    const faceClassName = classNames('be-face-wrapper', {\n        'be-face-unselected': !isEditing && isAnyFaceSelected && !isCurrentFaceSelected,\n    });\n\n    return (\n        <div className={faceClassName}>\n            <PlainButton\n                className=\"be-face\"\n                data-resin-target={SKILLS_TARGETS.FACES.FACE}\n                onClick={() => !isEditing && onSelect(face)}\n                type=\"button\"\n            >\n                <img alt={face.text} src={face.image_url} title={face.text} />\n                {isFaceSelected && <IconMinus color={COLOR_WHITE} />}\n            </PlainButton>\n            {isEditing && (\n                <PlainButton\n                    className=\"be-face-delete\"\n                    data-resin-target={SKILLS_TARGETS.FACES.DELETE}\n                    onClick={() => onDelete(face)}\n                    type=\"button\"\n                >\n                    <IconClose color={COLOR_999} height={16} width={16} />\n                </PlainButton>\n            )}\n        </div>\n    );\n};\n\nexport default Face;\n","// extracted by mini-css-extract-plugin","/**\n * @flow\n * @file Faces Skill Card component\n * @author Box\n */\n\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport classNames from 'classnames';\nimport PlainButton from '../../../../components/plain-button/PlainButton';\nimport PrimaryButton from '../../../../components/primary-button/PrimaryButton';\nimport LoadingIndicatorWrapper from '../../../../components/loading-indicator/LoadingIndicatorWrapper';\nimport InlineError from '../../../../components/inline-error/InlineError';\nimport Tooltip from '../../../../components/tooltip/Tooltip';\nimport Button from '../../../../components/button/Button';\nimport IconEdit from '../../../../icons/general/IconEdit';\nimport messages from '../../../common/messages';\nimport { SKILLS_TARGETS } from '../../../common/interactionTargets';\nimport Face from './Face';\nimport Timeline from '../timeline';\nimport type { SkillCardEntry, SkillCard } from '../../../../common/types/skills';\nimport './Faces.scss';\n\ntype Props = {\n    card: SkillCard,\n    getViewer?: Function,\n    hasError: boolean,\n    isEditable: boolean,\n    onSkillChange: Function,\n};\n\ntype State = {\n    faces: Array<SkillCardEntry>,\n    hasError: boolean,\n    isEditing: boolean,\n    isLoading: boolean,\n    removes: Array<SkillCardEntry>,\n    selected?: SkillCardEntry,\n};\n\nclass Faces extends React.PureComponent<Props, State> {\n    props: Props;\n\n    state: State;\n\n    /**\n     * [constructor]\n     *\n     * @public\n     * @return {Faces}\n     */\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            faces: props.card.entries,\n            removes: [],\n            isEditing: props.hasError,\n            hasError: props.hasError,\n            isLoading: false,\n        };\n    }\n\n    /**\n     * Helper to reset the state\n     *\n     * @private\n     * @param {Object} props - component props\n     * @return {void}\n     */\n    resetState(props: Props): void {\n        this.setState({\n            faces: props.card.entries,\n            removes: [],\n            isEditing: false,\n            selected: undefined,\n            hasError: false,\n            isLoading: false,\n        });\n    }\n\n    /**\n     * Toggles the edit mode\n     *\n     * @private\n     * @return {void}\n     */\n    toggleIsEditing = (): void => {\n        this.setState(prevState => ({\n            isEditing: !prevState.isEditing,\n        }));\n    };\n\n    /**\n     * Toggles face selection\n     *\n     * @private\n     * @return {void}\n     */\n    onSelect = (face: SkillCardEntry): void => {\n        const { selected } = this.state;\n        this.setState({\n            selected: selected === face ? undefined : face,\n        });\n    };\n\n    /**\n     * Deletes a face\n     *\n     * @private\n     * @return {void}\n     */\n    onDelete = (face: SkillCardEntry): void => {\n        const { removes } = this.state;\n        removes.push(face);\n        this.setState({ removes: removes.slice(0) });\n    };\n\n    /**\n     * Saves the new card data\n     *\n     * @private\n     * @return {void}\n     */\n    onSave = (): void => {\n        const { onSkillChange }: Props = this.props;\n        const { removes }: State = this.state;\n        this.toggleIsEditing();\n        if (removes.length > 0) {\n            this.setState({ isLoading: true });\n            onSkillChange(removes);\n        }\n    };\n\n    /**\n     * Cancels editing\n     *\n     * @private\n     * @return {void}\n     */\n    onCancel = (): void => {\n        this.resetState(this.props);\n    };\n\n    /**\n     * Renders the faces\n     *\n     * @private\n     * @return {void}\n     */\n    render() {\n        const { card, isEditable, getViewer }: Props = this.props;\n        const { selected, faces, removes, isEditing, hasError, isLoading }: State = this.state;\n        const { duration }: SkillCard = card;\n        const hasFaces = faces.length > 0;\n        const entries = faces.filter((face: SkillCardEntry) => !removes.includes(face));\n        const editClassName = classNames('be-face-edit', {\n            'be-faces-is-editing': isEditing,\n        });\n\n        return (\n            <LoadingIndicatorWrapper className=\"be-faces\" isLoading={isLoading}>\n                {hasFaces && isEditable && !isLoading && (\n                    <Tooltip text={<FormattedMessage {...messages.editLabel} />}>\n                        <PlainButton\n                            className={editClassName}\n                            data-resin-target={SKILLS_TARGETS.FACES.EDIT}\n                            onClick={this.toggleIsEditing}\n                            type=\"button\"\n                        >\n                            <IconEdit />\n                        </PlainButton>\n                    </Tooltip>\n                )}\n                {hasError && (\n                    <InlineError title={<FormattedMessage {...messages.sidebarSkillsErrorTitle} />}>\n                        <FormattedMessage {...messages.sidebarSkillsErrorContent} />\n                    </InlineError>\n                )}\n                {hasFaces ? (\n                    entries.map((face: SkillCardEntry, index: number) => (\n                        /* eslint-disable react/no-array-index-key */\n                        <Face\n                            key={index}\n                            face={face}\n                            isEditing={isEditing}\n                            onDelete={this.onDelete}\n                            onSelect={this.onSelect}\n                            selected={selected}\n                        />\n                        /* eslint-enable react/no-array-index-key */\n                    ))\n                ) : (\n                    <FormattedMessage {...messages.skillNoInfoFoundError} />\n                )}\n                {!!selected && !isEditing && Array.isArray(selected.appears) && selected.appears.length > 0 && (\n                    <Timeline\n                        duration={duration}\n                        getViewer={getViewer}\n                        interactionTarget={SKILLS_TARGETS.FACES.TIMELINE}\n                        timeslices={selected.appears}\n                    />\n                )}\n                {isEditing && (\n                    <div className=\"be-faces-buttons\">\n                        <Button\n                            data-resin-target={SKILLS_TARGETS.FACES.EDIT_CANCEL}\n                            onClick={this.onCancel}\n                            type=\"button\"\n                        >\n                            <FormattedMessage {...messages.cancel} />\n                        </Button>\n                        <PrimaryButton\n                            data-resin-target={SKILLS_TARGETS.FACES.EDIT_SAVE}\n                            onClick={this.onSave}\n                            type=\"button\"\n                        >\n                            <FormattedMessage {...messages.save} />\n                        </PrimaryButton>\n                    </div>\n                )}\n            </LoadingIndicatorWrapper>\n        );\n    }\n}\n\nexport default Faces;\n","// extracted by mini-css-extract-plugin","// @flow\nexport { default } from './Faces';\n","/**\n * @flow\n * @file Editable Skill Keywords card component\n * @author Box\n */\n\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport PillSelector from '../../../../components/pill-selector-dropdown/PillSelector';\nimport PrimaryButton from '../../../../components/primary-button/PrimaryButton';\nimport Button from '../../../../components/button/Button';\nimport messages from '../../../common/messages';\nimport { SKILLS_TARGETS } from '../../../common/interactionTargets';\nimport getPills from './keywordUtils';\nimport type { Pill, Pills } from './flowTypes';\nimport type { SkillCardEntry } from '../../../../common/types/skills';\nimport './EditableKeywords.scss';\n\ntype Props = {\n    keywords: Array<SkillCardEntry>,\n    onAdd: Function,\n    onCancel: Function,\n    onDelete: Function,\n    onSave: Function,\n};\n\ntype State = {\n    isInCompositionMode: boolean,\n    keyword: string,\n    pills: Pills,\n};\n\nclass EditableKeywords extends React.PureComponent<Props, State> {\n    props: Props;\n\n    state: State;\n\n    /**\n     * [constructor]\n     *\n     * @public\n     * @return {EditableKeywords}\n     */\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            pills: getPills(props.keywords),\n            keyword: '',\n            isInCompositionMode: false,\n        };\n    }\n\n    /**\n     * Called when keywords gets new properties.\n     * Should reset to original state.\n     *\n     * @private\n     * @param {Object} nextProps - component props\n     * @return {void}\n     */\n    componentDidUpdate({ keywords: prevKeywords }: Props): void {\n        const { keywords } = this.props;\n\n        if (prevKeywords !== keywords) {\n            this.setState({ pills: getPills(keywords), keyword: '' });\n        }\n    }\n\n    /**\n     * Called when keywords gets new properties.\n     * Should reset to original state.\n     *\n     * @private\n     * @param {Object} option - pill\n     * @param {number} index - pill index\n     * @return {void}\n     */\n    onRemove = (option: Pill, index: number): void => {\n        // eslint-disable-line\n        const { onDelete, keywords }: Props = this.props;\n        onDelete(keywords[index]);\n    };\n\n    /**\n     * When pressing enter in the pill input box\n     *\n     * @private\n     * @param {Event} event - keyboard event\n     * @return {void}\n     */\n    onKeyDown = ({ key }: SyntheticKeyboardEvent<HTMLInputElement>): void => {\n        if (key === 'Enter' && !this.state.isInCompositionMode) {\n            this.onBlur();\n        }\n    };\n\n    /**\n     * Called when pill selector is blurred.\n     * Adds a new pill if needed.\n     *\n     * @private\n     * @return {void}\n     */\n    onBlur = () => {\n        const { onAdd }: Props = this.props;\n        const { keyword } = this.state;\n\n        if (keyword) {\n            onAdd({\n                type: 'text',\n                text: keyword,\n            });\n        }\n    };\n\n    /**\n     * Enables composition mode.\n     *\n     * @private\n     * @return {void}\n     */\n    onCompositionStart = () => {\n        this.setState({ isInCompositionMode: true });\n    };\n\n    /**\n     * Disables composition mode.\n     *\n     * @private\n     * @return {void}\n     */\n    onCompositionEnd = () => {\n        this.setState({ isInCompositionMode: false });\n    };\n\n    /**\n     * Called when pill selector gets new input value.\n     *\n     * @private\n     * @return {void}\n     */\n    onInput = (event: SyntheticKeyboardEvent<HTMLInputElement>) => {\n        const currentTarget = (event.currentTarget: HTMLInputElement);\n        this.setState({\n            keyword: currentTarget.value,\n        });\n    };\n\n    /**\n     * Renders the keywords\n     *\n     * @private\n     * @return {void}\n     */\n    render() {\n        const { onSave, onCancel }: Props = this.props;\n        const { pills, keyword }: State = this.state;\n        return (\n            <span className=\"bdl-EditableKeywords\">\n                <PillSelector\n                    onBlur={this.onBlur}\n                    onCompositionEnd={this.onCompositionEnd}\n                    onCompositionStart={this.onCompositionStart}\n                    onInput={this.onInput}\n                    onKeyDown={this.onKeyDown}\n                    onPaste={this.onInput}\n                    onRemove={this.onRemove}\n                    selectedOptions={pills}\n                    value={keyword}\n                />\n                <div className=\"be-keywords-buttons\">\n                    <Button data-resin-target={SKILLS_TARGETS.KEYWORDS.EDIT_CANCEL} onClick={onCancel} type=\"button\">\n                        <FormattedMessage {...messages.cancel} />\n                    </Button>\n                    <PrimaryButton data-resin-target={SKILLS_TARGETS.KEYWORDS.EDIT_SAVE} onClick={onSave} type=\"button\">\n                        <FormattedMessage {...messages.save} />\n                    </PrimaryButton>\n                </div>\n            </span>\n        );\n    }\n}\n\nexport default EditableKeywords;\n","// extracted by mini-css-extract-plugin","/**\n * @flow\n * @file File Keywords SkillCard component\n * @author Box\n */\n\nimport React, { PureComponent } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport classNames from 'classnames';\nimport PlainButton from '../../../../components/plain-button/PlainButton';\nimport IconEdit from '../../../../icons/general/IconEdit';\nimport LoadingIndicatorWrapper from '../../../../components/loading-indicator/LoadingIndicatorWrapper';\nimport InlineError from '../../../../components/inline-error/InlineError';\nimport Tooltip from '../../../../components/tooltip/Tooltip';\nimport messages from '../../../common/messages';\nimport { SKILLS_TARGETS } from '../../../common/interactionTargets';\nimport EditableKeywords from './EditableKeywords';\nimport ReadOnlyKeywords from './ReadOnlyKeywords';\nimport type { SkillCardEntry, SkillCard } from '../../../../common/types/skills';\n\nimport './Keywords.scss';\n\ntype Props = {\n    card: SkillCard,\n    getViewer?: Function,\n    hasError: boolean,\n    isEditable: boolean,\n    onSkillChange: Function,\n    transcript?: SkillCard,\n};\n\ntype State = {\n    adds: Array<SkillCardEntry>,\n    hasError: boolean,\n    isEditing: boolean,\n    isLoading: boolean,\n    keywords: Array<SkillCardEntry>,\n    removes: Array<SkillCardEntry>,\n};\n\nclass Keywords extends PureComponent<Props, State> {\n    props: Props;\n\n    state: State;\n\n    /**\n     * [constructor]\n     *\n     * @public\n     * @return {Keywords}\n     */\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            keywords: props.card.entries,\n            adds: [],\n            removes: [],\n            isEditing: props.hasError,\n            hasError: props.hasError,\n            isLoading: false,\n        };\n    }\n\n    /**\n     * Helper to reset the state\n     *\n     * @private\n     * @param {Object} props - component props\n     * @return {void}\n     */\n    resetState(props: Props): void {\n        this.setState({\n            keywords: props.card.entries,\n            adds: [],\n            removes: [],\n            isEditing: false,\n            hasError: false,\n            isLoading: false,\n        });\n    }\n\n    /**\n     * Toggles the edit mode\n     *\n     * @private\n     * @return {void}\n     */\n    toggleIsEditing = (): void => {\n        this.setState(prevState => ({\n            isEditing: !prevState.isEditing,\n        }));\n    };\n\n    /**\n     * Adds a new keyword.\n     * Iterates over the transcript to find locations\n     *\n     * @private\n     * @return {void}\n     */\n    onAdd = (keyword: SkillCardEntry): void => {\n        const { transcript }: Props = this.props;\n        const { adds } = this.state;\n        const locations = [];\n        const regex = new RegExp(`\\\\b${((keyword.text: any): string)}\\\\b`, 'i');\n\n        if (transcript && Array.isArray(transcript.entries)) {\n            transcript.entries.forEach(({ text, appears }: SkillCardEntry): void => {\n                if (text && regex.test(text) && Array.isArray(appears) && appears.length > 0) {\n                    locations.push(appears[0]);\n                }\n            });\n        }\n\n        keyword.appears = locations;\n        adds.push(keyword);\n        this.setState({ adds: adds.slice(0) });\n    };\n\n    /**\n     * Deletes a keyword\n     *\n     * @private\n     * @return {void}\n     */\n    onDelete = (keyword: SkillCardEntry): void => {\n        const { adds, removes } = this.state;\n        const addedIndex = adds.findIndex(added => added === keyword);\n        if (addedIndex > -1) {\n            adds.splice(addedIndex, 1);\n            this.setState({ adds: adds.slice(0) });\n        } else {\n            removes.push(keyword);\n            this.setState({ removes: removes.slice(0) });\n        }\n    };\n\n    /**\n     * Saves the new card data\n     *\n     * @private\n     * @return {void}\n     */\n    onSave = (): void => {\n        const { onSkillChange }: Props = this.props;\n        const { removes, adds }: State = this.state;\n        this.toggleIsEditing();\n        if (removes.length > 0 || adds.length > 0) {\n            this.setState({ isLoading: true });\n            onSkillChange(removes, adds);\n        }\n    };\n\n    /**\n     * Cancels editing\n     *\n     * @private\n     * @return {void}\n     */\n    onCancel = (): void => {\n        this.resetState(this.props);\n    };\n\n    /**\n     * Renders the keywords\n     *\n     * @private\n     * @return {void}\n     */\n    render() {\n        const { card, getViewer, isEditable }: Props = this.props;\n        const { duration }: SkillCard = card;\n        const { isEditing, isLoading, hasError, keywords, removes, adds }: State = this.state;\n        const hasKeywords = keywords.length > 0;\n        const entries = keywords.filter((face: SkillCardEntry) => !removes.includes(face)).concat(adds);\n        const editClassName = classNames('be-keyword-edit', {\n            'be-keyword-is-editing': isEditing,\n        });\n\n        return (\n            <LoadingIndicatorWrapper className=\"be-keywords\" isLoading={isLoading}>\n                {hasKeywords && isEditable && !isLoading && (\n                    <Tooltip text={<FormattedMessage {...messages.editLabel} />}>\n                        <PlainButton\n                            className={editClassName}\n                            data-resin-target={SKILLS_TARGETS.KEYWORDS.EDIT}\n                            onClick={this.toggleIsEditing}\n                            type=\"button\"\n                        >\n                            <IconEdit />\n                        </PlainButton>\n                    </Tooltip>\n                )}\n                {hasError && (\n                    <InlineError title={<FormattedMessage {...messages.sidebarSkillsErrorTitle} />}>\n                        <FormattedMessage {...messages.sidebarSkillsErrorContent} />\n                    </InlineError>\n                )}\n                {isEditing && (\n                    <EditableKeywords\n                        keywords={entries}\n                        onAdd={this.onAdd}\n                        onCancel={this.onCancel}\n                        onDelete={this.onDelete}\n                        onSave={this.onSave}\n                    />\n                )}\n                {!isEditing && hasKeywords && (\n                    <ReadOnlyKeywords duration={duration} getViewer={getViewer} keywords={entries} />\n                )}\n                {!isEditing && !hasKeywords && <FormattedMessage {...messages.skillNoInfoFoundError} />}\n            </LoadingIndicatorWrapper>\n        );\n    }\n}\n\nexport default Keywords;\n","// extracted by mini-css-extract-plugin","/**\n * @flow\n * @file Read Only Keywords Card component\n * @author Box\n */\n\nimport * as React from 'react';\nimport PillCloud from '../../../../components/pill-cloud/PillCloud';\nimport { SKILLS_TARGETS, INTERACTION_TARGET } from '../../../common/interactionTargets';\nimport Timeline from '../timeline';\nimport getPills from './keywordUtils';\nimport type { Pill, Pills } from './flowTypes';\nimport type { SkillCardEntry } from '../../../../common/types/skills';\nimport './ReadOnlyKeywords.scss';\n\ntype Props = {\n    duration?: number,\n    getViewer?: Function,\n    keywords: Array<SkillCardEntry>,\n};\n\ntype State = {\n    selectedIndex: number,\n};\n\nclass ReadOnlyselecteds extends React.PureComponent<Props, State> {\n    props: Props;\n\n    state: State = {\n        selectedIndex: -1,\n    };\n\n    /**\n     * Shows the time line by selecting the keyword\n     *\n     * @private\n     * @param {Object} pill - keyword\n     * @return {void}\n     */\n    onSelect = (pill: Pill) => {\n        const { selectedIndex }: State = this.state;\n        const newIndex: number = ((pill.value: any): number);\n        this.setState({\n            selectedIndex: selectedIndex === newIndex ? -1 : newIndex,\n        });\n    };\n\n    /**\n     * Renders the keywords\n     *\n     * @private\n     * @return {void}\n     */\n    render() {\n        const { keywords, getViewer, duration }: Props = this.props;\n        const { selectedIndex }: State = this.state;\n        const options: Pills = getPills(keywords);\n        const selected = keywords[selectedIndex];\n        const pillCloudProps = selected ? { selectedOptions: [options[selectedIndex]] } : {};\n\n        return (\n            <>\n                <PillCloud\n                    onSelect={this.onSelect}\n                    options={options}\n                    {...pillCloudProps}\n                    buttonProps={{\n                        [INTERACTION_TARGET]: SKILLS_TARGETS.KEYWORDS.SELECT,\n                    }}\n                />\n                {!!selected && Array.isArray(selected.appears) && selected.appears.length > 0 && (\n                    <Timeline\n                        duration={duration}\n                        getViewer={getViewer}\n                        interactionTarget={SKILLS_TARGETS.KEYWORDS.TIMELINE}\n                        text={selected.text}\n                        timeslices={selected.appears}\n                    />\n                )}\n            </>\n        );\n    }\n}\n\nexport default ReadOnlyselecteds;\n","// extracted by mini-css-extract-plugin","// @flow\nexport { default } from './Keywords';\n","/**\n * @flow\n * @file Utilities for keywords skill\n * @author Box\n */\n\nimport type { Pill } from './flowTypes';\nimport type { SkillCardEntry } from '../../../../common/types/skills';\n\n/**\n * Converts skill card entries into pills\n *\n * @private\n * @param {Array<Object>} props - keyword entries\n * @return {Array<Object>} pills\n */\nconst getPills = (keywords: Array<SkillCardEntry> = []): Array<Pill> =>\n    keywords.map((keyword: SkillCardEntry, index: number): Pill => ({\n        displayText: ((keyword.text: any): string),\n        value: index,\n    }));\n\nexport default getPills;\n","/**\n * @flow\n * @file Status Skill Card component\n * @author Box\n */\n\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport messages from '../../../common/messages';\nimport {\n    SKILLS_ERROR_EXTERNAL_AUTH,\n    SKILLS_ERROR_BILLING,\n    SKILLS_ERROR_UNKNOWN,\n    SKILLS_ERROR_INVOCATIONS,\n    SKILLS_ERROR_FILE_PROCESSING,\n    SKILLS_ERROR_INVALID_FILE_SIZE,\n    SKILLS_ERROR_INVALID_FILE_FORMAT,\n    SKILLS_STATUS_PENDING,\n    SKILLS_STATUS_INVOKED,\n} from '../../../../constants';\nimport type { SkillCard, SkillCardLocalizableType } from '../../../../common/types/skills';\n\ntype Props = {\n    card: SkillCard,\n};\n\nconst Status = ({ card }: Props) => {\n    const { status = {} }: SkillCard = card;\n    const { code, message }: SkillCardLocalizableType = status;\n    let localizedMessage = messages.skillUnknownError;\n\n    switch (code) {\n        case SKILLS_ERROR_INVALID_FILE_SIZE:\n            localizedMessage = messages.skillInvalidFileSizeError;\n            break;\n        case SKILLS_ERROR_INVALID_FILE_FORMAT:\n            localizedMessage = messages.skillInvalidFileExtensionError;\n            break;\n        case SKILLS_ERROR_EXTERNAL_AUTH:\n        case SKILLS_ERROR_BILLING:\n        case SKILLS_ERROR_INVOCATIONS:\n        case SKILLS_ERROR_UNKNOWN:\n            localizedMessage = messages.skillUnknownError;\n            break;\n        case SKILLS_ERROR_FILE_PROCESSING:\n            localizedMessage = messages.skillFileProcessingError;\n            break;\n        case SKILLS_STATUS_PENDING:\n            localizedMessage = messages.skillPendingStatus;\n            break;\n        case SKILLS_STATUS_INVOKED:\n            localizedMessage = messages.skillInvokedStatus;\n            break;\n        default:\n            if (message) {\n                return message;\n            }\n    }\n\n    return <FormattedMessage {...localizedMessage} />;\n};\n\nexport default Status;\n","// @flow\nexport { default } from './Status';\n","/**\n * @flow\n * @file Timeline component\n * @author Box\n */\n\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport PlainButton from '../../../../components/plain-button/PlainButton';\nimport IconTrackNext from '../../../../icons/general/IconTrackNext';\nimport IconTrackPrevious from '../../../../icons/general/IconTrackPrevious';\nimport messages from '../../../common/messages';\nimport { SKILLS_TARGETS } from '../../../common/interactionTargets';\nimport Timeslice from './Timeslice';\nimport { isValidStartTime } from '../transcript/timeSliceUtils';\nimport type { SkillCardEntryTimeSlice, SkillCardEntryType } from '../../../../common/types/skills';\n\nimport './Timeline.scss';\n\ntype Props = {\n    duration?: number,\n    getViewer?: Function,\n    interactionTarget: string,\n    text?: string,\n    timeslices?: SkillCardEntryTimeSlice[],\n    type?: SkillCardEntryType,\n    url?: string,\n};\n\nconst Timeline = ({ text = '', duration = 0, timeslices = [], getViewer, interactionTarget }: Props) => {\n    let timeSliceIndex = -1;\n\n    const playSegment = (index: number, incr: number = 0) => {\n        const newIndex = incr > 0 ? Math.min(timeslices.length - 1, index + incr) : Math.max(0, index + incr);\n        const viewer = getViewer ? getViewer() : null;\n        const timeslice = timeslices[newIndex];\n        const validTime = isValidStartTime(timeslice);\n\n        if (validTime && viewer && typeof viewer.play === 'function') {\n            viewer.play(timeslice.start);\n            timeSliceIndex = newIndex;\n        }\n    };\n\n    return (\n        <div className=\"be-timeline\">\n            {text && <div className=\"be-timeline-label\">{text}</div>}\n            <div className=\"be-timeline-line-wrapper\">\n                <div className=\"be-timeline-line\" />\n                {timeslices.map(\n                    ({ start, end }: SkillCardEntryTimeSlice, index) => (\n                        /* eslint-disable react/no-array-index-key */\n                        <Timeslice\n                            key={index}\n                            duration={duration}\n                            end={end}\n                            index={index}\n                            interactionTarget={interactionTarget}\n                            onClick={playSegment}\n                            start={start}\n                        />\n                    ),\n                    /* eslint-enable react/no-array-index-key */\n                )}\n            </div>\n            <div className=\"be-timeline-btns\">\n                <PlainButton\n                    data-resin-target={SKILLS_TARGETS.TIMELINE.PREVIOUS}\n                    onClick={() => playSegment(timeSliceIndex, -1)}\n                    type=\"button\"\n                >\n                    <IconTrackPrevious title={<FormattedMessage {...messages.previousSegment} />} />\n                </PlainButton>\n                <PlainButton\n                    data-resin-target={SKILLS_TARGETS.TIMELINE.NEXT}\n                    onClick={() => playSegment(timeSliceIndex, 1)}\n                    type=\"button\"\n                >\n                    <IconTrackNext title={<FormattedMessage {...messages.nextSegment} />} />\n                </PlainButton>\n            </div>\n        </div>\n    );\n};\n\nexport default Timeline;\n","// extracted by mini-css-extract-plugin","/**\n * @flow\n * @file Timeline line component\n * @author Box\n */\n\nimport React from 'react';\nimport PlainButton from '../../../../components/plain-button/PlainButton';\nimport './Timeslice.scss';\n\ntype Props = {\n    duration: number,\n    end?: number,\n    index: number,\n    interactionTarget: string,\n    onClick: Function,\n    start: number,\n};\n\nconst LENGTH_TEXT_ITEMLINE = 290; // match with css\nconst MIN_WIDTH = 6; // Need at least some width to be clickable\n\nconst Timeslice = ({ start, end, duration, onClick, index, interactionTarget }: Props) => {\n    if (typeof start !== 'number' || !duration || start >= duration) {\n        return null;\n    }\n\n    const barLength = LENGTH_TEXT_ITEMLINE;\n    let startLeft = Math.round((start * barLength) / duration);\n    const minEnding = startLeft + MIN_WIDTH; // Need at least some width to be clickable\n    const ending = typeof end === 'number' ? Math.max(minEnding, (end * barLength) / duration) : minEnding;\n    const endLeft = Math.round(Math.min(barLength, ending));\n    let width = endLeft - startLeft;\n\n    // If width is too small re-adjust the left position\n    // to get to at least 6px wide for clickability\n    if (width < MIN_WIDTH) {\n        startLeft -= MIN_WIDTH - width;\n        width = MIN_WIDTH;\n    }\n\n    return (\n        <PlainButton\n            className=\"be-timeline-time\"\n            data-resin-target={interactionTarget}\n            onClick={() => onClick(index)}\n            style={{\n                left: `${startLeft}px`,\n                width: `${width}px`,\n            }}\n            type=\"button\"\n        />\n    );\n};\n\nexport default Timeslice;\n","// extracted by mini-css-extract-plugin","// @flow\nexport { default } from './Timeline';\n","/**\n * @flow\n * @file Editable transcript row component\n * @author Box\n */\n\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport TextareaAutosize from 'react-textarea-autosize';\nimport PrimaryButton from '../../../../components/primary-button/PrimaryButton';\nimport Button from '../../../../components/button/Button';\nimport messages from '../../../common/messages';\nimport { SKILLS_TARGETS } from '../../../common/interactionTargets';\nimport './EditingTranscriptRow.scss';\n\ntype Props = {\n    onCancel: Function,\n    onChange: Function,\n    onSave: Function,\n    text?: string,\n    time?: string,\n};\n\nconst EditingTranscriptRow = ({ time, text = '', onSave, onCancel, onChange }: Props) => (\n    <div className=\"be-transcript-row be-transcript-editing-row\">\n        {time && <div className=\"be-transcript-time\">{time}</div>}\n        <div className=\"be-transcript-text\">\n            <TextareaAutosize maxRows={10} onChange={onChange} value={text} />\n            <div className=\"be-transcript-buttons\">\n                <Button data-resin-target={SKILLS_TARGETS.TRANSCRIPTS.EDIT_CANCEL} onClick={onCancel} type=\"button\">\n                    <FormattedMessage {...messages.cancel} />\n                </Button>\n                <PrimaryButton data-resin-target={SKILLS_TARGETS.TRANSCRIPTS.EDIT_SAVE} onClick={onSave} type=\"button\">\n                    <FormattedMessage {...messages.save} />\n                </PrimaryButton>\n            </div>\n        </div>\n    </div>\n);\n\nexport default EditingTranscriptRow;\n","// extracted by mini-css-extract-plugin","/**\n * @flow\n * @file Read only transcript row component\n * @author Box\n */\n\nimport * as React from 'react';\nimport PlainButton from '../../../../components/plain-button/PlainButton';\n\ntype Props = {\n    interactionTarget: string,\n    onClick: Function,\n    text?: string,\n    time?: string,\n};\n\nconst ReadOnlyTranscriptRow = ({ time, text = '', onClick, interactionTarget }: Props) => (\n    <PlainButton className=\"be-transcript-row\" data-resin-target={interactionTarget} onClick={onClick} type=\"button\">\n        {time && <div className=\"be-transcript-time\">{time}</div>}\n        <div className=\"be-transcript-text\">{text}</div>\n    </PlainButton>\n);\n\nexport default ReadOnlyTranscriptRow;\n","/**\n * @flow\n * @file Transcript component\n * @author Box\n */\n\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport classNames from 'classnames';\nimport { bdlGray50 } from '../../../../styles/variables';\nimport PlainButton from '../../../../components/plain-button/PlainButton';\nimport IconEdit from '../../../../icons/general/IconEdit';\nimport IconCopy from '../../../../icons/general/IconCopy';\nimport IconExpand from '../../../../icons/general/IconExpand';\nimport IconCollapse from '../../../../icons/general/IconCollapse';\nimport { formatTime } from '../../../../utils/datetime';\nimport LoadingIndicatorWrapper from '../../../../components/loading-indicator/LoadingIndicatorWrapper';\nimport Tooltip from '../../../../components/tooltip/Tooltip';\nimport { copy } from '../../../../utils/download';\nimport { SKILLS_TARGETS } from '../../../common/interactionTargets';\nimport messages from '../../../common/messages';\nimport { isValidTimeSlice } from './timeSliceUtils';\nimport TranscriptRow from './TranscriptRow';\nimport type { SkillCardEntry, SkillCard, SkillCardEntryTimeSlice } from '../../../../common/types/skills';\nimport './Transcript.scss';\n\ntype Props = {\n    card: SkillCard,\n    getViewer?: Function,\n    isEditable: boolean,\n    onSkillChange: Function,\n};\n\ntype State = {\n    isCollapsed: boolean,\n    isEditingIndex?: number,\n    isLoading: boolean,\n    newTranscriptText: string,\n};\n\nclass Transcript extends React.PureComponent<Props, State> {\n    props: Props;\n\n    state: State = {\n        isEditingIndex: undefined,\n        newTranscriptText: '',\n        isCollapsed: true,\n        isLoading: false,\n    };\n\n    copyBtn: HTMLButtonElement;\n\n    /**\n     * Called when transcripts gets new properties\n     *\n     * @private\n     * @return {void}\n     */\n    componentDidUpdate(prevProps: Props): void {\n        if (prevProps === this.props) {\n            return;\n        }\n\n        const wasEditing = typeof this.state.isEditingIndex === 'number';\n        this.setState({\n            isEditingIndex: wasEditing ? -1 : undefined,\n            newTranscriptText: '',\n            isLoading: false,\n        });\n    }\n\n    /**\n     * Reducer to accumulate all transcript entries for copying\n     *\n     * @param {Object} accumulator - reducer accumulator\n     * @return {string} accumulated transcript entries\n     */\n    transcriptReducer = (accumulator: string, { appears, text }: SkillCardEntry): string => {\n        const start: string =\n            isValidTimeSlice(appears) && Array.isArray(appears) ? `${formatTime(appears[0].start)}:` : '';\n        return `${accumulator}${start} ${text || ''}\\r\\n`;\n    };\n\n    /**\n     * Mapper to accumulate all transcript entries for displaying\n     *\n     * @param {Object} accumulator - reducer accumulator\n     * @param {number} index - mapper index\n     * @return {string} accumulated transcript entries\n     */\n    transcriptMapper = ({ appears, text }: SkillCardEntry, index: number): React.Node => {\n        const { isEditingIndex, newTranscriptText }: State = this.state;\n        const isEditingRow = isEditingIndex === index;\n        const transcriptText = isEditingRow ? newTranscriptText : text;\n        const interactionTarget = isEditingRow\n            ? SKILLS_TARGETS.TRANSCRIPTS.EDIT_TEXT\n            : SKILLS_TARGETS.TRANSCRIPTS.TRANSCRIPT;\n        return (\n            <TranscriptRow\n                key={index}\n                appears={appears}\n                interactionTarget={interactionTarget}\n                isEditing={isEditingRow}\n                onCancel={this.onCancel}\n                onChange={this.onChange}\n                onClick={() => this.onClick(index)}\n                onSave={this.onSave}\n                text={transcriptText}\n            />\n        );\n    };\n\n    /**\n     * Toggles the edit mode\n     *\n     * @private\n     * @return {void}\n     */\n    toggleIsEditing = (): void => {\n        this.setState(prevState => ({\n            isEditingIndex: typeof prevState.isEditingIndex === 'number' ? undefined : -1,\n        }));\n    };\n\n    /**\n     * Previews a transcript segment\n     *\n     * @private\n     * @param {number|void} [index] - row index to edit\n     * @return {void}\n     */\n    previewSegment(index: number) {\n        const {\n            card: { entries },\n            getViewer,\n        }: Props = this.props;\n        const { appears } = entries[index];\n        const viewer = getViewer ? getViewer() : null;\n        const isValid = isValidTimeSlice(appears) && Array.isArray(appears) && appears.length === 1;\n        const timeSlice = ((appears: any): Array<SkillCardEntryTimeSlice>);\n        const start = isValid ? timeSlice[0].start : 0;\n\n        if (isValid && viewer && typeof viewer.play === 'function') {\n            viewer.play(start);\n        }\n    }\n\n    /**\n     * Saves the new card data\n     *\n     * @private\n     * @return {void}\n     */\n    onSave = (): void => {\n        const {\n            card: { entries },\n            onSkillChange,\n        }: Props = this.props;\n        const { isEditingIndex, newTranscriptText }: State = this.state;\n\n        if (typeof isEditingIndex !== 'number') {\n            return;\n        }\n\n        const entry = entries[isEditingIndex];\n        if (entry.text === newTranscriptText) {\n            this.onCancel();\n        } else {\n            this.setState({ isLoading: true, isEditingIndex: -1 });\n            onSkillChange(null, null, [\n                {\n                    replacement: { ...entry, text: newTranscriptText },\n                    replaced: entry,\n                },\n            ]);\n        }\n    };\n\n    /**\n     * Cancels editing\n     *\n     * @private\n     * @return {void}\n     */\n    onCancel = (): void => {\n        this.setState({ isEditingIndex: -1, newTranscriptText: '' });\n    };\n\n    /**\n     * Reflects changes of editing\n     *\n     * @private\n     * @param {Event} event - keyboard event\n     * @return {void}\n     */\n    onChange = (event: SyntheticKeyboardEvent<HTMLTextAreaElement>): void => {\n        const currentTarget = (event.currentTarget: HTMLTextAreaElement);\n        this.setState({\n            newTranscriptText: currentTarget.value,\n        });\n    };\n\n    /**\n     * Click handler for transcript\n     *\n     * @private\n     * @return {void}\n     */\n    onClick = (index: number): void => {\n        const {\n            card: { entries },\n        }: Props = this.props;\n        const { isEditingIndex }: State = this.state;\n        if (typeof isEditingIndex === 'number') {\n            this.setState({\n                isEditingIndex: index,\n                newTranscriptText: entries[index].text,\n            });\n        } else {\n            this.previewSegment(index);\n        }\n    };\n\n    /**\n     * Copies the transcript.\n     * Also animates the copy button.\n     *\n     * @private\n     * @return {void}\n     */\n    copyTranscript = () => {\n        const {\n            card: { entries },\n        }: Props = this.props;\n        const copiedClass = 'be-transcript-copied';\n        copy(entries.reduce(this.transcriptReducer, ''));\n\n        // Animate the button by adding a class\n        if (this.copyBtn) {\n            this.copyBtn.classList.add(copiedClass);\n        }\n\n        // Remove the animation class\n        setTimeout(() => {\n            if (this.copyBtn) {\n                this.copyBtn.classList.remove(copiedClass);\n            }\n        }, 1000);\n    };\n\n    /**\n     * Copy button reference\n     *\n     * @private\n     * @return {void}\n     */\n    copyBtnRef = (btn: HTMLButtonElement): void => {\n        this.copyBtn = btn;\n    };\n\n    /**\n     * Toggles transcript exapand and collapse\n     *\n     * @private\n     * @return {void}\n     */\n    toggleExpandCollapse = (): void => {\n        this.setState(prevState => ({\n            isCollapsed: !prevState.isCollapsed,\n        }));\n    };\n\n    /**\n     * Renders the transcript\n     *\n     * @private\n     * @return {Object}\n     */\n    render() {\n        const {\n            card: { entries },\n            isEditable,\n        }: Props = this.props;\n        const { isEditingIndex, isCollapsed, isLoading }: State = this.state;\n        const hasEntries = entries.length > 0;\n        const hasManyEntries = entries.length > 5;\n        const isEditing = typeof isEditingIndex === 'number';\n        const editBtnClassName = classNames('be-transcript-edit', {\n            'be-transcript-is-editing': isEditing,\n        });\n        const contentClassName = classNames({\n            'be-transcript-content-collapsed': isCollapsed,\n        });\n        const expandCollapseMessage = isCollapsed ? messages.expand : messages.collapse;\n\n        return (\n            <LoadingIndicatorWrapper className=\"be-transcript\" isLoading={isLoading}>\n                {hasEntries && !isLoading && (\n                    <div className=\"be-transcript-actions\">\n                        <Tooltip text={<FormattedMessage {...messages.copy} />}>\n                            <PlainButton\n                                className=\"be-transcript-copy\"\n                                data-resin-target={SKILLS_TARGETS.TRANSCRIPTS.COPY}\n                                getDOMRef={this.copyBtnRef}\n                                onClick={this.copyTranscript}\n                                type=\"button\"\n                            >\n                                <IconCopy color={bdlGray50} />\n                            </PlainButton>\n                        </Tooltip>\n                        {hasManyEntries && (\n                            <Tooltip text={<FormattedMessage {...expandCollapseMessage} />}>\n                                <PlainButton\n                                    className=\"be-transcript-expand\"\n                                    data-resin-target={SKILLS_TARGETS.TRANSCRIPTS.EXPAND}\n                                    onClick={this.toggleExpandCollapse}\n                                    type=\"button\"\n                                >\n                                    {isCollapsed ? (\n                                        <IconExpand color={bdlGray50} />\n                                    ) : (\n                                        <IconCollapse color={bdlGray50} />\n                                    )}\n                                </PlainButton>\n                            </Tooltip>\n                        )}\n                        {isEditable && (\n                            <Tooltip text={<FormattedMessage {...messages.editLabel} />}>\n                                <PlainButton\n                                    className={editBtnClassName}\n                                    data-resin-target={SKILLS_TARGETS.TRANSCRIPTS.EDIT}\n                                    onClick={this.toggleIsEditing}\n                                    type=\"button\"\n                                >\n                                    <IconEdit />\n                                </PlainButton>\n                            </Tooltip>\n                        )}\n                    </div>\n                )}\n                {isEditing ? (\n                    <div className=\"be-transcript-edit-message\">\n                        <FormattedMessage {...messages.transcriptEdit} />\n                    </div>\n                ) : null}\n                {hasEntries ? (\n                    <div className={contentClassName}>{entries.map(this.transcriptMapper)}</div>\n                ) : (\n                    <FormattedMessage {...messages.skillNoInfoFoundError} />\n                )}\n            </LoadingIndicatorWrapper>\n        );\n    }\n}\n\nexport default Transcript;\n","// extracted by mini-css-extract-plugin","/**\n * @flow\n * @file Transcript row component\n * @author Box\n */\n\nimport React from 'react';\nimport { formatTime } from '../../../../utils/datetime';\nimport ReadOnlyTranscriptRow from './ReadOnlyTranscriptRow';\nimport EditingTranscriptRow from './EditingTranscriptRow';\nimport { isValidTimeSlice } from './timeSliceUtils';\nimport type { SkillCardEntryTimeSlice } from '../../../../common/types/skills';\n\nimport './TranscriptRow.scss';\n\ntype Props = {\n    appears?: Array<SkillCardEntryTimeSlice>,\n    interactionTarget: string,\n    isEditing: boolean,\n    onCancel: Function,\n    onChange: Function,\n    onClick: Function,\n    onSave: Function,\n    text?: string,\n};\n\nconst TranscriptRow = ({ appears, text, isEditing, onClick, onSave, onCancel, onChange, interactionTarget }: Props) => {\n    const isValid = isValidTimeSlice(appears) && Array.isArray(appears) && appears.length === 1;\n    const timeSlice = ((appears: any): Array<SkillCardEntryTimeSlice>);\n    const start = isValid ? formatTime(timeSlice[0].start) : undefined;\n\n    return isEditing ? (\n        <EditingTranscriptRow onCancel={onCancel} onChange={onChange} onSave={onSave} text={text} time={start} />\n    ) : (\n        <ReadOnlyTranscriptRow interactionTarget={interactionTarget} onClick={onClick} text={text} time={start} />\n    );\n};\n\nexport default TranscriptRow;\n","// extracted by mini-css-extract-plugin","// @flow\nexport { default } from './Transcript';\n","/**\n * @flow\n * @file Transcript utils\n * @author Box\n */\nimport type { SkillCardEntryTimeSlice } from '../../../../common/types/skills';\n\n/**\n * Returns true if there is a valid start time\n *\n * @param {SkillCardEntryTimeSlice} timeslices - skill entry time slice\n * @return {boolean} if there is a valid start time\n */\nconst isValidStartTime = (timeslice: SkillCardEntryTimeSlice): boolean =>\n    !!timeslice && typeof timeslice.start === 'number';\n\n/**\n * Returns true if there is a valid time slice with valid start time\n *\n * @param {SkillCardEntryTimeSlice[]} timeslices - skill entry time slice\n * @return {boolean} if it is a valid time slice\n */\nconst isValidTimeSlice = (timeslices?: SkillCardEntryTimeSlice[]): boolean =>\n    Array.isArray(timeslices) && isValidStartTime(timeslices[0]);\n\nexport { isValidTimeSlice, isValidStartTime };\n","import * as React from 'react';\n\nimport AccessibleSVG from '../accessible-svg';\n\nimport { Icon } from '../iconTypes';\n\nconst IconClose = ({ className = '', color = '#000000', height = 24, title, width = 24 }: Icon) => (\n    <AccessibleSVG\n        className={`icon-close ${className}`}\n        height={height}\n        title={title}\n        viewBox=\"0 0 24 24\"\n        width={width}\n    >\n        <path\n            className=\"fill-color\"\n            d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n            fill={color}\n        />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </AccessibleSVG>\n);\n\nexport default IconClose;\n","import * as React from 'react';\n\nimport AccessibleSVG from '../accessible-svg';\n\nimport { Icon } from '../iconTypes';\n\nconst IconCollapse = ({ className = '', color = '#979797', height = 13, title, width = 13 }: Icon) => (\n    <AccessibleSVG\n        className={`icon-collapse ${className}`}\n        height={height}\n        title={title}\n        viewBox=\"0 0 13 13\"\n        width={width}\n    >\n        <path\n            className=\"fill-color\"\n            d=\"M8 6h4a1 1 0 0 0 0-2H9V1a1 1 0 0 0-2 0v4a1 1 0 0 0 1 1zM1 9h3v3a1 1 0 0 0 2 0V8a1 1 0 0 0-1-1H1a1 1 0 0 0 0 2z\"\n            fill={color}\n        />\n    </AccessibleSVG>\n);\n\nexport default IconCollapse;\n","import * as React from 'react';\n\nimport AccessibleSVG from '../accessible-svg';\n\nimport { Icon } from '../iconTypes';\n\nconst IconCopy = ({ className = '', color = '#999', height = 14, title, width = 14 }: Icon) => (\n    <AccessibleSVG className={`icon-copy ${className}`} height={height} title={title} viewBox=\"0 0 14 14\" width={width}>\n        <path\n            className=\"fill-color\"\n            d=\"M1 11a1 1 0 0 1-1-1V1a1 1 0 0 1 1-1h9a1 1 0 0 1 0 2H2v8a1 1 0 0 1-1 1z\"\n            fill={color}\n        />\n        <path\n            className=\"fill-color\"\n            d=\"M13 3H3v10a1 1 0 0 0 1 1h9a1 1 0 0 0 1-1V4a1 1 0 0 0-1-1zm-3 8H7a1 1 0 0 1 0-2h3a1 1 0 0 1 0 2zm0-3H7a1 1 0 0 1 0-2h3a1 1 0 0 1 0 2z\"\n            fill={color}\n        />\n    </AccessibleSVG>\n);\n\nexport default IconCopy;\n","import * as React from 'react';\n\nimport AccessibleSVG from '../accessible-svg';\n\nimport { Icon } from '../iconTypes';\n\nconst IconEdit = ({ className = '', color = '#767676', height = 14, title, width = 14 }: Icon) => (\n    <AccessibleSVG className={`icon-edit ${className}`} height={height} title={title} viewBox=\"0 0 14 14\" width={width}>\n        <path\n            className=\"fill-color\"\n            d=\"M3.21 7.89l6.47-6.48a2 2 0 0 1 2.88 2.78h-.05L6 10.72 3.21 7.89zM2.24 9l2.83 2.83L1.67 13c-.52.18-.79-.1-.62-.61z\"\n            fill={color}\n        />\n    </AccessibleSVG>\n);\n\nexport default IconEdit;\n","import * as React from 'react';\n\nimport AccessibleSVG from '../accessible-svg';\n\nimport { Icon } from '../iconTypes';\n\nconst IconExpand = ({ className = '', color = '#979797', height = 13, title, width = 13 }: Icon) => (\n    <AccessibleSVG\n        className={`icon-expand ${className}`}\n        height={height}\n        title={title}\n        viewBox=\"0 0 13 13\"\n        width={width}\n    >\n        <path\n            className=\"fill-color\"\n            d=\"M12 0H6a1 1 0 0 0 0 2h5v5a1 1 0 0 0 2 0V1a1 1 0 0 0-1-1zM7 11H2V6a1 1 0 0 0-2 0v6a1 1 0 0 0 1 1h6a1 1 0 0 0 0-2z\"\n            fill={color}\n        />\n    </AccessibleSVG>\n);\n\nexport default IconExpand;\n","import * as React from 'react';\n\nimport AccessibleSVG from '../accessible-svg';\n\nimport { Icon } from '../iconTypes';\n\nconst IconMinus = ({ className = '', color = '#000000', height = 16, title, width = 16 }: Icon) => (\n    <AccessibleSVG\n        className={`icon-minus ${className}`}\n        height={height}\n        title={title}\n        viewBox=\"0 0 16 16\"\n        width={width}\n    >\n        <path d=\"M2 5h8v2H2z\" fill={color} fillRule=\"evenodd\" />\n    </AccessibleSVG>\n);\n\nexport default IconMinus;\n","import * as React from 'react';\n\nimport AccessibleSVG from '../accessible-svg';\n\nimport { Icon } from '../iconTypes';\n\nconst IconTrackNext = ({ className = '', color = '#999', height = 14, title, width = 14 }: Icon) => (\n    <AccessibleSVG\n        className={`icon-track-next ${className}`}\n        height={height}\n        title={title}\n        viewBox=\"0 0 14 14\"\n        width={width}\n    >\n        <path\n            className=\"fill-color\"\n            d=\"M7.72 7.85a1 1 0 0 0 0-1.41l-5-4.81A1 1 0 0 0 2 1.35a1 1 0 0 0-1 1V12a1 1 0 0 0 .28.69 1 1 0 0 0 1.41 0l5-4.81zM13 2v10a1 1 0 0 1-1 1 1 1 0 0 1-1-1V2a1 1 0 0 1 1-1 1 1 0 0 1 1 1z\"\n            fill={color}\n        />\n    </AccessibleSVG>\n);\n\nexport default IconTrackNext;\n","import * as React from 'react';\n\nimport AccessibleSVG from '../accessible-svg';\n\nimport { Icon } from '../iconTypes';\n\nconst IconTrackPrevious = ({ className = '', color = '#999', height = 14, title, width = 14 }: Icon) => (\n    <AccessibleSVG\n        className={`icon-track-previous ${className}`}\n        height={height}\n        title={title}\n        viewBox=\"0 0 14 14\"\n        width={width}\n    >\n        <path\n            className=\"fill-color\"\n            d=\"M6.31 7.88l5 4.81a1 1 0 0 0 1.41 0A1 1 0 0 0 13 12V2.35a1 1 0 0 0-1-1 1 1 0 0 0-.69.28l-5 4.81a1 1 0 0 0 0 1.41zM2 1a1 1 0 0 1 1 1v10a1 1 0 0 1-1 1 1 1 0 0 1-1-1V2a1 1 0 0 1 1-1z\"\n            fill={color}\n        />\n    </AccessibleSVG>\n);\n\nexport default IconTrackPrevious;\n","/**\n * @flow\n * @file Utility for copying and downloading\n * @author Box\n */\n\n/**\n * Function to download string as txt file\n *\n * @private\n * @param {String} string - string to download\n * @param {String} name - file name to use\n * @return {void}\n */\nfunction download(string: string, name: string) {\n    const blob = new Blob([string], { type: 'text/plain;charset=utf-8' });\n\n    // IE11\n    if (window.navigator.msSaveBlob) {\n        window.navigator.msSaveBlob(blob, name);\n        return;\n    }\n\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n\n    a.style.display = 'none';\n    a.href = url;\n    a.download = name;\n    if (document.body) {\n        document.body.appendChild(a);\n    }\n\n    a.click();\n\n    setTimeout(() => {\n        if (document.body) {\n            document.body.removeChild(a);\n        }\n\n        URL.revokeObjectURL(url);\n    }, 100);\n}\n\n/**\n * Function to copy string to the clipboard\n *\n * @private\n * @param {String} string - string to copy\n * @return {void}\n */\nfunction copy(string: string) {\n    const textarea = document.createElement('textarea');\n    const { body } = document;\n\n    textarea.value = string;\n    textarea.style.display = 'hidden';\n\n    if (body) {\n        body.appendChild(textarea);\n        textarea.select();\n        document.execCommand('copy');\n        body.removeChild(textarea);\n    }\n}\n\nexport { download, copy };\n"],"sourceRoot":""}