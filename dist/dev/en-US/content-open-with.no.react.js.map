{"version":3,"sources":["webpack:///./src/elements/content-open-with/BoxToolsInstallMessage.js","webpack:///./src/elements/content-open-with/BoxToolsInstallMessage.scss","webpack:///./src/elements/content-open-with/ContentOpenWith.js","webpack:///./src/elements/content-open-with/ContentOpenWith.scss","webpack:///./src/elements/content-open-with/ExecuteForm.js","webpack:///./src/elements/content-open-with/IconFileMap.js","webpack:///./src/elements/content-open-with/IntegrationPortal.js","webpack:///./src/elements/content-open-with/IntegrationPortalContainer.js","webpack:///./src/elements/content-open-with/MultipleIntegrationsOpenWithButton.js","webpack:///./src/elements/content-open-with/OpenWithButton.js","webpack:///./src/elements/content-open-with/OpenWithButtonContents.js","webpack:///./src/elements/content-open-with/OpenWithDropdownMenu.js","webpack:///./src/elements/content-open-with/OpenWithDropdownMenuItem.js","webpack:///./src/elements/content-open-with/OpenWithDropdownMenuItem.scss","webpack:///./src/elements/content-open-with/OpenWithFallbackButton.js","webpack:///./src/elements/content-open-with/index.js","webpack:///./src/elements/content-open-with/openWithUtils.js","webpack:///./src/icons/general/IconOpenWith.tsx","webpack:///./src/icons/google-docs/IconGoogleDocs.tsx","webpack:///./src/icons/google-docs/IconGoogleSheets.tsx","webpack:///./src/icons/google-docs/IconGoogleSlides.tsx"],"names":["DEFAULT_BOX_TOOLS_INSTALLATION_URL","DEFAULT_BOX_TOOLS_NAME","BoxToolsInstallMessage","boxToolsName","boxToolsInstallUrl","onLinkClick","window","open","messages","boxToolsInstallMessage","boxTools","UNSUPPORTED_INVOCATION_METHOD_TYPE","BLACKLISTED_ERROR_MESSAGE_KEY","BOX_TOOLS_INSTALL_ERROR_MESSAGE_KEY","GENERIC_EXECUTE_MESSAGE_KEY","AUTH_CODE","ContentOpenWith","PureComponent","constructor","props","isDropdownOpen","integrations","isLoading","fetchError","executePostData","shouldRenderErrorIntegrationPortal","shouldRenderLoadingIntegrationPortal","boxEditIntegration","find","appIntegrationId","isBoxEditIntegration","isDisabled","extension","getIntegrationFileExtension","isBoxEditAvailable","canOpenExtensionWithBoxEdit","error","errorMessageObject","message","formattedErrorMessage","disabledReasons","push","setState","fileId","Promise","resolve","reject","api","getFileAPI","getFileExtension","Error","getBoxEditAPI","checkBoxEditAvailability","catch","getAppForExtension","code","onError","displayName","getAppIntegrationsAPI","execute","executeIntegrationSuccessHandler","bind","executeBoxEditErrorHandler","executeIntegrationErrorHandler","windowFeatures","screenX","screenY","outerHeight","innerWidth","integrationWindow","uniqueid","document","title","onunload","cleanupIntegrationWindow","integrationId","executeData","executeBoxEditSuccessHandler","executeOnlineIntegrationSuccessHandler","onExecute","method","url","HTTP_POST","HTTP_GET","location","opener","ERROR_CODE_EXECUTE_INTEGRATION","token","queryParams","queryString","parse","authCode","isFileScoped","isBoxEditSFCIntegration","openFile","data","auth_code","token_scope","TYPE_FILE","TYPE_FOLDER","console","apiHost","clientName","language","requestInterceptor","responseInterceptor","id","API","state","initialState","clearCache","destroy","componentWillUnmount","componentDidMount","fetchOpenWithData","componentDidUpdate","prevProps","currentFileId","previousFileId","BOX_EDIT_INTEGRATION_ID","BOX_EDIT_SFC_INTEGRATION_ID","getOpenWithAPI","getOpenWithIntegrations","fetchOpenWithSuccessHandler","fetchErrorHandler","integrationID","getDisplayIntegration","Array","isArray","length","render","intlMessages","dropdownAlignment","className","classNames","displayIntegration","numIntegrations","onIntegrationClick","onExecuteFormSubmit","name","DEFAULT_HOSTNAME_API","CLIENT_NAME_OPEN_WITH","noop","withErrorBoundary","ORIGIN_OPEN_WITH","OpenWithFallbackButton","ExecuteForm","ref","React","createRef","onSubmit","current","submit","params","windowName","map","key","value","ICON_FILE_MAP","IconGoogleDocs","IconGoogleSheets","IconGoogleSlides","getIcon","iconName","FileIcon","copyStyles","documentElement","from","styleSheets","forEach","styleSheet","href","copiedStyleSheet","createElement","rel","head","appendChild","body","style","margin","padding","IntegrationPortal","children","containerElement","createPortal","IntegrationPortalContainer","hasError","executeIntegrationOpenWithErrorHeader","executeIntegrationOpenWithErrorSubHeader","MultipleIntegrationsOpenWithButton","buttonProps","defaultOpenWithDescription","CLASS_INTEGRATION_ICON","OPEN_WITH_BUTTON_ICON_SIZE","getTooltip","displayDescription","emptyOpenWithDescription","errorOpenWithDescription","OpenWithButton","onClick","isDisplayIntegrationDisabled","Icon","IconOpenWith","tooltipDisplayProps","utils","isDisabledBecauseBoxToolsIsNotInstalled","isShown","showCloseButton","OpenWithButtonContents","RIGHT_ALIGNMENT","OpenWithDropdownMenu","integration","getErrorMessage","defaultErrorMessage","boxEditErrorBlockedByPolicy","OpenWithDropdownMenuItem","description","OPEN_WITH_MENU_ITEM_ICON_SIZE","disabledReasonType","getProp","color","bdlGray80","height","width","ICON_CLASS","uniqueId","idPrefix"],"mappings":"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","file":"content-open-with.no.react.js","sourcesContent":["/**\n * @flow\n * @file Custom message to install Box Tools inside of Open With.\n * @author Box\n */\n\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport messages from '../common/messages';\nimport './BoxToolsInstallMessage.scss';\n\nconst DEFAULT_BOX_TOOLS_INSTALLATION_URL = 'https://cloud.box.com/v/installboxtools';\nconst DEFAULT_BOX_TOOLS_NAME = 'Box Tools';\n\ntype Props = {\n    boxToolsInstallUrl?: string,\n    boxToolsName?: string,\n};\n\nconst BoxToolsInstallMessage = ({\n    boxToolsName = DEFAULT_BOX_TOOLS_NAME,\n    boxToolsInstallUrl = DEFAULT_BOX_TOOLS_INSTALLATION_URL,\n}: Props) => {\n    const onLinkClick = () => {\n        // Manually open the URL since disabled menu items are blocked from clickable actions by default\n        window.open(boxToolsInstallUrl);\n    };\n\n    return (\n        <FormattedMessage\n            {...messages.boxToolsInstallMessage}\n            values={{\n                boxTools: (\n                    // eslint-disable-next-line jsx-a11y/anchor-is-valid\n                    <a href=\"#\" onClick={onLinkClick} rel=\"noopener noreferrer\">\n                        {boxToolsName}\n                    </a>\n                ),\n            }}\n        />\n    );\n};\n\nexport default BoxToolsInstallMessage;\n","// extracted by mini-css-extract-plugin","/**\n * @flow\n * @file Open With Component\n * @author Box\n */\n\nimport React, { PureComponent } from 'react';\nimport classNames from 'classnames';\nimport uniqueid from 'lodash/uniqueId';\nimport noop from 'lodash/noop';\nimport { FormattedMessage } from 'react-intl';\nimport queryString from 'query-string';\nimport Internationalize from '../common/Internationalize';\nimport messages from '../common/messages';\nimport { withErrorBoundary } from '../common/error-boundary';\nimport API from '../../api';\nimport IntegrationPortalContainer from './IntegrationPortalContainer';\nimport OpenWithDropdownMenu from './OpenWithDropdownMenu';\nimport BoxToolsInstallMessage from './BoxToolsInstallMessage';\nimport OpenWithButton from './OpenWithButton';\nimport OpenWithFallbackButton from './OpenWithFallbackButton';\nimport ExecuteForm from './ExecuteForm';\nimport '../common/base.scss';\nimport './ContentOpenWith.scss';\nimport {\n    BOX_EDIT_INTEGRATION_ID,\n    BOX_EDIT_SFC_INTEGRATION_ID,\n    CLIENT_NAME_OPEN_WITH,\n    DEFAULT_HOSTNAME_API,\n    ERROR_CODE_EXECUTE_INTEGRATION,\n    HTTP_GET,\n    HTTP_POST,\n    ORIGIN_OPEN_WITH,\n    TYPE_FILE,\n    TYPE_FOLDER,\n} from '../../constants';\nimport type { Alignment } from '../common/flowTypes';\nimport type { ExecuteAPI, Integration } from '../../common/types/integrations';\nimport type { StringMap, Token, BoxItem } from '../../common/types/core';\n\nconst UNSUPPORTED_INVOCATION_METHOD_TYPE = 'Integration invocation using this HTTP method type is not supported';\nconst BLACKLISTED_ERROR_MESSAGE_KEY = 'boxToolsBlacklistedError';\nconst BOX_TOOLS_INSTALL_ERROR_MESSAGE_KEY = 'boxToolsInstallErrorMessage';\nconst GENERIC_EXECUTE_MESSAGE_KEY = 'executeIntegrationOpenWithErrorHeader';\nconst AUTH_CODE = 'auth_code';\n\ntype ExternalProps = {\n    show?: boolean,\n};\n\ntype Props = {\n    /** Box API url. */\n    apiHost: string,\n    /** Class name applied to base component. */\n    boxToolsInstallUrl?: string,\n    /** Application client name. */\n    boxToolsName?: string,\n    /** Custom name for Box Tools to display to users */\n    className: string,\n    /** Custom URL to direct users to install Box Tools */\n    clientName: string,\n    /** Determines positioning of menu dropdown */\n    dropdownAlignment: Alignment,\n    /** Box File ID. */\n    fileId: string,\n    /** Language to use for translations. */\n    language?: string,\n    /** Messages to be translated. */\n    messages?: StringMap,\n    /** Callback that executes when an integration attempts to open the given file */\n    onError: Function,\n    /** Callback that executes when an integration invocation fails. The two most common cases being API failures or blocking of a new window */\n    onExecute: Function,\n    /** Axios request interceptor that runs before a network request. */\n    requestInterceptor?: Function,\n    /** Axios response interceptor that runs before a network response is returned. */\n    responseInterceptor?: Function,\n    /** Access token. */\n    token: Token,\n};\n\ntype State = {\n    executePostData: ?Object,\n    fetchError: ?Error,\n    integrations: ?Array<Integration>,\n    isDropdownOpen: boolean,\n    isLoading: boolean,\n    shouldRenderErrorIntegrationPortal: boolean,\n    shouldRenderLoadingIntegrationPortal: boolean,\n};\n\nclass ContentOpenWith extends PureComponent<Props, State> {\n    api: API;\n\n    id: string;\n\n    props: Props;\n\n    state: State;\n\n    window: any;\n\n    integrationWindow: ?any;\n\n    static defaultProps = {\n        apiHost: DEFAULT_HOSTNAME_API,\n        className: '',\n        clientName: CLIENT_NAME_OPEN_WITH,\n        onExecute: noop,\n        onError: noop,\n    };\n\n    initialState: State = {\n        isDropdownOpen: false,\n        integrations: null,\n        isLoading: true,\n        fetchError: null,\n        executePostData: null,\n        shouldRenderErrorIntegrationPortal: false,\n        shouldRenderLoadingIntegrationPortal: false,\n    };\n\n    /**\n     * [constructor]\n     *\n     * @private\n     * @return {ContentOpenWith}\n     */\n    constructor(props: Props) {\n        super(props);\n\n        const { token, apiHost, clientName, language, requestInterceptor, responseInterceptor } = props;\n        this.id = uniqueid('bcow_');\n        this.api = new API({\n            apiHost,\n            clientName,\n            language,\n            requestInterceptor,\n            responseInterceptor,\n            token,\n        });\n\n        // Clone initial state to allow for state reset on new files\n        this.state = { ...this.initialState };\n    }\n\n    /**\n     * Destroys api instances with caches\n     *\n     * @private\n     * @return {void}\n     */\n    clearCache(): void {\n        this.api.destroy(true);\n    }\n\n    /**\n     * Cleanup\n     *\n     * @private\n     * @inheritdoc\n     * @return {void}\n     */\n    componentWillUnmount() {\n        // Don't destroy the cache while unmounting\n        this.api.destroy(false);\n    }\n\n    /**\n     *\n     * @private\n     * @inheritdoc\n     * @return {void}\n     */\n    componentDidMount() {\n        const { fileId }: Props = this.props;\n        if (!fileId) {\n            return;\n        }\n\n        this.window = window;\n\n        this.fetchOpenWithData();\n    }\n\n    /**\n     * After component updates, re-fetch Open With data if appropriate.\n     *\n     * @return {void}\n     */\n    componentDidUpdate(prevProps: Props): void {\n        const { fileId: currentFileId }: Props = this.props;\n        const { fileId: previousFileId }: Props = prevProps;\n\n        if (!currentFileId) {\n            return;\n        }\n\n        if (currentFileId !== previousFileId) {\n            this.setState({ ...this.initialState });\n            this.fetchOpenWithData();\n        }\n    }\n\n    /**\n     * Checks if a given integration is a Box Edit integration.\n     *\n     * @param {string} [integrationId] - The integration ID\n     * @return {boolean}\n     */\n    isBoxEditIntegration(integrationId: ?string): boolean {\n        return integrationId === BOX_EDIT_INTEGRATION_ID || this.isBoxEditSFCIntegration(integrationId);\n    }\n\n    /**\n     * Checks if a given integration is a Box Edit integration.\n     *\n     * @param {string} [integrationId] - The integration ID\n     * @return {boolean}\n     */\n    isBoxEditSFCIntegration(integrationId: ?string): boolean {\n        return integrationId === BOX_EDIT_SFC_INTEGRATION_ID;\n    }\n\n    /**\n     * Fetches Open With data.\n     *\n     * @return {void}\n     */\n    fetchOpenWithData(): void {\n        const { fileId }: Props = this.props;\n        this.api\n            .getOpenWithAPI(false)\n            .getOpenWithIntegrations(fileId, this.fetchOpenWithSuccessHandler, this.fetchErrorHandler);\n    }\n\n    /**\n     * Fetch app integrations info needed to render.\n     *\n     * @param {OpenWithIntegrations} integrations - The available Open With integrations\n     * @return {void}\n     */\n    fetchOpenWithSuccessHandler = async (integrations: Array<Integration>): Promise<any> => {\n        const { boxToolsName, boxToolsInstallUrl } = this.props;\n        const boxEditIntegration = integrations.find(({ appIntegrationId }) =>\n            this.isBoxEditIntegration(appIntegrationId),\n        );\n\n        if (boxEditIntegration && !boxEditIntegration.isDisabled) {\n            try {\n                const { extension } = await this.getIntegrationFileExtension();\n                boxEditIntegration.extension = extension;\n                // If Box Edit is present and enabled, we need to set its ability to locally open the given file\n                // No-op if these checks are successful\n                await this.isBoxEditAvailable();\n                await this.canOpenExtensionWithBoxEdit(boxEditIntegration);\n            } catch (error) {\n                const errorMessageObject = messages[error.message] || messages[GENERIC_EXECUTE_MESSAGE_KEY];\n                let formattedErrorMessage = <FormattedMessage {...errorMessageObject} />;\n                if (error.message === BOX_TOOLS_INSTALL_ERROR_MESSAGE_KEY) {\n                    formattedErrorMessage = (\n                        <BoxToolsInstallMessage boxToolsInstallUrl={boxToolsInstallUrl} boxToolsName={boxToolsName} />\n                    );\n                }\n\n                boxEditIntegration.disabledReasons.push(formattedErrorMessage);\n                boxEditIntegration.isDisabled = true;\n            }\n        }\n\n        this.setState({ integrations, isLoading: false });\n    };\n\n    /**\n     * Fetches the file extension of the current file.\n     *\n     * @return {Promise}\n     */\n    getIntegrationFileExtension = (): Promise<BoxItem> => {\n        const { fileId }: Props = this.props;\n        return new Promise((resolve, reject) => {\n            this.api\n                .getFileAPI()\n                .getFileExtension(fileId, resolve, () => reject(new Error(GENERIC_EXECUTE_MESSAGE_KEY)));\n        });\n    };\n\n    /**\n     * Uses Box Edit to check if Box Tools is installed and reachable\n     *\n     * @return {Promise}\n     */\n    isBoxEditAvailable = (): Promise<any> => {\n        return this.api\n            .getBoxEditAPI()\n            .checkBoxEditAvailability()\n            .catch(() => {\n                throw new Error(BOX_TOOLS_INSTALL_ERROR_MESSAGE_KEY);\n            });\n    };\n\n    /**\n     * Uses Box Edit to check if Box Tools can open a given file type\n     *\n     * @param {String} extension - A file extension\n     * @return {Promise}\n     */\n    canOpenExtensionWithBoxEdit = ({ extension = '' }: Integration): Promise<any> => {\n        return this.api\n            .getBoxEditAPI()\n            .getAppForExtension(extension)\n            .catch(() => {\n                throw new Error(BLACKLISTED_ERROR_MESSAGE_KEY);\n            });\n    };\n\n    /**\n     * Handles a fetch error for the open_with_integrations and app_integrations endpoints\n     *\n     * @param {Error} error - An axios fetch error\n     * @return {void}\n     */\n    fetchErrorHandler = (error: any, code: string): void => {\n        this.props.onError(error, code, { error });\n        this.setState({ fetchError: error, isLoading: false });\n    };\n\n    /**\n     * Click handler when an integration is clicked\n     *\n     * @private\n     * @param {string} appIntegrationId - An app integration ID\n     * @param {string} displayName - The integration's display name\n     * @return {void}\n     */\n    onIntegrationClick = ({ appIntegrationId, displayName }: Integration): void => {\n        const { fileId }: Props = this.props;\n        const isBoxEditIntegration = this.isBoxEditIntegration(appIntegrationId);\n        this.api\n            .getAppIntegrationsAPI(false)\n            .execute(\n                appIntegrationId,\n                fileId,\n                this.executeIntegrationSuccessHandler.bind(this, appIntegrationId),\n                isBoxEditIntegration ? this.executeBoxEditErrorHandler : this.executeIntegrationErrorHandler,\n            );\n\n        if (isBoxEditIntegration) {\n            // No window management is required when using Box Edit.\n            return;\n        }\n\n        // These window features will open the new window directly on top of the current window at the same\n        const windowFeatures = `left=${window.screenX},top=${window.screenY},height=${window.outerHeight},width=${window.innerWidth},toolbar=0`;\n\n        // window.open() is immediately invoked to avoid popup-blockers\n        // The name is included to be the target of a form if the integration is a POST integration.\n        // A uniqueid is used to force the browser to open a new tab every time, while still allowing\n        // a form to reference a given tab.\n        this.integrationWindow = this.window.open('', `${uniqueid(appIntegrationId)}`, windowFeatures);\n        this.integrationWindow.document.title = displayName;\n        this.integrationWindow.onunload = this.cleanupIntegrationWindow;\n\n        this.setState({\n            shouldRenderLoadingIntegrationPortal: true,\n            shouldRenderErrorIntegrationPortal: false,\n        });\n    };\n\n    /**\n     * cleans up the portal UI when a tab is closed so that we can remount the component later.\n     *\n     * @private\n     * @return {void}\n     */\n    cleanupIntegrationWindow = () => {\n        this.setState({\n            shouldRenderLoadingIntegrationPortal: false,\n            shouldRenderErrorIntegrationPortal: false,\n        });\n    };\n\n    /**\n     * Opens the integration in a new tab based on the API data\n     *\n     * @private\n     * @param {string} integrationId - The integration that was executed\n     * @param {ExecuteAPI} executeData - API response on how to open an executed integration\n\n     * @return {void}\n     */\n    executeIntegrationSuccessHandler = (integrationId: string, executeData: ExecuteAPI): void => {\n        if (this.isBoxEditIntegration(integrationId)) {\n            this.executeBoxEditSuccessHandler(integrationId, executeData);\n        } else {\n            this.executeOnlineIntegrationSuccessHandler(executeData);\n        }\n        this.onExecute(integrationId);\n    };\n\n    /**\n     * Opens the file via a Partner Integration\n     *\n     * @private\n     * @param {ExecuteAPI} executeData - API response on how to open an executed integration\n\n     * @return {void}\n     */\n    executeOnlineIntegrationSuccessHandler = (executeData: ExecuteAPI): void => {\n        const { method, url } = executeData;\n        switch (method) {\n            case HTTP_POST:\n                this.setState({ executePostData: executeData });\n                break;\n            case HTTP_GET:\n                if (!this.integrationWindow) {\n                    return;\n                }\n\n                // Prevents abuse of window.opener\n                // see here for more details: https://mathiasbynens.github.io/rel-noopener/\n                this.integrationWindow.location = url;\n                this.integrationWindow.opener = null;\n                break;\n            default:\n                this.executeIntegrationErrorHandler(\n                    Error(UNSUPPORTED_INVOCATION_METHOD_TYPE),\n                    ERROR_CODE_EXECUTE_INTEGRATION,\n                );\n        }\n\n        this.integrationWindow = null;\n    };\n\n    /**\n     * Opens the file via Box Edit\n     *\n     * @private\n     * @param {string} url - Integration execution URL\n\n     * @return {void}\n     */\n    executeBoxEditSuccessHandler = (integrationId: string, { url }: ExecuteAPI): void => {\n        const { fileId, token, onError } = this.props;\n        const queryParams = queryString.parse(url);\n        const authCode = queryParams[AUTH_CODE];\n        const isFileScoped = this.isBoxEditSFCIntegration(integrationId);\n\n        this.api\n            .getBoxEditAPI()\n            .openFile(fileId, {\n                data: {\n                    auth_code: authCode,\n                    token,\n                    token_scope: isFileScoped ? TYPE_FILE : TYPE_FOLDER,\n                },\n            })\n            .catch(error => {\n                onError(error, ERROR_CODE_EXECUTE_INTEGRATION, { error });\n            });\n    };\n\n    /**\n     * Clears state after a form has been submitted\n     *\n     * @private\n     * @return {void}\n     */\n    onExecuteFormSubmit = (): void => {\n        this.setState({ executePostData: null });\n    };\n\n    /**\n     * Calls the onExecute prop\n     *\n     * @private\n     * @param {string} integrationID - The integration that was executed\n     * @return {void}\n     */\n    onExecute(integrationID: string) {\n        this.props.onExecute(integrationID);\n        this.setState({\n            shouldRenderLoadingIntegrationPortal: false,\n        });\n    }\n\n    /**\n     * Handles execution related errors\n     *\n     * @private\n     * @param {Error} error - Error object\n     * @return {void}\n     */\n    executeIntegrationErrorHandler = (error: any, code: string): void => {\n        this.props.onError(error, code, { error });\n        // eslint-disable-next-line no-console\n        console.error(error);\n        this.setState({\n            shouldRenderLoadingIntegrationPortal: false,\n            shouldRenderErrorIntegrationPortal: true,\n        });\n    };\n\n    /**\n     * Handles Box Edit execution related errors\n     *\n     * @private\n     * @param {Error} error - Error object\n     * @return {void}\n     */\n    executeBoxEditErrorHandler = (error: any): void => {\n        this.props.onError(error);\n        // eslint-disable-next-line no-console\n        console.error(error);\n    };\n\n    /**\n     * Gets a display integration, if available, for the Open With button\n     *\n     * @private\n     * @return {?Integration}\n     */\n    getDisplayIntegration(): ?Integration {\n        const { integrations }: State = this.state;\n        // We only consider an integration a display integration if is the only integration in our state\n        return Array.isArray(integrations) && integrations.length === 1 ? integrations[0] : null;\n    }\n\n    /**\n     * Render the Open With element\n     *\n     * @private\n     * @inheritdoc\n     * @return {Element}\n     */\n    render() {\n        const { language, messages: intlMessages, dropdownAlignment }: Props = this.props;\n        const {\n            fetchError,\n            isLoading,\n            integrations,\n            executePostData,\n            shouldRenderLoadingIntegrationPortal,\n            shouldRenderErrorIntegrationPortal,\n        }: State = this.state;\n\n        const className = classNames('be bcow', this.props.className);\n        const displayIntegration = this.getDisplayIntegration();\n        const numIntegrations = integrations ? integrations.length : 0;\n\n        return (\n            <Internationalize language={language} messages={intlMessages}>\n                <div className={className} data-testid=\"bcow-content\" id={this.id}>\n                    {numIntegrations <= 1 ? (\n                        <OpenWithButton\n                            displayIntegration={displayIntegration}\n                            error={fetchError}\n                            isLoading={isLoading}\n                            onClick={this.onIntegrationClick}\n                        />\n                    ) : (\n                        <OpenWithDropdownMenu\n                            dropdownAlignment={dropdownAlignment}\n                            integrations={((integrations: any): Array<Integration>)}\n                            onClick={this.onIntegrationClick}\n                        />\n                    )}\n                    {(shouldRenderLoadingIntegrationPortal || shouldRenderErrorIntegrationPortal) && (\n                        <IntegrationPortalContainer\n                            hasError={shouldRenderErrorIntegrationPortal}\n                            integrationWindow={this.integrationWindow}\n                        />\n                    )}\n                    {executePostData && (\n                        <ExecuteForm\n                            executePostData={executePostData}\n                            id={this.id}\n                            onSubmit={this.onExecuteFormSubmit}\n                            windowName={this.integrationWindow && this.integrationWindow.name}\n                        />\n                    )}\n                </div>\n            </Internationalize>\n        );\n    }\n}\n\nexport type ContentOpenWithProps = Props & ExternalProps;\nexport { ContentOpenWith as ContentOpenWithComponent };\nexport default withErrorBoundary(ORIGIN_OPEN_WITH, OpenWithFallbackButton)(ContentOpenWith);\n","// extracted by mini-css-extract-plugin","/**\n * @flow\n * @file Form to invoke an integration via POST\n * @author Box\n */\n\nimport React, { PureComponent } from 'react';\nimport { HTTP_POST } from '../../constants';\nimport type { ExecuteAPI } from '../../common/types/integrations';\n\ntype Props = {\n    executePostData: ExecuteAPI,\n    id: string,\n    onSubmit: Function,\n    windowName: ?string,\n};\n\nclass ExecuteForm extends PureComponent<Props> {\n    ref: any;\n\n    constructor(props: Props) {\n        super(props);\n        this.ref = React.createRef();\n    }\n\n    componentDidMount() {\n        const { onSubmit }: Props = this.props;\n        this.ref.current.submit();\n        onSubmit();\n    }\n\n    render() {\n        const {\n            executePostData: { url, params },\n            id,\n            windowName,\n        }: Props = this.props;\n        return (\n            <form\n                ref={this.ref}\n                action={url}\n                id={`bcow-execute-form-${id}`}\n                method={HTTP_POST}\n                rel=\"noreferrer noopener\"\n                target={windowName || '_blank'}\n            >\n                {params && params.map(({ key, value }) => <input key={key} name={key} type=\"hidden\" value={value} />)}\n            </form>\n        );\n    }\n}\n\nexport default ExecuteForm;\n","/**\n * @flow\n * @file Maintains a mapping of integration names to icons.\n * @author Box\n */\nimport * as React from 'react';\nimport IconGoogleDocs from '../../icons/google-docs/IconGoogleDocs';\nimport IconGoogleSheets from '../../icons/google-docs/IconGoogleSheets';\nimport IconGoogleSlides from '../../icons/google-docs/IconGoogleSlides';\nimport FileIcon from '../../icons/file-icon/FileIcon';\n\nconst ICON_FILE_MAP = {\n    'Google Docs': IconGoogleDocs,\n    'Google Docs (beta)': IconGoogleDocs,\n    'Google Sheets': IconGoogleSheets,\n    'Google Sheets (beta)': IconGoogleSheets,\n    'Google Slides': IconGoogleSlides,\n    'Google Slides (beta)': IconGoogleSlides,\n};\n\nfunction getIcon(iconName: string): React.ComponentType<any> {\n    return ICON_FILE_MAP[iconName] || FileIcon;\n}\n\nexport default getIcon;\n","/**\n * @flow\n * @file Allows react to render a component in an arbitrary DOM node, in this case in a new window.\n * @author Box\n */\n\nimport { createPortal } from 'react-dom';\n\ntype Props = {\n    children: any,\n    integrationWindow: any,\n};\n\n/**\n * Copies stylesheets to the new window.\n *\n * @private\n * @param {HTMLDocument} documentElement - an HTML document\n * @param {Window} integrationWindow - a browser window\n * @return {void}\n */\nexport function copyStyles(documentElement: Document, integrationWindow: any) {\n    // The new window will have no CSS, so we copy all style sheets as a safe way\n    // of ensuring required styles are present\n    Array.from(documentElement.styleSheets).forEach(styleSheet => {\n        if (!styleSheet.href) {\n            return;\n        }\n\n        const copiedStyleSheet = integrationWindow.document.createElement('link');\n        copiedStyleSheet.rel = 'stylesheet';\n        copiedStyleSheet.href = styleSheet.href;\n        integrationWindow.document.head.appendChild(copiedStyleSheet);\n    });\n\n    // Reset margin and padding in our new window\n    integrationWindow.document.body.style.margin = 0;\n    integrationWindow.document.body.style.padding = 0;\n}\n\nconst IntegrationPortal = ({ integrationWindow, children }: Props) => {\n    const containerElement = integrationWindow.document.createElement('div');\n    copyStyles(document, integrationWindow);\n    integrationWindow.document.body.appendChild(containerElement);\n    return createPortal(children, containerElement);\n};\n\nexport default IntegrationPortal;\n","/**\n * @flow\n * @file integration portal container\n * @author Box\n */\n\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport ErrorMask from '../../components/error-mask/ErrorMask';\nimport LoadingIndicator from '../../components/loading-indicator/LoadingIndicator';\nimport messages from '../common/messages';\nimport IntegrationPortal from './IntegrationPortal';\n\ntype Props = {\n    hasError: boolean,\n    integrationWindow: any,\n};\n\nconst IntegrationPortalContainer = ({ hasError, integrationWindow }: Props) => (\n    <IntegrationPortal integrationWindow={integrationWindow}>\n        <div className=\"be bcow bcow-portal-container\">\n            {hasError ? (\n                <ErrorMask\n                    errorHeader={<FormattedMessage {...messages.executeIntegrationOpenWithErrorHeader} />}\n                    errorSubHeader={<FormattedMessage {...messages.executeIntegrationOpenWithErrorSubHeader} />}\n                />\n            ) : (\n                <LoadingIndicator className=\"bcow-portal-loading-indicator\" size=\"large\" />\n            )}\n        </div>\n    </IntegrationPortal>\n);\n\nexport default IntegrationPortalContainer;\n","/**\n * @flow\n * @file Open With button when multiple integrations are present\n * @author Box\n */\n\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport MenuToggle from '../../components/dropdown-menu/MenuToggle';\nimport IconOpenWith from '../../icons/general/IconOpenWith';\nimport Button from '../../components/button/Button';\nimport Tooltip from '../common/Tooltip';\nimport messages from '../common/messages';\nimport OpenWithButtonContents from './OpenWithButtonContents';\nimport { CLASS_INTEGRATION_ICON, OPEN_WITH_BUTTON_ICON_SIZE } from '../../constants';\n\ntype Props = {\n    buttonProps?: ?Object,\n};\n\nconst MultipleIntegrationsOpenWithButton = (buttonProps: Props) => (\n    <Tooltip position=\"middle-left\" text={<FormattedMessage {...messages.defaultOpenWithDescription} />}>\n        <Button data-testid=\"multipleintegrationsbutton\" {...buttonProps}>\n            <MenuToggle>\n                <OpenWithButtonContents>\n                    <IconOpenWith\n                        className={CLASS_INTEGRATION_ICON}\n                        dimension={OPEN_WITH_BUTTON_ICON_SIZE}\n                        height={OPEN_WITH_BUTTON_ICON_SIZE}\n                        width={OPEN_WITH_BUTTON_ICON_SIZE}\n                    />\n                </OpenWithButtonContents>\n            </MenuToggle>\n        </Button>\n    </Tooltip>\n);\n\nexport default MultipleIntegrationsOpenWithButton;\n","/**\n * @flow\n * @file Open With button\n * @author Box\n */\n\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport noop from 'lodash/noop';\nimport Button from '../../components/button/Button';\nimport IconOpenWith from '../../icons/general/IconOpenWith';\nimport Tooltip from '../common/Tooltip';\nimport messages from '../common/messages';\nimport OpenWithButtonContents from './OpenWithButtonContents';\nimport utils from './openWithUtils';\nimport { CLASS_INTEGRATION_ICON, OPEN_WITH_BUTTON_ICON_SIZE } from '../../constants';\nimport getIcon from './IconFileMap';\nimport type { DisabledReason, Integration } from '../../common/types/integrations';\n\ntype Props = {\n    displayIntegration?: ?Integration,\n    error: ?any,\n    icon?: string,\n    isLoading: boolean,\n    onClick?: Integration => void,\n    tooltipText?: string | Object,\n};\n\n/**\n * Gets the tooltip text for the ContentOpenWith button\n *\n * @private\n * @return {?(string | Element)} the tooltip message\n */\nexport const getTooltip = (\n    displayDescription: string,\n    isLoading: boolean,\n    error: ?Error,\n    disabledReasons: Array<DisabledReason> = [],\n): ?DisabledReason => {\n    if (isLoading) {\n        return null;\n    }\n\n    let message = <FormattedMessage {...messages.emptyOpenWithDescription} />;\n    if (disabledReasons.length > 0) {\n        [message] = disabledReasons;\n    } else if (error) {\n        message = <FormattedMessage {...messages.errorOpenWithDescription} />;\n    } else if (displayDescription) {\n        message = displayDescription;\n    }\n\n    return message;\n};\n\nconst OpenWithButton = ({ error, onClick = noop, displayIntegration, isLoading }: Props) => {\n    const { displayName, isDisabled: isDisplayIntegrationDisabled, extension, disabledReasons, displayDescription } =\n        displayIntegration || {};\n\n    const isDisabled = !!isDisplayIntegrationDisabled || !displayName;\n    const Icon = displayName ? getIcon(displayName) : IconOpenWith;\n\n    const tooltipDisplayProps = utils.isDisabledBecauseBoxToolsIsNotInstalled(displayIntegration)\n        ? { isShown: true, showCloseButton: true }\n        : {};\n\n    return (\n        <Tooltip\n            className=\"bcow-tooltip\"\n            position=\"bottom-center\"\n            text={getTooltip(displayDescription, isLoading, error, disabledReasons)}\n            {...tooltipDisplayProps}\n        >\n            <Button\n                data-testid=\"singleintegrationbutton\"\n                isDisabled={isDisabled}\n                onClick={() => (displayIntegration ? onClick(displayIntegration) : noop)}\n            >\n                <OpenWithButtonContents>\n                    <Icon\n                        className={CLASS_INTEGRATION_ICON}\n                        dimension={OPEN_WITH_BUTTON_ICON_SIZE}\n                        extension={extension}\n                        height={OPEN_WITH_BUTTON_ICON_SIZE}\n                        width={OPEN_WITH_BUTTON_ICON_SIZE}\n                    />\n                </OpenWithButtonContents>\n            </Button>\n        </Tooltip>\n    );\n};\n\nexport default OpenWithButton;\n","/**\n * @flow\n * @file Open With button contents\n * @author Box\n */\n\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport messages from '../common/messages';\n\ntype Props = {\n    children: any,\n};\n\nconst OpenWithButtonContents = ({ children }: Props) => (\n    <>\n        {children}\n        <span className=\"bcow-btn-header-text\">\n            <FormattedMessage {...messages.open} />\n        </span>\n    </>\n);\n\nexport default OpenWithButtonContents;\n","/**\n * @flow\n * @file Open With dropdown menu\n * @author Box\n */\n\nimport * as React from 'react';\nimport DropdownMenu from '../../components/dropdown-menu/DropdownMenu';\nimport Menu from '../../components/menu/Menu';\nimport OpenWithDropdownMenuItem from './OpenWithDropdownMenuItem';\nimport MultipleIntegrationsOpenWithButton from './MultipleIntegrationsOpenWithButton';\nimport type { Alignment } from '../common/flowTypes';\nimport type { Integration } from '../../common/types/integrations';\n\ntype Props = {\n    dropdownAlignment: Alignment,\n    integrations: Array<Integration>,\n    onClick: Function,\n};\n\nconst RIGHT_ALIGNMENT = 'right';\n\nconst OpenWithDropdownMenu = ({ dropdownAlignment = RIGHT_ALIGNMENT, integrations, onClick }: Props) => (\n    <DropdownMenu isRightAligned={dropdownAlignment === RIGHT_ALIGNMENT}>\n        <MultipleIntegrationsOpenWithButton />\n        <Menu className=\"bcow-menu\">\n            {integrations.map(integration => (\n                <OpenWithDropdownMenuItem\n                    key={integration.appIntegrationId}\n                    integration={integration}\n                    onClick={onClick}\n                />\n            ))}\n        </Menu>\n    </DropdownMenu>\n);\n\nexport default OpenWithDropdownMenu;\n","/**\n * @flow\n * @file Open With dropdown menu item\n * @author Box\n */\n\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport classNames from 'classnames';\nimport MenuItem from '../../components/menu/MenuItem';\nimport messages from '../common/messages';\nimport { OPEN_WITH_MENU_ITEM_ICON_SIZE } from '../../constants';\nimport getIcon from './IconFileMap';\nimport utils from './openWithUtils';\nimport type { Integration, DisabledReason } from '../../common/types/integrations';\nimport './OpenWithDropdownMenuItem.scss';\n\ntype Props = {\n    integration: Integration,\n    onClick: Function,\n};\n\nfunction getErrorMessage(disabledReasons: Array<DisabledReason> = []): React.Node {\n    let message;\n    // Use the first disabled reason as the description if the integration is disabled.\n    const code = disabledReasons[0];\n    const defaultErrorMessage = <FormattedMessage {...messages.errorOpenWithDescription} />;\n\n    switch (code) {\n        case 'blocked_by_shield_access_policy':\n            message = <FormattedMessage {...messages.boxEditErrorBlockedByPolicy} />;\n            break;\n        case 'collaborators_hidden':\n            message = defaultErrorMessage;\n            break;\n        default:\n            message = disabledReasons[0] || defaultErrorMessage;\n    }\n    return message;\n}\n\nconst OpenWithDropdownMenuItem = ({ integration, onClick }: Props) => {\n    const { displayName, displayDescription, isDisabled, extension, disabledReasons } = integration;\n    const Icon = getIcon(displayName);\n    const description = isDisabled ? getErrorMessage(disabledReasons) : displayDescription;\n    const className = classNames({\n        'bcow-box-tools-uninstalled': utils.isDisabledBecauseBoxToolsIsNotInstalled(integration),\n    });\n\n    return (\n        <MenuItem className={className} isDisabled={isDisabled} onClick={() => onClick(integration)}>\n            <Icon\n                dimension={OPEN_WITH_MENU_ITEM_ICON_SIZE}\n                extension={extension}\n                height={OPEN_WITH_MENU_ITEM_ICON_SIZE}\n                width={OPEN_WITH_MENU_ITEM_ICON_SIZE}\n            />\n            <span>\n                <p className=\"bcow-menu-item-title\">{displayName}</p>\n                <p className=\"bcow-menu-item-description\">{description}</p>\n            </span>\n        </MenuItem>\n    );\n};\n\nexport default OpenWithDropdownMenuItem;\n","// extracted by mini-css-extract-plugin","/**\n * @flow\n * @file Open With fallback button\n * @author Box\n */\n\nimport * as React from 'react';\nimport OpenWithButton from './OpenWithButton';\nimport type { ElementsError } from '../../common/types/api';\n\ntype Props = {\n    error: ElementsError,\n};\n\nconst OpenWithFallbackButton = ({ error }: Props) => (\n    <div className=\"be bcow\">\n        <OpenWithButton error={error} isLoading={false} />\n    </div>\n);\n\nexport default OpenWithFallbackButton;\n","// @flow\nexport { default } from './ContentOpenWith';\n","/**\n * @flow\n * @file Open With utils\n * @author Box\n */\n\nimport getProp from 'lodash/get';\nimport BoxToolsInstallMessage from './BoxToolsInstallMessage';\nimport type { Integration } from '../../common/types/integrations';\n\nconst isDisabledBecauseBoxToolsIsNotInstalled = (integration: ?Integration): boolean => {\n    const disabledReasonType = getProp(integration, 'disabledReasons.0.type');\n    return disabledReasonType === BoxToolsInstallMessage;\n};\n\nexport default { isDisabledBecauseBoxToolsIsNotInstalled };\n","import * as React from 'react';\n\nimport AccessibleSVG from '../accessible-svg';\nimport { bdlGray80 } from '../../styles/variables';\n\nimport { Icon } from '../iconTypes';\n\nconst IconOpenWith = ({ className = '', color = bdlGray80, height = 16, title, width = 16 }: Icon) => (\n    <AccessibleSVG\n        className={`icon-open-with ${className}`}\n        height={height}\n        title={title}\n        viewBox=\"0 0 16 16\"\n        width={width}\n    >\n        <path\n            className=\"fill-color\"\n            fill={color}\n            fillRule=\"evenodd\"\n            d=\"M12 2a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2zm0 1H4a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1V4a1 1 0 0 0-1-1zm-1 2v6h-1V6.71l-4.65 4.64-.7-.7L9.29 6H5V5h6z\"\n        />\n    </AccessibleSVG>\n);\n\nexport default IconOpenWith;\n","import * as React from 'react';\nimport uniqueId from 'lodash/uniqueId';\n\nimport AccessibleSVG from '../accessible-svg';\n\nimport { TwoTonedIcon } from '../iconTypes';\n\nconst ICON_CLASS = 'icon-google-docs';\n\nclass IconGoogleDocs extends React.Component<TwoTonedIcon> {\n    static defaultProps = {\n        className: '',\n        height: 30,\n        width: 30,\n    };\n\n    idPrefix = `${uniqueId(ICON_CLASS)}-`;\n\n    render() {\n        const { className, height, title, width } = this.props;\n        return (\n            <AccessibleSVG\n                className={`${ICON_CLASS} ${className}`}\n                height={height}\n                title={title}\n                viewBox=\"0 0 30 30\"\n                width={width}\n            >\n                <defs>\n                    <linearGradient\n                        gradientTransform=\"matrix(2.67 0 0 -2.67 596.67 1357)\"\n                        gradientUnits=\"userSpaceOnUse\"\n                        id={`${this.idPrefix}a`}\n                        x1=\"-215.49\"\n                        x2=\"-215.49\"\n                        y1=\"505.79\"\n                        y2=\"503.19\"\n                    >\n                        <stop offset=\"0\" stopColor=\"#1a237e\" stopOpacity=\".2\" />\n                        <stop offset=\"1\" stopColor=\"#1a237e\" stopOpacity=\".02\" />\n                    </linearGradient>\n                </defs>\n                <path\n                    d=\"M17.64 0H6.05A2.05 2.05 0 0 0 4 2.05V28a2.05 2.05 0 0 0 2.05 2h17.72a2.05 2.05 0 0 0 2.05-2V8.18l-4.77-3.41z\"\n                    fill=\"#4285f4\"\n                />\n                <path d=\"M18.23 7.58l7.59 7.58V8.18l-7.59-.6z\" fill={`url(#${this.idPrefix}a)`} />\n                <path\n                    d=\"M9.45 21.82h10.91v-1.37H9.45zm0 2.73h8.19v-1.37H9.45zm0-9.55v1.36h10.91V15zm0 4.09h10.91v-1.36H9.45z\"\n                    fill=\"#f1f1f1\"\n                />\n                <path d=\"M17.64 0v6.14a2 2 0 0 0 2 2h6.14z\" fill=\"#a1c2fa\" />\n                <path\n                    d=\"M6.05 0A2.05 2.05 0 0 0 4 2.05v.17A2.05 2.05 0 0 1 6.05.17h11.59V0z\"\n                    fill=\"#fff\"\n                    fillOpacity=\".2\"\n                />\n                <path d=\"M19.68 8.18a2 2 0 0 1-2-2v.17a2 2 0 0 0 2 2h6.14v-.17z\" fill=\"#1a237e\" fillOpacity=\".1\" />\n            </AccessibleSVG>\n        );\n    }\n}\n\nexport default IconGoogleDocs;\n","import * as React from 'react';\nimport uniqueId from 'lodash/uniqueId';\n\nimport AccessibleSVG from '../accessible-svg';\n\nimport { TwoTonedIcon } from '../iconTypes';\n\nconst ICON_CLASS = 'icon-google-sheets';\n\nclass IconGoogleSheets extends React.Component<TwoTonedIcon> {\n    static defaultProps = {\n        className: '',\n        height: 30,\n        width: 30,\n    };\n\n    idPrefix = `${uniqueId(ICON_CLASS)}-`;\n\n    render() {\n        const { className, height, title, width } = this.props;\n        return (\n            <AccessibleSVG\n                className={`${ICON_CLASS} ${className}`}\n                height={height}\n                title={title}\n                viewBox=\"0 0 30 30\"\n                width={width}\n            >\n                <defs>\n                    <linearGradient\n                        gradientTransform=\"matrix(2.67 0 0 -2.67 596.67 1357)\"\n                        gradientUnits=\"userSpaceOnUse\"\n                        id={`${this.idPrefix}a`}\n                        x1=\"-215.49\"\n                        x2=\"-215.49\"\n                        y1=\"505.79\"\n                        y2=\"503.19\"\n                    >\n                        <stop offset=\"0\" stopColor=\"#208256\" />\n                        <stop offset=\".55\" stopColor=\"#19955a\" stopOpacity=\".2\" />\n                    </linearGradient>\n                </defs>\n                <path\n                    d=\"M17.64 0H6.05A2.05 2.05 0 0 0 4 2.05V28a2.05 2.05 0 0 0 2.05 2h17.72a2.05 2.05 0 0 0 2.05-2V8.18l-4.77-3.41z\"\n                    fill=\"#22a565\"\n                />\n                <path d=\"M18.23 7.58l7.59 7.58V8.18l-7.59-.6z\" fill={`url(#${this.idPrefix}a)`} />\n                <path d=\"M17.64 0v6.14a2 2 0 0 0 2 2h6.14z\" fill=\"#8ed1b1\" />\n                <path\n                    d=\"M6.05 0A2.05 2.05 0 0 0 4 2.05v.17A2.05 2.05 0 0 1 6.05.17h11.59V0z\"\n                    fill=\"#fff\"\n                    fillOpacity=\".2\"\n                />\n                <path d=\"M19.68 8.18a2 2 0 0 1-2-2v.17a2 2 0 0 0 2 2h6.14v-.17z\" fill=\"#1a237e\" fillOpacity=\".1\" />\n                <path\n                    d=\"M10 14v10h10V14zm1 1h3.5v2H11zm0 3h3.5v2H11zm0 5v-2h3.5v2zm8 0h-3.5v-2H19zm0-3h-3.5v-2H19zm0-3h-3.5v-2H19z\"\n                    fill=\"#f1f1f1\"\n                />\n            </AccessibleSVG>\n        );\n    }\n}\n\nexport default IconGoogleSheets;\n","import * as React from 'react';\nimport uniqueId from 'lodash/uniqueId';\n\nimport AccessibleSVG from '../accessible-svg';\n\nimport { TwoTonedIcon } from '../iconTypes';\n\nconst ICON_CLASS = 'icon-google-slides';\n\nclass IconGoogleSlides extends React.Component<TwoTonedIcon> {\n    static defaultProps = {\n        className: '',\n        height: 30,\n        width: 30,\n    };\n\n    idPrefix = `${uniqueId(ICON_CLASS)}-`;\n\n    render() {\n        const { className, height, title, width } = this.props;\n        return (\n            <AccessibleSVG\n                className={`${ICON_CLASS} ${className}`}\n                height={height}\n                title={title}\n                viewBox=\"0 0 30 30\"\n                width={width}\n            >\n                <defs>\n                    <linearGradient\n                        gradientTransform=\"matrix(2.67 0 0 -2.67 596.67 1357)\"\n                        gradientUnits=\"userSpaceOnUse\"\n                        id={`${this.idPrefix}a`}\n                        x1=\"-215.49\"\n                        x2=\"-215.49\"\n                        y1=\"505.79\"\n                        y2=\"503.19\"\n                    >\n                        <stop offset=\"0\" stopColor=\"#d08714\" stopOpacity=\".88\" />\n                        <stop offset=\".55\" stopColor=\"#cf8714\" stopOpacity=\".2\" />\n                    </linearGradient>\n                </defs>\n                <path\n                    d=\"M17.64 0H6.05A2.05 2.05 0 0 0 4 2.05V28a2.05 2.05 0 0 0 2.05 2h17.72a2.05 2.05 0 0 0 2.05-2V8.18l-4.77-3.41z\"\n                    fill=\"#f4b912\"\n                />\n                <path d=\"M18.23 7.58l7.59 7.58V8.18l-7.59-.6z\" fill={`url(#${this.idPrefix}a)`} />\n                <path d=\"M17.64 0v6.14a2 2 0 0 0 2 2h6.14z\" fill=\"#fadc87\" />\n                <path\n                    d=\"M6.05 0A2.05 2.05 0 0 0 4 2.05v.17A2.05 2.05 0 0 1 6.05.17h11.59V0z\"\n                    fill=\"#fff\"\n                    fillOpacity=\".2\"\n                />\n                <path d=\"M19.68 8.18a2 2 0 0 1-2-2v.17a2 2 0 0 0 2 2h6.14v-.17z\" fill=\"#1a237e\" fillOpacity=\".1\" />\n                <path\n                    d=\"M10 15v8a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1v-8a1 1 0 0 0-1-1h-8a1 1 0 0 0-1 1zm9 6h-8v-4h8z\"\n                    fill=\"#f1f1f1\"\n                />\n            </AccessibleSVG>\n        );\n    }\n}\n\nexport default IconGoogleSlides;\n"],"sourceRoot":""}