{"version":3,"sources":["webpack:///./src/common/messages.js","webpack:///./src/common/variables.js","webpack:///./src/components/focus-trap/FocusTrap.js","webpack:///./src/components/focus-trap/index.js","webpack:///./src/components/label/HiddenLabel.tsx","webpack:///./src/components/label/InfoIconWithTooltip.tsx","webpack:///./src/components/label/Label.scss","webpack:///./src/components/label/Label.tsx","webpack:///./src/components/label/LabelPrimitive.tsx","webpack:///./src/components/label/StandardLabel.tsx","webpack:///./src/components/label/index.tsx","webpack:///./src/components/link/Link.tsx","webpack:///./src/components/link/LinkBase.tsx","webpack:///./src/icon/fill/Info16.tsx","webpack:///./src/icons/general/IconInfo.tsx","webpack:///./src/icons/general/IconVerified.tsx"],"names":["messages","defineMessages","cancel","close","copy","copied","done","okay","save","send","optional","pillSelectorPlaceholder","messageSelectorPlaceholder","invalidInputError","minLengthError","maxLengthError","invalidEmailError","invalidURLError","invalidUserError","requiredFieldError","invalidDateError","BOX_BLUE","SEESEE","RESIN_TAG_TARGET","FocusTrap","React","el","tabbableEls","tabbable","length","focus","trapEl","event","handleOverlayKeyDown","props","document","activeElement","key","focusFirstElement","stopPropagation","preventDefault","componentDidMount","shouldDefaultFocus","setTimeout","previousFocusEl","componentWillUnmount","render","children","className","getRef","shouldOutlineFocus","rest","ref","classNames","handleElKeyDown","focusLastElement","handleTrapElKeyDown","HiddenLabel","labelContent","InfoIconWithTooltip","iconProps","tooltipText","TooltipPosition","TOP_CENTER","OptionalFormattedMessage","commonMessages","Label","text","tooltip","infoTooltip","infoIconProps","showOptionalText","hideLabel","push","LabelPrimitive","StandardLabel","label","TOP_RIGHT","Link","LinkBase","href","linkRef","target","rel","component","refProp","linkRel","LinkComponent","Info16","vars","IconInfo","color","height","title","width","IconVerified","bdlGreenLight","opacity"],"mappings":"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","file":"activity-sidebar~details-sidebar~metadata-sidebar.no.react.js","sourcesContent":["// @flow\nimport { defineMessages } from 'react-intl';\n\nconst messages = defineMessages({\n    cancel: {\n        defaultMessage: 'Cancel',\n        description: 'Cancel button text',\n        id: 'boxui.core.cancel',\n    },\n    close: {\n        defaultMessage: 'Close',\n        description: 'Close button text',\n        id: 'boxui.core.close',\n    },\n    copy: {\n        defaultMessage: 'Copy',\n        description: 'Copy button text',\n        id: 'boxui.core.copy',\n    },\n    copied: {\n        defaultMessage: 'Copied',\n        description: 'Copy button text after user clicks on it',\n        id: 'boxui.core.copied',\n    },\n    done: {\n        defaultMessage: 'Done',\n        description: 'Done button text',\n        id: 'boxui.core.done',\n    },\n    okay: {\n        defaultMessage: 'Okay',\n        description: 'Okay button text',\n        id: 'boxui.core.okay',\n    },\n    save: {\n        defaultMessage: 'Save',\n        description: 'Save button text',\n        id: 'boxui.core.save',\n    },\n    send: {\n        defaultMessage: 'Send',\n        description: 'Send button text',\n        id: 'boxui.core.send',\n    },\n    optional: {\n        defaultMessage: 'optional',\n        description: 'Optional text for labels',\n        id: 'boxui.core.optional',\n    },\n    pillSelectorPlaceholder: {\n        defaultMessage: 'Add names or email addresses',\n        description: 'Placeholder text for the pill selector',\n        id: 'boxui.share.pillSelectorPlaceholder',\n    },\n    messageSelectorPlaceholder: {\n        defaultMessage: 'Add a message',\n        description: 'Placeholder text for message section',\n        id: 'boxui.share.messageSelectorPlaceholder',\n    },\n    invalidInputError: {\n        defaultMessage: 'Invalid Input',\n        description: 'Generic error message for a field is invalid',\n        id: 'boxui.validation.genericError',\n    },\n    minLengthError: {\n        defaultMessage: 'Input must be at least {min} characters',\n        description: 'Error message for when an input value is too short. {min} is the minimum length',\n        id: 'boxui.validation.tooShortError',\n    },\n    maxLengthError: {\n        defaultMessage: 'Input cannot exceed {max} characters',\n        description: 'Error message for when an input value is too long. {max} is the maximum length',\n        id: 'boxui.validation.tooLongError',\n    },\n    invalidEmailError: {\n        defaultMessage: 'Invalid Email Address',\n        description: 'Error message for when an invalid email is entered',\n        id: 'boxui.validation.emailError',\n    },\n    invalidURLError: {\n        defaultMessage: 'Invalid URL',\n        description: 'Error message for when an invalid URL is entered',\n        id: 'boxui.validation.URLError',\n    },\n    invalidUserError: {\n        defaultMessage: 'Invalid User',\n        description: 'Error message for when an invalid user is entered',\n        id: 'boxui.validation.invalidUserError',\n    },\n    requiredFieldError: {\n        defaultMessage: 'Required Field',\n        description: 'Error message for when a required field is missing',\n        id: 'boxui.validation.requiredError',\n    },\n    invalidDateError: {\n        defaultMessage: 'Invalid Date',\n        description: 'Error message for when an invalid Date is entered',\n        id: 'boxui.validation.invalidDateError',\n    },\n});\n\nexport default messages;\n","// @flow\nconst BOX_BLUE = '#0061d5';\nconst SEESEE = '#ccc';\nconst RESIN_TAG_TARGET = 'data-resin-target';\n\nexport { BOX_BLUE, SEESEE, RESIN_TAG_TARGET };\n","// @flow\nimport * as React from 'react';\nimport tabbable from 'tabbable';\nimport classNames from 'classnames';\n\ntype Props = {\n    children: React.Node,\n    className?: string,\n    /** Function to get the ref to the focus trap wrapper element */\n    getRef?: Function,\n    /** Function to handle keyboard input passed in from parent component. e.g. close overlay on Escape */\n    handleOverlayKeyDown?: Function,\n    shouldDefaultFocus?: boolean,\n    shouldOutlineFocus?: boolean,\n};\n\nclass FocusTrap extends React.Component<Props> {\n    componentDidMount() {\n        if (this.props.shouldDefaultFocus) {\n            setTimeout(() => {\n                this.previousFocusEl = document.activeElement;\n                this.focusFirstElement();\n            }, 0);\n        } else {\n            setTimeout(() => {\n                if (this.el) {\n                    this.el.focus();\n                }\n            }, 0);\n        }\n    }\n\n    componentWillUnmount() {\n        setTimeout(() => {\n            if (this.previousFocusEl) {\n                this.previousFocusEl.focus();\n            }\n        }, 0);\n    }\n\n    el: ?HTMLDivElement;\n\n    previousFocusEl: ?HTMLElement;\n\n    trapEl: ?HTMLElement;\n\n    /**\n     * Focus the first tabbable element\n     */\n    focusFirstElement = () => {\n        if (!this.el) {\n            return;\n        }\n\n        const tabbableEls = tabbable(this.el);\n\n        // There are three trap-related elements, including first element.\n        // If there are 3 or fewer tabbable elements, that means there are no\n        // tabbable children, so focus on the trap element instead.\n        if (tabbableEls.length > 3) {\n            tabbableEls[1].focus();\n        } else if (this.trapEl) {\n            this.trapEl.focus();\n        }\n    };\n\n    /**\n     * Focus the last tabbable element\n     */\n    focusLastElement = () => {\n        if (!this.el) {\n            return;\n        }\n\n        const tabbableEls = tabbable(this.el);\n\n        // There are three trap-related elements, including the last two elements.\n        // If there are 3 or fewer tabbable elements, that means there are no\n        // tabbable children, so focus on the trap element instead.\n        if (tabbableEls.length > 3) {\n            tabbableEls[tabbableEls.length - 3].focus();\n        } else if (this.trapEl) {\n            this.trapEl.focus();\n        }\n    };\n\n    handleElKeyDown = (event: SyntheticKeyboardEvent<HTMLElement>) => {\n        const { handleOverlayKeyDown } = this.props;\n        if (this.el === document.activeElement && event.key === 'Tab') {\n            this.focusFirstElement();\n            event.stopPropagation();\n            event.preventDefault();\n        }\n\n        if (handleOverlayKeyDown) {\n            handleOverlayKeyDown(event);\n        }\n    };\n\n    handleTrapElKeyDown = (event: SyntheticKeyboardEvent<HTMLElement>) => {\n        if (event.key !== 'Tab') {\n            return;\n        }\n        event.stopPropagation();\n        event.preventDefault();\n    };\n\n    render() {\n        const {\n            children,\n            className,\n            getRef,\n            handleOverlayKeyDown,\n            shouldDefaultFocus,\n            shouldOutlineFocus,\n            ...rest\n        } = this.props;\n        return (\n            // eslint-disable-next-line jsx-a11y/no-static-element-interactions\n            <div\n                ref={ref => {\n                    this.el = ref;\n                    if (getRef) {\n                        getRef(ref);\n                    }\n                }}\n                className={classNames(className, {\n                    'should-outline-focus': shouldOutlineFocus,\n                })}\n                onKeyDown={this.handleElKeyDown}\n                {...rest}\n            >\n                {/* eslint-disable-next-line jsx-a11y/no-noninteractive-tabindex */}\n                <i aria-hidden onFocus={this.focusLastElement} tabIndex=\"0\" />\n                {children}\n                {/* eslint-disable-next-line jsx-a11y/no-noninteractive-tabindex */}\n                <i aria-hidden onFocus={this.focusFirstElement} tabIndex=\"0\" />\n                {/* in case children doesn't contain any focusable elements, focus on trap */}\n                <i\n                    ref={ref => {\n                        this.trapEl = ref;\n                    }}\n                    aria-hidden\n                    onKeyDown={this.handleTrapElKeyDown}\n                    // eslint-disable-next-line jsx-a11y/no-noninteractive-tabindex\n                    tabIndex=\"0\"\n                />\n            </div>\n        );\n    }\n}\n\nexport default FocusTrap;\n","// @flow\nexport { default } from './FocusTrap';\n","import * as React from 'react';\n\nimport LabelPrimitive from './LabelPrimitive';\n\nexport interface HiddenLabelProps {\n    /** Child for the label */\n    children: React.ReactElement;\n    /** Text content of the label */\n    labelContent: React.ReactNode;\n}\n\nconst HiddenLabel = ({ children, labelContent }: HiddenLabelProps) => (\n    <LabelPrimitive className=\"accessibility-hidden\" labelContent={labelContent}>\n        {children}\n    </LabelPrimitive>\n);\n\nexport default HiddenLabel;\n","import * as React from 'react';\n\nimport Info16 from '../../icon/fill/Info16';\nimport Tooltip, { TooltipPosition } from '../tooltip';\n\nexport interface InfoIconWithTooltipProps {\n    /** Custom class for the icon */\n    className?: string;\n    /** Optional props for the icon */\n    iconProps?: Record<string, any>; // eslint-disable-line @typescript-eslint/no-explicit-any\n    /** Optional tooltip text for the label */\n    tooltipText: React.ReactNode;\n}\n\nconst InfoIconWithTooltip = ({ className = '', iconProps, tooltipText }: InfoIconWithTooltipProps) => (\n    <span key=\"infoIcon\" className={`${className} tooltip-icon-container`}>\n        <Tooltip position={TooltipPosition.TOP_CENTER} text={tooltipText}>\n            <span className=\"info-icon-container\">\n                <Info16 {...iconProps} />\n            </span>\n        </Tooltip>\n    </span>\n);\n\nexport default InfoIconWithTooltip;\n","// extracted by mini-css-extract-plugin","import * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport InfoIconWithTooltip from './InfoIconWithTooltip';\nimport StandardLabel from './StandardLabel';\nimport HiddenLabel from './HiddenLabel';\n// @ts-ignore flow import\nimport commonMessages from '../../common/messages';\n\nimport './Label.scss';\n\nconst OptionalFormattedMessage = () => (\n    <span className=\"label-optional bdl-Label-optional\">\n        (<FormattedMessage {...commonMessages.optional} />)\n    </span>\n);\n\nexport interface LabelProps {\n    /** Child for the label */\n    children: React.ReactElement;\n    /** Whether the text of the label should be accessibly hidden */\n    hideLabel?: boolean;\n    /** Optional props for the icon */\n    infoIconProps?: Record<string, any>; // eslint-disable-line @typescript-eslint/no-explicit-any\n    /** Tooltip text for the info icon */\n    infoTooltip?: React.ReactNode;\n    /** Whether to show the `(Optional)` text next to the label for an optional field */\n    showOptionalText?: boolean;\n    /** The label text */\n    text: React.ReactNode;\n    /** Optional tooltip text for the label */\n    tooltip?: React.ReactNode;\n}\n\nconst Label = ({ text, tooltip, infoTooltip, infoIconProps, showOptionalText, hideLabel, children }: LabelProps) => {\n    const labelContent = [\n        <span key=\"labelText\">{text}</span>,\n        showOptionalText ? <OptionalFormattedMessage key=\"optionalMessage\" /> : null,\n    ];\n\n    if (infoTooltip) {\n        labelContent.push(\n            <InfoIconWithTooltip\n                key=\"infoTooltip\"\n                iconProps={{ className: 'tooltip-icon', ...infoIconProps }}\n                tooltipText={infoTooltip}\n            />,\n        );\n    }\n\n    if (hideLabel) {\n        return <HiddenLabel labelContent={labelContent}>{children}</HiddenLabel>;\n    }\n\n    return (\n        <StandardLabel labelContent={labelContent} tooltip={tooltip}>\n            {children}\n        </StandardLabel>\n    );\n};\n\nexport default Label;\n","import * as React from 'react';\nimport classNames from 'classnames';\n\nexport interface LabelPrimitiveProps {\n    /** Child for the label */\n    children: React.ReactElement;\n    /** Custom class for the label */\n    className?: string;\n    /** Text content of the label */\n    labelContent: React.ReactNode;\n}\n\nconst LabelPrimitive = ({ children, className, labelContent, ...rest }: LabelPrimitiveProps) => (\n    <label>\n        <span className={classNames('label bdl-Label', className)} {...rest}>\n            {labelContent}\n        </span>\n        {children}\n    </label>\n);\n\nexport default LabelPrimitive;\n","import * as React from 'react';\n\nimport Tooltip, { TooltipPosition } from '../tooltip';\nimport LabelPrimitive from './LabelPrimitive';\n\nexport interface StandardLabelProps {\n    /** Child for the label */\n    children: React.ReactElement;\n    /** Text content of the label */\n    labelContent: React.ReactNode;\n    /** Optional tooltip text for the label */\n    tooltip?: React.ReactNode;\n}\n\nconst StandardLabel = ({ children, labelContent, tooltip }: StandardLabelProps) => {\n    const label = <LabelPrimitive labelContent={labelContent}>{children}</LabelPrimitive>;\n\n    return tooltip ? (\n        <Tooltip position={TooltipPosition.TOP_RIGHT} text={tooltip}>\n            {label}\n        </Tooltip>\n    ) : (\n        label\n    );\n};\n\nexport default StandardLabel;\n","export { default } from './Label';\n","import * as React from 'react';\n\nimport LinkBase, { LinkBaseProps } from './LinkBase';\n\nexport interface LinkProps extends LinkBaseProps {\n    children: React.ReactChild;\n    className: string;\n}\n\n// TODO: convert to stateless function\n// eslint-disable-next-line react/prefer-stateless-function\nclass Link extends React.Component<LinkProps> {\n    static defaultProps = {\n        className: '',\n    };\n\n    render() {\n        const { className, ...rest } = this.props;\n\n        return <LinkBase className={`link ${className}`} {...rest} />;\n    }\n}\n\nexport default Link;\n","import * as React from 'react';\n\nexport interface LinkBaseProps {\n    children: React.ReactChild;\n    className?: string;\n    component?: React.ElementType;\n    href?: string;\n    linkRef?: Function;\n    refProp?: string;\n    rel?: string;\n    target?: string;\n}\n\nconst LinkBase = ({ children, href = '#', linkRef, target, rel, component, refProp, ...rest }: LinkBaseProps) => {\n    // Automatically append rel=\"noopener\" for external links\n    // (security fix) if no `rel` was passed\n    const linkRel = target === '_blank' && !rel ? 'noopener' : rel;\n    const LinkComponent = component || 'a';\n    const ref = { [refProp || 'ref']: linkRef };\n\n    return (\n        <LinkComponent href={href} rel={linkRel} target={target} {...ref} {...rest}>\n            {children}\n        </LinkComponent>\n    );\n};\n\nexport default LinkBase;\n","/* eslint-disable react/jsx-sort-props */\nimport * as React from 'react';\nimport * as vars from '../../styles/variables';\nimport AccessibleSVG, { SVGProps } from '../../components/accessible-svg/AccessibleSVG';\n\n/**\n * This is an auto-generated component and should not be edited\n * manually in contributor pull requests.\n *\n * If you have problems with this component:\n * - https://github.com/box/box-ui-elements/issues/new?template=Bug_report.md\n *\n * If there are missing features in this component:\n * - https://github.com/box/box-ui-elements/issues/new?template=Feature_request.md\n */\n\nconst Info16 = (props: SVGProps) => (\n    <AccessibleSVG width={16} height={16} viewBox=\"0 0 16 16\" {...props}>\n        <path\n            fill={vars.bdlGray50}\n            d=\"M8 1a7 7 0 110 14A7 7 0 018 1zm.5 6H7a.5.5 0 000 1h.5v3H7a.5.5 0 100 1h2.5a.5.5 0 100-1H9V7.75a.783.783 0 00-.012-.139A.502.502 0 008.5 7zM8 4a1 1 0 100 2 1 1 0 000-2z\"\n        />\n    </AccessibleSVG>\n);\n\nexport default Info16;\n","import * as React from 'react';\n\nimport AccessibleSVG from '../accessible-svg';\n\nimport { Icon } from '../iconTypes';\n\nconst IconInfo = ({ className = '', color = '#000000', height = 24, title, width = 24 }: Icon) => (\n    <AccessibleSVG\n        className={`icon-info ${className}`}\n        height={height}\n        title={title}\n        viewBox=\"-603 389 16 16\"\n        width={width}\n    >\n        <path\n            className=\"fill-color\"\n            d=\"M-595 403c5.5 0 8-7.1 3.9-10.6-4.2-3.6-10.8.3-9.8 5.7.5 2.8 3 4.9 5.9 4.9zm.9-6.7v3.7h-1.4v-3.7h1.4zm.1-2.2c0 1-1.7 1.1-1.7 0 .1-1.1 1.7-1.1 1.7 0z\"\n            fill={color}\n            fillRule=\"evenodd\"\n        />\n    </AccessibleSVG>\n);\n\nexport default IconInfo;\n","import * as React from 'react';\nimport { bdlGreenLight } from '../../styles/variables';\n\nimport AccessibleSVG from '../accessible-svg';\nimport { Icon } from '../iconTypes';\n\nconst IconVerified = ({ className = '', color = bdlGreenLight, height = 14, opacity = 1, title, width = 14 }: Icon) => (\n    <AccessibleSVG\n        className={`icon-verified ${className}`}\n        height={height}\n        opacity={opacity}\n        title={title}\n        viewBox=\"0 0 14 14\"\n        width={width}\n    >\n        <path\n            d=\"M7 14c-3.865993 0-7-3.134007-7-7s3.134007-7 7-7 7 3.134007 7 7-3.134007 7-7 7zM5.31288 9.303048l1.44555 1.21296 4.499514-5.36231-1.44555-1.21296-4.499514 5.36231zM3 7.36231L5.31288 9.30305l1.21296-1.44555L4.21296 5.91676 3 7.36231z\"\n            fill={color}\n            fillRule=\"evenodd\"\n        />\n    </AccessibleSVG>\n);\n\nexport default IconVerified;\n"],"sourceRoot":""}