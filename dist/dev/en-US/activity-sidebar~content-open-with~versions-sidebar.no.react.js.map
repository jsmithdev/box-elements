{"version":3,"sources":["webpack:///./src/components/dropdown-menu/DropdownMenu.js","webpack:///./src/components/dropdown-menu/DropdownMenu.scss","webpack:///./src/components/dropdown-menu/MenuToggle.js","webpack:///./src/components/dropdown-menu/MenuToggle.scss","webpack:///./src/components/menu/Menu.scss","webpack:///./src/components/menu/Menu.tsx","webpack:///./src/components/menu/MenuContext.tsx","webpack:///./src/components/menu/MenuItem.tsx"],"names":["DropdownMenu","React","uniqueId","initialFocusIndex","isOpen","setState","event","onMenuClose","noop","props","menuButtonEl","document","getElementById","menuButtonID","focus","state","stopPropagation","preventDefault","closeMenu","openMenuAndSetFocusIndex","key","KEYS","space","enter","arrowDown","arrowUp","escape","isKeyboardEvent","focusButton","menuEl","menuID","target","Node","contains","componentDidUpdate","prevProps","prevState","useBubble","addEventListener","handleDocumentClick","onMenuOpen","removeEventListener","componentWillUnmount","render","bodyElement","children","className","constrainToScrollParent","constrainToWindow","constrainToWindowWithPin","isResponsive","isRightAligned","elements","toArray","length","Error","menuButton","menu","menuButtonProps","id","onClick","handleButtonClick","onKeyDown","handleButtonKeyDown","undefined","menuProps","onClose","handleMenuClose","attachment","targetAttachment","constraints","push","to","pin","bodyEl","HTMLElement","body","classNames","MenuToggle","MENU_ITEM_SELECTOR","TOP_LEVEL_MENU_ITEM_SELECTOR","SUBMENU_ITEM_SELECTOR","stopPropagationAndPreventDefault","Menu","constructor","isHidden","setTimeout","setFocus","isSubmenu","menuItemSelector","selector","menuItemEls","slice","call","querySelectorAll","menuItemEl","menuIndex","i","index","numMenuItems","focusIndex","getMenuItemElFromEventTarget","fireOnCloseHandler","keyboardPressed","focusFirstItem","focusNextItem","focusPreviousItem","focusLastItem","click","componentDidMount","setMenuItemEls","setInitialFocusIndex","prevIsHidden","prevChildren","focusedMenuItemEl","isFocusedElementMissing","isFocusIndexOutOfBounds","setRef","shouldOutlineFocus","rest","omit","ref","role","tabIndex","handleClick","handleKeyDown","MenuItem","isDisabled","isSelectItem","isSelected","showRadar","menuItemProps","onClickHandler","menuItem"],"mappings":"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","file":"activity-sidebar~content-open-with~versions-sidebar.no.react.js","sourcesContent":["// @flow\nimport * as React from 'react';\nimport TetherComponent from 'react-tether';\nimport classNames from 'classnames';\nimport noop from 'lodash/noop';\nimport uniqueId from 'lodash/uniqueId';\n\nimport { KEYS } from '../../constants';\nimport './DropdownMenu.scss';\n\ntype Props = {\n    bodyElement?: HTMLElement,\n    children: React.Node,\n    /** Forces menu to render within the scroll parent */\n    className?: string,\n    /** Forces menu to render within the visible window */\n    constrainToScrollParent: boolean,\n    /** Right aligns menu to button */\n    constrainToWindow: boolean,\n    /** Forces menu to render within the visible window and pins the dropdown if scrolled */\n    constrainToWindowWithPin?: boolean,\n    /** Enables responsive behaviors for this component */\n    isResponsive?: boolean,\n    /** Function called when menu is opened */\n    isRightAligned: boolean,\n    /** Handler for dropdown menu close events */\n    onMenuClose?: (event: SyntheticEvent<> | MouseEvent) => void,\n    /** Handler for dropdown menu open events */\n    onMenuOpen?: () => void,\n    /** Set true to close dropdown menu on event bubble instead of event capture */\n    useBubble?: boolean,\n};\n\ntype State = {\n    initialFocusIndex: ?number,\n    isOpen: boolean,\n};\n\nclass DropdownMenu extends React.Component<Props, State> {\n    static defaultProps = {\n        constrainToScrollParent: false,\n        constrainToWindow: false,\n        isResponsive: false,\n        isRightAligned: false,\n    };\n\n    menuID = uniqueId('menu');\n\n    menuButtonID = uniqueId('menubutton');\n\n    state = {\n        initialFocusIndex: null,\n        isOpen: false,\n    };\n\n    componentDidUpdate(prevProps: Props, prevState: State) {\n        const { useBubble } = this.props;\n        if (!prevState.isOpen && this.state.isOpen) {\n            // When menu is being opened\n            document.addEventListener('click', this.handleDocumentClick, !useBubble);\n            document.addEventListener('contextmenu', this.handleDocumentClick, !useBubble);\n\n            const { onMenuOpen } = this.props;\n            if (onMenuOpen) {\n                onMenuOpen();\n            }\n        } else if (prevState.isOpen && !this.state.isOpen) {\n            // When menu is being closed\n            document.removeEventListener('contextmenu', this.handleDocumentClick, !useBubble);\n            document.removeEventListener('click', this.handleDocumentClick, !useBubble);\n        }\n    }\n\n    componentWillUnmount() {\n        const { useBubble } = this.props;\n        if (this.state.isOpen) {\n            // Clean-up global click handlers\n            document.removeEventListener('contextmenu', this.handleDocumentClick, !useBubble);\n            document.removeEventListener('click', this.handleDocumentClick, !useBubble);\n        }\n    }\n\n    menuID: string;\n\n    menuButtonID: string;\n\n    openMenuAndSetFocusIndex = (initialFocusIndex: ?number) => {\n        this.setState({\n            initialFocusIndex,\n            isOpen: true,\n        });\n    };\n\n    closeMenu = (event: SyntheticEvent<> | MouseEvent) => {\n        const { onMenuClose = noop } = this.props;\n        this.setState(\n            {\n                isOpen: false,\n            },\n            () => onMenuClose(event),\n        );\n    };\n\n    focusButton = () => {\n        // @NOTE: This breaks encapsulation a bit, but the only other way is passing ref functions to unknown children components\n        const menuButtonEl = document.getElementById(this.menuButtonID);\n        if (menuButtonEl) {\n            menuButtonEl.focus();\n        }\n    };\n\n    handleButtonClick = (event: SyntheticEvent<>) => {\n        const { isOpen } = this.state;\n\n        event.stopPropagation();\n        event.preventDefault();\n\n        if (isOpen) {\n            this.closeMenu(event);\n        } else {\n            this.openMenuAndSetFocusIndex(null);\n        }\n    };\n\n    handleButtonKeyDown = (event: SyntheticKeyboardEvent<>) => {\n        const { isOpen } = this.state;\n\n        switch (event.key) {\n            case KEYS.space:\n            case KEYS.enter:\n            case KEYS.arrowDown:\n                event.stopPropagation();\n                event.preventDefault();\n\n                this.openMenuAndSetFocusIndex(0);\n                break;\n\n            case KEYS.arrowUp:\n                event.stopPropagation();\n                event.preventDefault();\n\n                this.openMenuAndSetFocusIndex(-1);\n                break;\n\n            case KEYS.escape:\n                if (isOpen) {\n                    event.stopPropagation();\n                }\n\n                event.preventDefault();\n                this.closeMenu(event);\n                break;\n\n            default:\n                break;\n        }\n    };\n\n    handleMenuClose = (isKeyboardEvent: boolean, event: SyntheticEvent<> | MouseEvent) => {\n        this.closeMenu(event);\n        this.focusButton();\n    };\n\n    handleDocumentClick = (event: MouseEvent) => {\n        const menuEl = document.getElementById(this.menuID);\n        const menuButtonEl = document.getElementById(this.menuButtonID);\n\n        // Some DOM magic to get global click handlers to close menu when not interacting with menu or associated button\n        if (\n            menuEl &&\n            menuButtonEl &&\n            event.target instanceof Node &&\n            !menuEl.contains(event.target) &&\n            !menuButtonEl.contains(event.target)\n        ) {\n            this.closeMenu(event);\n        }\n    };\n\n    render() {\n        const {\n            bodyElement,\n            children,\n            className,\n            constrainToScrollParent,\n            constrainToWindow,\n            constrainToWindowWithPin,\n            isResponsive,\n            isRightAligned,\n        } = this.props;\n\n        const { isOpen, initialFocusIndex } = this.state;\n\n        const elements = React.Children.toArray(children);\n\n        if (elements.length !== 2) {\n            throw new Error('DropdownMenu must have exactly two children: A button component and a <Menu>');\n        }\n\n        const menuButton = elements[0];\n        const menu = elements[1];\n\n        const menuButtonProps: Object = {\n            id: this.menuButtonID,\n            key: this.menuButtonID,\n            onClick: this.handleButtonClick, // NOTE: Overrides button's handler\n            onKeyDown: this.handleButtonKeyDown, // NOTE: Overrides button's handler\n            'aria-expanded': isOpen ? 'true' : 'false',\n        };\n\n        if (menuButton.props['aria-haspopup'] === undefined) {\n            menuButtonProps['aria-haspopup'] = 'true';\n        }\n\n        // Add this only when its open, otherwise the menuID element isn't rendered\n        if (isOpen) {\n            menuButtonProps['aria-controls'] = this.menuID;\n        }\n\n        const menuProps = {\n            id: this.menuID,\n            key: this.menuID,\n            initialFocusIndex,\n            onClose: this.handleMenuClose,\n            'aria-labelledby': this.menuButtonID,\n        };\n\n        let attachment = 'top left';\n        let targetAttachment = 'bottom left';\n\n        if (isRightAligned) {\n            attachment = 'top right';\n            targetAttachment = 'bottom right';\n        }\n\n        const constraints = [];\n\n        if (constrainToScrollParent) {\n            constraints.push({\n                to: 'scrollParent',\n                attachment: 'together',\n            });\n        }\n\n        if (constrainToWindow) {\n            constraints.push({\n                to: 'window',\n                attachment: 'together',\n            });\n        }\n\n        if (constrainToWindowWithPin) {\n            constraints.push({\n                to: 'window',\n                attachment: 'together',\n                pin: true,\n            });\n        }\n\n        const bodyEl = bodyElement instanceof HTMLElement ? bodyElement : document.body;\n\n        return (\n            <TetherComponent\n                attachment={attachment}\n                bodyElement={bodyEl}\n                className={classNames({ 'bdl-DropdownMenu--responsive': isResponsive }, className)}\n                classPrefix=\"dropdown-menu\"\n                constraints={constraints}\n                enabled={isOpen}\n                targetAttachment={targetAttachment}\n            >\n                {React.cloneElement(menuButton, menuButtonProps)}\n                {isOpen && React.cloneElement(menu, menuProps)}\n            </TetherComponent>\n        );\n    }\n}\n\nexport default DropdownMenu;\n","// extracted by mini-css-extract-plugin","// @flow\nimport * as React from 'react';\n\nimport IconCaretDown from '../../icons/general/IconCaretDown';\n\nimport './MenuToggle.scss';\n\ntype Props = {\n    children?: React.Node,\n};\n\nconst MenuToggle = ({ children }: Props) => (\n    <span className=\"menu-toggle\">\n        {children}\n        <IconCaretDown className=\"toggle-arrow\" width={7} />\n    </span>\n);\n\nexport default MenuToggle;\n","// extracted by mini-css-extract-plugin","// extracted by mini-css-extract-plugin","import * as React from 'react';\nimport omit from 'lodash/omit';\nimport classNames from 'classnames';\n\nimport MenuContext from './MenuContext';\n\nimport './Menu.scss';\n\n/**\n * The selectors are used to identify the menu item that is selected. We need to eventually\n * rewrite this logic as there seem to be strong coupling between the selector and MenuItem\n * that we want to decouple. The span is here to allow Menu to recognize MenuItem even if it is\n * wrapped by a span coming from a tooltip.\n */\nconst MENU_ITEM_SELECTOR = '.menu-item:not([aria-disabled])';\nconst TOP_LEVEL_MENU_ITEM_SELECTOR = `ul:not(.submenu) > ${MENU_ITEM_SELECTOR}, ul:not(.submenu) > li > ${MENU_ITEM_SELECTOR}, ul:not(.submenu) > span > ${MENU_ITEM_SELECTOR}`;\nconst SUBMENU_ITEM_SELECTOR = `ul.submenu > ${MENU_ITEM_SELECTOR}, ul.submenu > li > ${MENU_ITEM_SELECTOR}, ul.submenu > span > ${MENU_ITEM_SELECTOR}`;\n\nfunction stopPropagationAndPreventDefault(event: React.KeyboardEvent<HTMLElement>) {\n    event.stopPropagation();\n    event.preventDefault();\n}\n\ninterface MenuProps {\n    /** children - menu items */\n    children: Array<React.ReactNode> | Array<React.ReactChild> | React.ReactChild;\n    /** className - CSS class name for the menu */\n    className: string;\n    /** initialFocusIndex - focuses a specific menu item index when menu is mounted */\n    initialFocusIndex?: number;\n    /** isHidden - whether the menu’s content is hidden */\n    isHidden?: boolean;\n    /** isSubmenu - whether this is a submenu of another menu */\n    isSubmenu?: boolean;\n    /** menuItemSelector - overrides the default menu selector */\n    menuItemSelector?: string;\n    /** onClick - function called when the menu is clicked */\n    onClick?: (event: React.MouseEvent<HTMLUListElement, MouseEvent>) => void;\n    /** onClick - function called when the menu is closed */\n    onClose?: (\n        isKeyboardEvent?: boolean,\n        event?: React.MouseEvent<HTMLUListElement, MouseEvent> | React.KeyboardEvent<HTMLElement>,\n    ) => void;\n    /** onClick - function called when a key is pressed within the menu */\n    onKeyDown?: (event: React.KeyboardEvent<HTMLUListElement>) => void;\n    /** ref - reference to the menu element in the DOM */\n    ref?: string | ((instance: HTMLUListElement | null) => void) | React.RefObject<HTMLUListElement> | null | undefined;\n    /** role - ARIA role for the menu */\n    role?: string;\n    /** setRef - will fire this callback when menu should \"close' */\n    setRef?: Function;\n    /** shouldOutlineFocus - whether the focused menu item should have an outline */\n    shouldOutlineFocus?: boolean;\n    /** tabIndex - indicator of whether the menu is focusable */\n    tabIndex?: number;\n}\n\nclass Menu extends React.Component<MenuProps> {\n    static defaultProps = {\n        className: '',\n        isSubmenu: false,\n        isHidden: false,\n    };\n\n    constructor(props: MenuProps) {\n        super(props);\n\n        this.focusIndex = 0;\n        this.menuEl = null;\n        this.menuItemEls = [];\n    }\n\n    componentDidMount() {\n        this.setMenuItemEls();\n        this.setInitialFocusIndex();\n    }\n\n    componentDidUpdate({ isHidden: prevIsHidden, children: prevChildren }: MenuProps) {\n        const { children, isHidden, isSubmenu } = this.props;\n\n        if (isSubmenu && prevIsHidden && !isHidden) {\n            // If updating submenu, use the current props instead of previous props.\n            this.setMenuItemEls();\n            this.setInitialFocusIndex(this.props);\n        }\n\n        // update focus index and menu item elements when the number of children changes\n        if (React.Children.toArray(prevChildren).length !== React.Children.toArray(children).length) {\n            const focusedMenuItemEl = this.menuItemEls[this.focusIndex];\n            this.setMenuItemEls();\n            const { menuIndex } = this.getMenuItemElFromEventTarget(focusedMenuItemEl);\n\n            const isFocusedElementMissing = menuIndex === -1;\n            const isFocusIndexOutOfBounds = this.focusIndex >= this.menuItemEls.length;\n\n            this.setFocus(isFocusedElementMissing && !isFocusIndexOutOfBounds ? this.focusIndex : menuIndex);\n        }\n    }\n\n    setInitialFocusIndex = (props: MenuProps = this.props) => {\n        const { initialFocusIndex, isHidden } = props;\n\n        if (isHidden || initialFocusIndex === undefined) {\n            return;\n        }\n\n        // If an initialFocusIndex was specified, attempt to use it to focus\n        if (typeof initialFocusIndex === 'number') {\n            // We do this after a timeout so that the menu is properly mounted before we attempt to focus it\n            setTimeout(() => {\n                this.setFocus(initialFocusIndex);\n            }, 0);\n        } else if (initialFocusIndex === null) {\n            // If no initial focus index is set, focus on the menu itself so that keyboard shortcut still works after a mouse click.\n            setTimeout(() => {\n                if (this.menuEl) {\n                    this.menuEl.focus();\n                }\n            }, 0);\n        }\n    };\n\n    setMenuItemEls = () => {\n        const { isSubmenu, menuItemSelector } = this.props;\n\n        const selector = menuItemSelector || (isSubmenu ? SUBMENU_ITEM_SELECTOR : TOP_LEVEL_MENU_ITEM_SELECTOR);\n        // Keep track of all the valid menu items that were rendered (querySelector since we don't want to pass ref functions to every single child)\n        this.menuItemEls = this.menuEl ? [].slice.call(this.menuEl.querySelectorAll(selector)) : [];\n    };\n\n    getMenuItemElFromEventTarget = (\n        target: Node,\n    ): {\n        menuItemEl?: HTMLElement | null;\n        menuIndex: number;\n    } => {\n        let menuItemEl = null;\n        let menuIndex = -1;\n\n        for (let i = 0; i < this.menuItemEls.length; i += 1) {\n            if (this.menuItemEls[i].contains(target)) {\n                menuItemEl = this.menuItemEls[i];\n                menuIndex = i;\n                break;\n            }\n        }\n        return { menuItemEl, menuIndex };\n    };\n\n    setFocus = (index: number) => {\n        if (!this.menuItemEls.length) {\n            return;\n        }\n\n        const numMenuItems = this.menuItemEls.length;\n\n        if (index >= numMenuItems) {\n            this.focusIndex = 0;\n        } else if (index < 0) {\n            this.focusIndex = numMenuItems - 1;\n        } else {\n            this.focusIndex = index;\n        }\n\n        this.menuItemEls[this.focusIndex].focus();\n    };\n\n    focusIndex: number;\n\n    keyboardPressed: boolean | null | undefined;\n\n    menuEl: HTMLUListElement | null | undefined;\n\n    menuItemEls: Array<HTMLElement>;\n\n    focusFirstItem = () => {\n        this.setFocus(0);\n    };\n\n    focusLastItem = () => {\n        this.setFocus(-1);\n    };\n\n    focusNextItem = () => {\n        this.setFocus(this.focusIndex + 1);\n    };\n\n    focusPreviousItem = () => {\n        this.setFocus(this.focusIndex - 1);\n    };\n\n    fireOnCloseHandler = (\n        isKeyboardEvent?: boolean,\n        event?: React.MouseEvent<HTMLUListElement, MouseEvent> | React.KeyboardEvent<HTMLElement>,\n    ) => {\n        const { onClose } = this.props;\n\n        if (onClose) {\n            // We need to pass the event type so we know which item to focus.\n            onClose(isKeyboardEvent, event);\n        }\n    };\n\n    handleClick = (event: React.MouseEvent<HTMLUListElement, MouseEvent>) => {\n        const { menuItemEl }: { menuItemEl?: HTMLElement | null } =\n            event.target instanceof Node ? this.getMenuItemElFromEventTarget(event.target) : {};\n\n        if (!menuItemEl) {\n            return;\n        }\n        this.fireOnCloseHandler(false, event);\n    };\n\n    handleKeyDown = (event: React.KeyboardEvent<HTMLElement>) => {\n        const { isSubmenu, initialFocusIndex } = this.props;\n\n        switch (event.key) {\n            case 'ArrowDown':\n                stopPropagationAndPreventDefault(event); // If it's first keyboard event, focus on first item.\n\n                if (initialFocusIndex === null && !this.keyboardPressed) {\n                    this.focusFirstItem();\n                } else {\n                    this.focusNextItem();\n                }\n\n                break;\n\n            case 'ArrowUp':\n                stopPropagationAndPreventDefault(event);\n                this.focusPreviousItem();\n                break;\n\n            case 'ArrowLeft':\n                // Close submenu when arrow-left is clicked\n                if (!isSubmenu) {\n                    return;\n                }\n\n                stopPropagationAndPreventDefault(event);\n                this.fireOnCloseHandler(true, event);\n                break;\n\n            case 'Home':\n            case 'PageUp':\n                stopPropagationAndPreventDefault(event);\n                this.focusFirstItem();\n                break;\n\n            case 'End':\n            case 'PageDown':\n                stopPropagationAndPreventDefault(event);\n                this.focusLastItem();\n                break;\n\n            case 'Escape':\n                stopPropagationAndPreventDefault(event);\n                this.fireOnCloseHandler(true, event);\n                break;\n\n            case 'Tab':\n                // DO NOT PREVENT DEFAULT OR STOP PROPAGATION - This should move focus natively\n                this.fireOnCloseHandler(true, event);\n                break;\n\n            case ' ':\n            case 'Enter':\n                stopPropagationAndPreventDefault(event);\n\n                if (event.target instanceof HTMLElement) {\n                    event.target.click();\n                }\n\n                break;\n\n            default:\n                break;\n        }\n\n        this.keyboardPressed = true;\n    };\n\n    render() {\n        const { children, className, isHidden, setRef, shouldOutlineFocus, ...rest } = this.props;\n\n        const menuProps = omit(rest, ['onClose', 'initialFocusIndex', 'isSubmenu', 'menuItemSelector']) as MenuProps;\n        menuProps.className = classNames('aria-menu', className, {\n            'is-hidden': isHidden,\n            'should-outline-focus': shouldOutlineFocus,\n        });\n        menuProps.ref = (ref: HTMLUListElement | null) => {\n            this.menuEl = ref;\n            if (setRef) {\n                setRef(ref);\n            }\n        };\n        if (menuProps.role === undefined) {\n            menuProps.role = 'menu';\n        }\n        menuProps.tabIndex = -1;\n        menuProps.onClick = this.handleClick;\n        menuProps.onKeyDown = this.handleKeyDown;\n\n        return (\n            <ul {...menuProps}>\n                <MenuContext.Provider value={{ closeMenu: this.fireOnCloseHandler }}>{children}</MenuContext.Provider>\n            </ul>\n        );\n    }\n}\n\nexport default Menu;\n","// @flow\nimport * as React from 'react';\nimport noop from 'lodash/noop';\n\ntype MenuContextValues = {\n    closeMenu: Function;\n};\n\nexport default React.createContext<MenuContextValues>({ closeMenu: noop });\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport omit from 'lodash/omit';\n\nimport RadarAnimation from '../radar';\n\nexport interface MenuItemProps {\n    /** 'aria-checked' - ARIA attribute for checkbox elements */\n    'aria-checked'?: boolean;\n    /** 'aria-disabled' - ARIA attribute describing whether the menu item is disabled */\n    'aria-disabled'?: boolean | 'true' | 'false';\n    /** children - menu item content */\n    children?: Array<React.ReactChild> | React.ReactChild;\n    /** className - CSS class name for the menu item */\n    className?: string;\n    /** isDisabled - whether the menu item is disabled */\n    isDisabled?: boolean;\n    /** isSelectItem - whether the menu item is a checkbox element */\n    isSelectItem?: boolean;\n    /** isSelected - whether the menu item is selected */\n    isSelected?: boolean;\n    /** onClick - function called when the menu item is clicked */\n    onClick?: (event: React.MouseEvent<HTMLLIElement, MouseEvent>) => void;\n    /** role - ARIA role for the menu item */\n    role?: string;\n    /** showRadar - whether the radar component is shown */\n    showRadar?: boolean;\n    /** tabIndex - indicator of whether the menu item is focusable */\n    tabIndex?: number;\n}\n\nclass MenuItem extends React.Component<MenuItemProps> {\n    onClickHandler = (event: React.MouseEvent<HTMLLIElement, MouseEvent>) => {\n        const { isDisabled, onClick } = this.props;\n\n        // If aria-disabled is passed as a prop, we should ignore clicks on this menu item\n        if (isDisabled) {\n            event.stopPropagation();\n            event.preventDefault();\n\n            return;\n        }\n\n        if (onClick) {\n            onClick(event);\n        }\n    };\n\n    render() {\n        const { children, className, isDisabled, isSelectItem, isSelected, showRadar, ...rest } = this.props;\n        const menuItemProps: MenuItemProps = omit(rest, ['role', 'tabIndex', 'onClick']);\n\n        menuItemProps.className = classNames('menu-item', className, {\n            'is-select-item': isSelectItem,\n            'is-selected': isSelected,\n        });\n        menuItemProps.role = isSelectItem ? 'menuitemradio' : 'menuitem';\n        menuItemProps.tabIndex = -1;\n        menuItemProps.onClick = this.onClickHandler;\n\n        if (isSelectItem) {\n            menuItemProps['aria-checked'] = isSelected;\n        }\n\n        if (isDisabled) {\n            menuItemProps['aria-disabled'] = 'true';\n        }\n\n        let menuItem = <li {...menuItemProps}>{children}</li>;\n        if (showRadar) {\n            menuItem = <RadarAnimation>{menuItem}</RadarAnimation>;\n        }\n\n        return menuItem;\n    }\n}\n\nexport default MenuItem;\n"],"sourceRoot":""}