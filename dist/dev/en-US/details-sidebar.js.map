{"version":3,"sources":["webpack:///./src/components/collapsible/index.ts","webpack:///./src/components/i18n/Composition.js","webpack:///./src/components/i18n/FormattedCompMessage.js","webpack:///./src/components/i18n/constants.js","webpack:///./src/components/modal/index.js","webpack:///./src/elements/common/date/DateField.js","webpack:///./src/elements/common/date/DateField.scss","webpack:///./src/elements/common/date/index.js","webpack:///./src/elements/content-sidebar/DetailsSidebar.js","webpack:///./src/elements/content-sidebar/DetailsSidebar.scss","webpack:///./src/elements/content-sidebar/SidebarAccessStats.js","webpack:///./src/elements/content-sidebar/SidebarClassification.js","webpack:///./src/elements/content-sidebar/SidebarClassification.scss","webpack:///./src/elements/content-sidebar/SidebarFileProperties.js","webpack:///./src/elements/content-sidebar/SidebarNotices.js","webpack:///./src/elements/content-sidebar/SidebarVersions.js","webpack:///./src/elements/content-sidebar/SidebarVersions.scss","webpack:///./src/features/access-stats/AccessStats.js","webpack:///./src/features/access-stats/AccessStats.scss","webpack:///./src/features/access-stats/AccessStatsItem.js","webpack:///./src/features/access-stats/AccessStatsItem.scss","webpack:///./src/features/access-stats/AccessStatsItemsList.js","webpack:///./src/features/access-stats/messages.js","webpack:///./src/features/classification/Classification.js","webpack:///./src/features/classification/Classification.scss","webpack:///./src/features/classification/ClassifiedBadge.js","webpack:///./src/features/classification/ClassifiedBadge.scss","webpack:///./src/features/classification/EditClassificationButton.js","webpack:///./src/features/classification/classificationColorsMap.js","webpack:///./src/features/classification/constants.js","webpack:///./src/features/classification/index.js","webpack:///./src/features/classification/messages.js","webpack:///./src/features/classification/security-controls/SecurityControls.js","webpack:///./src/features/classification/security-controls/SecurityControls.scss","webpack:///./src/features/classification/security-controls/SecurityControlsItem.js","webpack:///./src/features/classification/security-controls/SecurityControlsItem.scss","webpack:///./src/features/classification/security-controls/SecurityControlsModal.js","webpack:///./src/features/classification/security-controls/SecurityControlsModal.scss","webpack:///./src/features/classification/security-controls/appRestrictionsMessageMap.js","webpack:///./src/features/classification/security-controls/downloadRestrictionsMessageMap.js","webpack:///./src/features/classification/security-controls/index.js","webpack:///./src/features/classification/security-controls/messages.js","webpack:///./src/features/classification/security-controls/utils.js","webpack:///./src/features/classification/utils.js","webpack:///./src/features/item-details/EditableDescription.js","webpack:///./src/features/item-details/EditableURL.js","webpack:///./src/features/item-details/ItemExpirationNotice.js","webpack:///./src/features/item-details/ItemProperties.js","webpack:///./src/features/item-details/ItemProperties.scss","webpack:///./src/features/item-details/ReadonlyDescription.js","webpack:///./src/features/item-details/RetentionPolicy.js","webpack:///./src/features/item-details/SharedLinkExpirationNotice.js","webpack:///./src/features/item-details/VersionHistoryLink.js","webpack:///./src/features/item-details/messages.js","webpack:///./src/features/security/SecurityBadge.js","webpack:///./src/features/security/SecurityBadge.scss","webpack:///./src/features/security/index.js","webpack:///./src/icons/general/IconComment.tsx","webpack:///./src/icons/general/IconDownloadSolid.tsx","webpack:///./src/icons/general/IconEye.tsx","webpack:///./src/icons/general/IconPencilSolid.tsx","webpack:///./src/icons/general/IconSecurityClassification.tsx","webpack:///./src/utils/env.js","webpack:///./src/utils/getFileSize.js"],"names":["MessageAccumulator","require","default","Node","Composition","constructor","element","isComposed","ma","keyIndex","recompose","JSTYPE_OBJECT","Array","isArray","forEach","subelement","type","name","addParam","push","React","Children","props","children","child","pop","JSTYPE_NUMBER","JSTYPE_BOOLEAN","addText","String","JSTYPE_STRING","compose","index","getMinimalString","nextKey","result","mapToReactElements","node","i","length","el","extra","temp","cloneElement","key","value","decompose","string","translation","create","nodeArray","use","concat","getPrefix","root","toArray","slice","getSuffix","fromArray","FormattedCompMessage","console","warn","defaultMessage","count","sourceElements","composition","source","isNaN","Number","composePluralString","isDevEnvironment","Error","state","categories","childComposition","category","one","other","categoriesString","CATEGORY_ZERO","CATEGORY_ONE","CATEGORY_TWO","CATEGORY_FEW","CATEGORY_MANY","CATEGORY_OTHER","map","join","render","tagName","intl","description","id","rest","values","descriptor","formatMessage","injectIntl","JSTYPE_FUNCTION","JSTYPE_SYMBOL","JSTYPE_UNDEFINED","DEFAULT_DATE_FORMAT","weekday","month","year","day","DateField","date","dateFormat","omitCommas","relative","capitalize","d","Date","isTodaysDate","isToday","isYesterdaysDate","isYesterday","Message","messages","today","yesterday","formattedDate","formatDate","replace","MARK_NAME_JS_READY","ORIGIN_DETAILS_SIDEBAR","EVENT_JS_READY","mark","DetailsSidebar","PureComponent","file","setState","fileError","undefined","e","code","onError","inlineError","title","fileDescriptionInlineErrorTitleMessage","content","defaultInlineErrorContentMessage","newDescription","api","getBadItemError","getFileAPI","setFileDescription","descriptionChangeSuccessCallback","descriptionChangeErrorCallback","hasAccessStats","isForbidden","getProp","HTTP_STATUS_CODE_FORBIDDEN","accessStatsError","error","fileAccessStatsPermissionsError","maskError","errorHeader","fileAccessStatsErrorHeaderMessage","errorSubHeader","defaultErrorMaskSubHeaderMessage","isLoadingAccessStats","accessStats","IS_ERROR_DISPLAYED","logger","onReadyMetric","endMarkName","componentDidMount","fetchFile","fetchAccessStats","componentDidUpdate","prevHasAccessStats","hasAccessStatsChanged","successCallback","fetchFileSuccessCallback","errorCallback","fetchFileErrorCallback","fileId","getFile","fields","SIDEBAR_FIELDS_TO_FETCH","getFileAccessStatsAPI","getFileAccessStats","fetchAccessStatsSuccessCallback","fetchAccessStatsErrorCallback","refresh","classification","elementId","hasProperties","hasNotices","hasClassification","hasRetentionPolicy","hasVersions","onAccessStatsClick","onVersionHistoryClick","onClassificationClick","onRetentionPolicyExtendClick","retentionPolicy","SIDEBAR_VIEW_DETAILS","sidebarDetailsTitle","SECTION_TARGETS","FILE_PROPERTIES","sidebarProperties","onDescriptionChange","noop","flow","withLogger","withErrorBoundary","withAPIContext","SidebarAccessStats","comment_count","download_count","edit_count","has_count_overflowed","preview_count","isFinite","errorMessage","ACCESS_STATS","sidebarAccessStats","INTERACTION_TARGET","DETAILS_TARGETS","COMMENTS","DOWNLOADS","PREVIEWS","VIEWS","EDITS","isBoxNote","VIEW_DETAILS","withErrorHandling","SidebarClassification","onEdit","isEditable","FIELD_PERMISSIONS_CAN_UPLOAD","CLASSIFICATION","classificationMessages","SidebarFileProperties","isLoading","content_created_at","DESCRIPTION","content_modified_at","openModal","getFileSize","size","locale","PLACEHOLDER_USER","ONE_MINUTE_IN_MS","NOTICE_DATE_FORMAT","SidebarNotices","itemExpiration","sharedLinkExpiration","addTime","SidebarVersions","version_number","versionNumber","parseInt","VERSION_HISTORY","AccessStats","commentCount","commentStatButtonProps","downloadCount","downloadStatButtonProps","editCount","editStatButtonProps","hasCountOverflowed","openAccessStatsModal","previewCount","previewStatButtonProps","viewMoreButtonProps","viewStatButtonProps","accessStatsViewDetails","statsAttributesTable","preview","icon","IconEye","message","accessStatsPreviews","view","accessStatsViews","download","IconDownloadSolid","accessStatsDownloads","comment","IconComment","accessStatsComments","edit","IconPencilSolid","accessStatsEdits","ICON_COLOR","ITEM_CONTENT_CLASS_NAME","AccessStatsItem","statButtonProps","statAttributes","IconComponent","labelMessage","itemContent","AccessStatsItemsList","defineMessages","STYLE_INLINE","STYLE_TOOLTIP","Classification","className","color","controls","controlsFormat","definition","isImportedClassification","isLoadingControls","itemName","maxAppCount","messageStyle","modifiedAt","modifiedBy","onClick","isClassified","hasDefinition","hasModifiedAt","hasModifiedBy","hasSecurityControls","isTooltipMessageEnabled","isInlineMessageEnabled","isNotClassifiedMessageVisible","isControlsIndicatorEnabled","isSecurityControlsEnabled","modifiedDate","isModifiedMessageVisible","isValidDate","formattedModifiedAt","modifiedByMessage","importedBy","missing","modifiedByLabel","ICON_SIZE","ClassifiedBadge","tooltipPosition","tooltipText","isClickable","isTooltipDisabled","badge","defaultProps","bdlYellow50","EditClassificationButton","isEditing","add","interaction","classificationColorsMap","CLASSIFICATION_COLOR_ID_0","classificationYellow","vars","tinycon","bdlYellorange","CLASSIFICATION_COLOR_ID_1","classificationOrange","bdlOrange","CLASSIFICATION_COLOR_ID_2","classificationRed","bdlWatermelonRed","CLASSIFICATION_COLOR_ID_3","classificationPurple","bdlPurpleRain","CLASSIFICATION_COLOR_ID_4","classificationLightBlue","bdlLightBlue","CLASSIFICATION_COLOR_ID_5","classificationDarkBlue","bdlDarkBlue","CLASSIFICATION_COLOR_ID_6","classificationGreen","bdlGreenLight","CLASSIFICATION_COLOR_ID_7","classificationGrey","bdlGray62","DEFAULT_MAX_APP_COUNT","SECURITY_CONTROLS_FORMAT","FULL","SHORT","SHORT_WITH_BTN","ACCESS_POLICY_RESTRICTION","APP","BOX_SIGN_REQUEST","DOWNLOAD","EXTERNAL_COLLAB","FTP","SHARED_LINK","WATERMARK","DOWNLOAD_CONTROL","DESKTOP","MOBILE","WEB","LIST_ACCESS_LEVEL","BLACKLIST","BLOCK","WHITELIST","MANAGED_USERS_ACCESS_LEVEL","OWNERS_AND_COOWNERS","OWNERS_COOWNERS_AND_EDITORS","SHARED_LINK_ACCESS_LEVEL","COLLAB_AND_COMPANY_ONLY","COLLAB_ONLY","PUBLIC","APP_RESTRICTION_MESSAGE_TYPE","DEFAULT","WITH_APP_LIST","WITH_OVERFLOWN_APP_LIST","DEFAULT_CLASSIFICATION_COLOR_ID","SecurityControls","isSecurityControlsModalOpen","classificationColor","classificationName","shouldRenderLabel","items","modalItems","getFullSecurityControlsMessages","getShortSecurityControlsMessage","shouldShowSecurityControlsModal","itemsList","tooltipMessage","securityControlsLabel","viewAll","closeModal","SecurityControlsItem","bdlBoxBlue","SecurityControlsModal","modalTitle","modalDescription","commonMessages","close","appRestrictionsMessageMap","appDownloadRestricted","appDownloadBlacklist","appDownloadBlacklistOverflow","appDownloadWhitelist","appDownloadWhitelistOverflow","downloadRestrictionsMessageMap","externalAllowed","desktopDownloadOwners","desktopDownloadOwnersEditors","externalRestricted","desktopDownloadExternalOwners","desktopDownloadExternalOwnersEditors","desktopDownloadExternal","mobileDownloadOwners","mobileDownloadOwnersEditors","mobileDownloadExternalOwners","mobileDownloadExternalOwnersEditors","mobileDownloadExternal","webDownloadOwners","webDownloadOwnersEditors","webDownloadExternalOwners","webDownloadExternalOwnersEditors","webDownloadExternal","shortSharing","shortDownload","shortApp","shortWatermarking","shortSign","shortSharingDownload","shortSharingApp","shortDownloadApp","shortSharingSign","shortDownloadSign","shortAppSign","shortDownloadAppSign","shortSharingAppSign","shortSharingDownloadSign","shortSharingDownloadApp","shortSharingDownloadAppSign","sharingCollabOnly","sharingCollabAndCompanyOnly","externalCollabBlock","externalCollabDomainList","allAppNames","boxSignRequestRestricted","app","boxSignRequest","externalCollab","sharedLink","watermark","sharing","accessLevel","getSharedLinkMessages","getWatermarkingMessages","isWatermarkEnabled","formattedCompMessage","getExternalCollabMessages","getAppDownloadMessages","apps","isNil","appsToDisplay","remainingAppCount","appNames","displayText","appsList","messageType","getDownloadMessages","web","mobile","desktop","downloadRestrictions","platform","restrictions","Object","keys","platformKey","restrictExternalUsers","restrictManagedUsers","getBoxSignRequestMessages","isBoxSignRequestRestrictionEnabled","getClassificationLabelColor","classificationLabelData","colorID","getClassificationTinyconColor","EditableDescription","event","currentTarget","prevValue","textAreaProps","handleBlur","handleChange","descriptionPlaceholder","VALUE_MISSING","TYPE_MISMATCH","errorMap","requiredFieldError","invalidURLError","EditableURL","inputEl","valid","valueMissing","validity","onValidURLChange","ref","url","handleFocus","urlPlaceholder","FILE","FOLDER","WEBLINK","ItemExpirationNotice","expiration","itemType","messageID","propTypes","PropTypes","isRequired","oneOf","datetimeOptions","hour","minute","ItemProperties","createdAt","descriptionTextareaProps","enterpriseOwner","owner","retentionPolicyProps","trashedAt","uploader","descriptionId","uniqueid","text","created","modified","deleted","oneOfType","number","object","func","NEWLINE_REGEX","URL_REGEX","ReadonlyDescription","processString","regex","fn","RetentionPolicy","dispositionTime","policyType","retentionPolicyDescription","retentionPolicyExpiration","retentionPolicyExtend","SharedLinkExpirationNotice","VersionHistoryLink","versionCount","formattedMessageComponent","savedVersions","classNames","bookmarkExpiration","fileExpiration","folderExpiration","SecurityBadge","backgroundColor","height","width","IconSecurityClassification","bdlGray","classes","process","defaultDigitalUnits","bcp47TagToDigitalUnits","fi","fr","ru","settings","round","localizedUnits","symbols","reduce","unit","filesize"],"mappings":"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","file":"details-sidebar.js","sourcesContent":["export { default } from './Collapsible';\n","/*\n * Utility class for the FormattedCompMessage component.\n */\nimport React from 'react';\nimport { JSTYPE_BOOLEAN, JSTYPE_NUMBER, JSTYPE_OBJECT, JSTYPE_STRING } from './constants';\n\nconst MessageAccumulator = require('message-accumulator').default; // ES5 CommonJS module\nconst Node = require('ilib-tree-node').default; // ES5 CommonJS module\n\n/**\n * @class Compose a tree of React elements into a single string.\n *\n * @param {React.Element} element the element to compose\n */\nclass Composition {\n    constructor(element) {\n        this.element = element;\n        this.isComposed = false;\n\n        this.ma = new MessageAccumulator();\n        this.keyIndex = 0;\n    }\n\n    recompose(element) {\n        switch (typeof element) {\n            case JSTYPE_OBJECT:\n                if (Array.isArray(element)) {\n                    element.forEach(subelement => this.recompose(subelement));\n                } else if (element) {\n                    if (element.type === 'Param' || element.type.name === 'Param') {\n                        this.ma.addParam(element);\n                    } else {\n                        this.ma.push(element);\n                        React.Children.forEach(element.props.children, child => this.recompose(child));\n                        this.ma.pop();\n                    }\n                }\n                break;\n\n            case JSTYPE_NUMBER:\n            case JSTYPE_BOOLEAN:\n                this.ma.addText(String(element));\n                break;\n\n            case JSTYPE_STRING:\n                this.ma.addText(element);\n                break;\n\n            default:\n                break;\n        }\n    }\n\n    /**\n     * Compose a tree of react elements to a string that can be translated.\n     *\n     * @return {string} a string representing the tree of react elements\n     */\n    compose() {\n        this.index = 0;\n        if (!this.isComposed) {\n            this.recompose(this.element);\n        }\n        this.isComposed = true;\n        return this.ma.getMinimalString();\n    }\n\n    /**\n     * @private\n     */\n    nextKey() {\n        const result = `key${this.keyIndex}`;\n        this.keyIndex += 1;\n        return result;\n    }\n\n    /**\n     * @private\n     */\n    mapToReactElements(node) {\n        if (!node) return '';\n\n        let children = [];\n        for (let i = 0; i < node.children.length; i += 1) {\n            children.push(this.mapToReactElements(node.children[i]));\n        }\n\n        const el = node.extra;\n        if (children.length === 0 && el && el.props) {\n            const { temp } = el.props;\n            children = temp;\n        }\n\n        if (children && children.length === 1 && typeof children[0] === 'string') {\n            [children] = children;\n        }\n\n        if (el) {\n            return children && children.length\n                ? React.cloneElement(el, { key: el.key || this.nextKey() }, children)\n                : React.cloneElement(el, { key: el.key || this.nextKey() });\n        }\n        if (children.length) {\n            return children.length > 1 ? children : children[0];\n        }\n\n        return node.value || '';\n    }\n\n    /**\n     * Convert a composed string back into an array of React elements. The elements are clones of\n     * the same ones that this composition was created with, so that they have the same type and\n     * props and such as the originals. The elements may be re-ordered from the original, however,\n     * if the grammar of the target language requires moving around text, HTML tags, or\n     * subcomponents.\n     *\n     * @param {string} string the string to decompose into a tree of React elements.\n     * @return {React.Element} a react element\n     */\n    decompose(string) {\n        if (!this.isComposed) {\n            // need to create the mapping first from names to react elements\n            this.compose();\n        }\n        const translation = MessageAccumulator.create(string, this.ma);\n        const nodeArray = [\n            new Node({\n                type: 'root',\n                use: 'start',\n            }),\n        ]\n            .concat(this.ma.getPrefix())\n            .concat(translation.root.toArray().slice(1, -1))\n            .concat(this.ma.getSuffix())\n            .concat([\n                new Node({\n                    type: 'root',\n                    use: 'end',\n                }),\n            ]);\n        // convert to a tree again\n        return this.mapToReactElements(Node.fromArray(nodeArray));\n    }\n}\n\nexport default Composition;\n","// @flow\nimport * as React from 'react';\nimport { injectIntl } from 'react-intl';\nimport isNaN from 'lodash/isNaN';\n\nimport isDevEnvironment from '../../utils/env';\nimport { CATEGORY_ZERO, CATEGORY_ONE, CATEGORY_TWO, CATEGORY_FEW, CATEGORY_MANY, CATEGORY_OTHER } from './constants';\nimport Composition from './Composition';\n\ntype Props = {\n    /**\n     * The text to translate. This may be a string or JSX. The defaultMessage prop may be\n     * given or the component may have children, but not both.\n     */\n    children?: React.Node,\n\n    /**\n     * Specify the pivot count to choose which plural form to use.\n     * When specified, this FormattedCompMessage component will choose one of the\n     * Plural elements in its children according to the value of this count\n     * and the linguistic rules of the locale which determine which numbers\n     * belong to which plural class.\n     */\n    count?: number,\n\n    /**\n     * The text to translate. This may be a string or JSX. This prop may be\n     * given or the component may have children, but not both.\n     */\n    defaultMessage?: React.ElementType | string,\n\n    /**\n     * A description to send to the translators to explain the context of\n     * this string.\n     */\n    description: string,\n\n    /** The unique id of this string. */\n    id: string,\n\n    /**\n     * The intl provider. This is injected into this component\n     * via the injectIntl function from react-intl.\n     */\n    intl: Object,\n\n    /**\n     * Specify the name of the HTML tag you would like to use to wrap the\n     * translations.\n     */\n    tagName: string,\n};\n\ntype State = {\n    composition: Composition,\n    source: string,\n};\n\n/**\n * Replace the text inside of this component with a translation. This\n * component is built on top of react-intl, so it works along with the\n * regular react-intl components and objects you are used to, and it gets\n * its translations from react intl as well. The FormattedCompMessage component can\n * be used wherever it is valid to put JSX text. In regular Javascript\n * code, you should continue to use the intl.formatMessage() call and\n * extract your strings into a message.js file.\n */\nclass FormattedCompMessage extends React.Component<Props, State> {\n    composition: Composition;\n\n    str: string;\n\n    static defaultProps = {\n        tagName: 'span',\n    };\n\n    constructor(props: Props) {\n        super(props);\n\n        /* eslint-disable no-console */\n        console.warn(\n            \"box-ui-elements: the FormattedCompMessage component is deprecated! Use react-intl's FormattedMessage instead.\",\n        );\n        /* eslint-enable no-console */\n\n        // these parameters echo the ones in react-intl's FormattedMessage\n        // component, plus a few extra\n        const {\n            defaultMessage, // The English string + HTML + components that you want translated\n            count, // the pivot count to choose a plural form\n            children, // the components within the body\n        } = this.props;\n\n        const sourceElements = defaultMessage || children;\n\n        if (sourceElements) {\n            const composition = new Composition(sourceElements);\n            let source = '';\n\n            if (!isNaN(Number(count))) {\n                if (children) {\n                    source = this.composePluralString(children);\n                } else if (isDevEnvironment()) {\n                    throw new Error('Cannot use count prop on a FormattedCompMessage component that has no children.');\n                }\n            } else {\n                source = composition.compose();\n            }\n\n            this.state = {\n                source,\n                composition,\n            };\n        }\n    }\n\n    /**\n     * Search for any Plural elements in the children, and\n     * then construct the English source string in the correct\n     * format for react-intl to use for pluralization\n     * @param {React.Element} children the children of this node\n     * @return {string} the composed plural string\n     */\n    composePluralString(children) {\n        const categories = {};\n        React.Children.forEach(children, child => {\n            if (typeof child === 'object' && React.isValidElement(child) && child.type.name === 'Plural') {\n                const childComposition = new Composition(child.props.children);\n                categories[child.props.category] = childComposition.compose();\n            }\n        });\n        if (!categories.one || !categories.other) {\n            if (isDevEnvironment()) {\n                throw new Error(\n                    'Cannot use count prop on a FormattedCompMessage component without giving both a \"one\" and \"other\" Plural component in the children.',\n                );\n            }\n        }\n        // add these to the string in a particular order so that\n        // we always end up with the same string regardless of\n        // the order that the Plural elements were specified in\n        // the source code\n        const categoriesString = [\n            CATEGORY_ZERO,\n            CATEGORY_ONE,\n            CATEGORY_TWO,\n            CATEGORY_FEW,\n            CATEGORY_MANY,\n            CATEGORY_OTHER,\n        ]\n            .map(category => (categories[category] ? ` ${category} {${categories[category]}}` : ''))\n            .join('');\n\n        // see the intl-messageformat project for an explanation of this syntax\n        return `{count, plural,${categoriesString}}`;\n    }\n\n    render() {\n        const { count, tagName, intl, description, id, defaultMessage, ...rest } = this.props;\n        const { composition, source } = this.state;\n        const values = {};\n        if (typeof count === 'number') {\n            // make sure intl.formatMessage switches properly on the count\n            values.count = count;\n        }\n\n        // react-intl will do the correct plurals if necessary\n        const descriptor = {\n            id,\n            defaultMessage: source,\n            description,\n        };\n        const translation = intl.formatMessage(descriptor, values);\n\n        // always wrap the translated string in a tag to contain everything\n        // and to give us a spot to record the id. The resource id is the\n        // the id in mojito for the string. Having this attr has these advantages:\n        // 1. When debugging i18n or translation problems, it is MUCH easier to find\n        // the exact string to fix in Mojito rather than guessing. It might be useful\n        // for general debugging as well to map from something you see in the UI to\n        // the actual code that implements it.\n        // 2. It can be used by an in-context linguistic review tool. The tool code\n        // can contact mojito and retrieve the English for any translation errors that\n        // the reviewer finds and submit translation tickets to Jira and/or fixed\n        // translations directly back to Mojito.\n        // 3. It can be used by the planned \"text experiment framework\" to identify\n        // whole strings in the UI that can be A/B tested in various langauges without\n        // publishing new versions of the code.\n        return React.createElement(\n            tagName,\n            {\n                key: id,\n                'x-resource-id': id,\n                ...rest,\n            },\n            composition.decompose(translation),\n        );\n    }\n}\n\nexport default injectIntl(FormattedCompMessage);\n","/**\n * @flow\n * @file Constants for the i18n components\n * @author Box\n */\n\n/* ------------------ Javascript Object Types ----------------- */\nexport const JSTYPE_BOOLEAN = 'boolean';\nexport const JSTYPE_FUNCTION = 'function';\nexport const JSTYPE_NUMBER = 'number';\nexport const JSTYPE_OBJECT = 'object';\nexport const JSTYPE_STRING = 'string';\nexport const JSTYPE_SYMBOL = 'symbol';\nexport const JSTYPE_UNDEFINED = 'undefined';\n\n/* ------------------ Plural Category Names For react-intl ----------------- */\nexport const CATEGORY_ZERO: 'zero' = 'zero';\nexport const CATEGORY_ONE: 'one' = 'one';\nexport const CATEGORY_TWO: 'two' = 'two';\nexport const CATEGORY_FEW: 'few' = 'few';\nexport const CATEGORY_MANY: 'many' = 'many';\nexport const CATEGORY_OTHER: 'other' = 'other';\n","// @flow\nexport { default as Modal } from './Modal';\nexport { default as ModalActions } from './ModalActions';\nexport { default as ModalDialog } from './ModalDialog';\n","/**\n * @flow\n * @file Function to render the date table cell\n * @author Box\n */\n\nimport React from 'react';\nimport { injectIntl, FormattedMessage } from 'react-intl';\nimport type { InjectIntlProvidedProps } from 'react-intl';\nimport { isToday, isYesterday } from '../../../utils/datetime';\nimport messages from '../messages';\nimport './DateField.scss';\n\ntype Props = {\n    capitalize?: boolean,\n    date: string,\n    dateFormat?: Object,\n    omitCommas?: boolean,\n    relative?: boolean,\n} & InjectIntlProvidedProps;\n\nconst DEFAULT_DATE_FORMAT = {\n    weekday: 'short',\n    month: 'short',\n    year: 'numeric',\n    day: 'numeric',\n};\n\nconst DateField = ({\n    date,\n    dateFormat = DEFAULT_DATE_FORMAT,\n    omitCommas = false,\n    intl,\n    relative = true,\n    capitalize = false,\n}: Props) => {\n    const d = new Date(date);\n    const isTodaysDate = isToday(d);\n    const isYesterdaysDate = isYesterday(d);\n\n    if (relative && (isTodaysDate || isYesterdaysDate)) {\n        let Message = <FormattedMessage {...messages.today} />;\n        if (isYesterdaysDate) {\n            Message = <FormattedMessage {...messages.yesterday} />;\n        }\n\n        if (capitalize) {\n            return <span className=\"be-date-capitalize\">{Message}</span>;\n        }\n\n        return Message;\n    }\n\n    let formattedDate = intl.formatDate(d, dateFormat);\n    formattedDate = omitCommas ? formattedDate.replace(/,/g, '') : formattedDate;\n    return formattedDate;\n};\n\nexport default injectIntl(DateField);\n","// extracted by mini-css-extract-plugin","// @flow\nexport { default } from './DateField';\n","/**\n * @flow\n * @file Details sidebar component\n * @author Box\n */\n\nimport React from 'react';\nimport flow from 'lodash/flow';\nimport getProp from 'lodash/get';\nimport noop from 'lodash/noop';\nimport { FormattedMessage } from 'react-intl';\nimport API from '../../api';\nimport messages from '../common/messages';\nimport SidebarAccessStats from './SidebarAccessStats';\nimport SidebarClassification from './SidebarClassification';\nimport SidebarContent from './SidebarContent';\nimport SidebarFileProperties from './SidebarFileProperties';\nimport SidebarNotices from './SidebarNotices';\nimport SidebarSection from './SidebarSection';\nimport SidebarVersions from './SidebarVersions';\nimport { EVENT_JS_READY } from '../common/logger/constants';\nimport { getBadItemError } from '../../utils/error';\nimport { mark } from '../../utils/performance';\nimport { SECTION_TARGETS } from '../common/interactionTargets';\nimport { SIDEBAR_FIELDS_TO_FETCH } from '../../utils/fields';\nimport { withAPIContext } from '../common/api-context';\nimport { withErrorBoundary } from '../common/error-boundary';\nimport { withLogger } from '../common/logger';\nimport {\n    HTTP_STATUS_CODE_FORBIDDEN,\n    ORIGIN_DETAILS_SIDEBAR,\n    IS_ERROR_DISPLAYED,\n    SIDEBAR_VIEW_DETAILS,\n} from '../../constants';\nimport type { ClassificationInfo, FileAccessStats, Errors } from './flowTypes';\nimport type { WithLoggerProps } from '../../common/types/logging';\nimport type { ElementsErrorCallback, ErrorContextProps, ElementsXhrError } from '../../common/types/api';\nimport type { BoxItem } from '../../common/types/core';\nimport './DetailsSidebar.scss';\n\ntype ExternalProps = {\n    classification?: ClassificationInfo,\n    elementId: string,\n    fileId: string,\n    hasAccessStats?: boolean,\n    hasClassification?: boolean,\n    hasNotices?: boolean,\n    hasProperties?: boolean,\n    hasRetentionPolicy?: boolean,\n    hasSidebarInitialized?: boolean,\n    hasVersions?: boolean,\n    onAccessStatsClick?: Function,\n    onClassificationClick?: (e: SyntheticEvent<HTMLButtonElement>) => void,\n    onRetentionPolicyExtendClick?: Function,\n    onVersionHistoryClick?: Function,\n    retentionPolicy?: Object,\n} & ErrorContextProps &\n    WithLoggerProps;\ntype Props = {\n    api: API,\n} & ExternalProps &\n    ErrorContextProps &\n    WithLoggerProps;\n\ntype State = {\n    accessStats?: FileAccessStats,\n    accessStatsError?: Errors,\n    file?: BoxItem,\n    fileError?: Errors,\n    isLoadingAccessStats: boolean,\n};\n\nconst MARK_NAME_JS_READY = `${ORIGIN_DETAILS_SIDEBAR}_${EVENT_JS_READY}`;\n\nmark(MARK_NAME_JS_READY);\n\nclass DetailsSidebar extends React.PureComponent<Props, State> {\n    static defaultProps = {\n        hasNotices: false,\n        hasProperties: false,\n        hasAccessStats: false,\n        hasClassification: false,\n        hasRetentionPolicy: false,\n        hasVersions: false,\n        onError: noop,\n    };\n\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            isLoadingAccessStats: false,\n        };\n        const { logger } = this.props;\n        logger.onReadyMetric({\n            endMarkName: MARK_NAME_JS_READY,\n        });\n    }\n\n    componentDidMount() {\n        this.fetchFile();\n        if (this.props.hasAccessStats) {\n            this.fetchAccessStats();\n        }\n    }\n\n    componentDidUpdate({ hasAccessStats: prevHasAccessStats }: Props) {\n        const { hasAccessStats } = this.props;\n        // Component visibility props such as hasAccessStats can sometimes be flipped after an async call\n        const hasAccessStatsChanged = prevHasAccessStats !== hasAccessStats;\n        if (hasAccessStatsChanged) {\n            if (hasAccessStats) {\n                this.fetchAccessStats();\n            } else {\n                this.setState({\n                    isLoadingAccessStats: false,\n                    accessStats: undefined,\n                    accessStatsError: undefined,\n                });\n            }\n        }\n    }\n\n    /**\n     * File description update callback\n     *\n     * @private\n     * @param {BoxItem} file - Updated file object\n     * @return {void}\n     */\n    descriptionChangeSuccessCallback = (file: BoxItem): void => {\n        this.setState({ file, fileError: undefined });\n    };\n\n    /**\n     * Fetches a file with the fields needed for details sidebar\n     *\n     * @param {Function} successCallback - the success callback\n     * @param {Function} errorCallback - the error callback\n     * @return {void}\n     */\n    fetchFile(\n        successCallback: (file: BoxItem) => void = this.fetchFileSuccessCallback,\n        errorCallback: ElementsErrorCallback = this.fetchFileErrorCallback,\n    ): void {\n        const { api, fileId }: Props = this.props;\n        api.getFileAPI().getFile(fileId, successCallback, errorCallback, {\n            fields: SIDEBAR_FIELDS_TO_FETCH, // TODO: replace this with DETAILS_SIDEBAR_FIELDS_TO_FETCH as we do not need all the sidebar fields\n        });\n    }\n\n    /**\n     * Handles a successful file fetch\n     *\n     * @param {Object} file - the box file\n     * @return {void}\n     */\n    fetchFileSuccessCallback = (file: BoxItem) => {\n        this.setState({\n            file,\n            fileError: undefined,\n        });\n    };\n\n    /**\n     * Handles a failed file fetch\n     *\n     * @private\n     * @param {Error} e - API error\n     * @param {string} code - error code\n     * @return {void}\n     */\n    fetchFileErrorCallback = (e: ElementsXhrError, code: string) => {\n        // TODO: handle the error properly (probably with maskError) once files call split out\n        this.setState({\n            file: undefined,\n        });\n\n        this.props.onError(e, code, {\n            e,\n        });\n    };\n\n    /**\n     * Handles a failed file description update\n     *\n     * @private\n     * @param {BoxItem} file - Original file object\n     * @return {void}\n     */\n    descriptionChangeErrorCallback = (file: BoxItem): void => {\n        // Reset the state back to the original description since the API call failed\n        this.setState({\n            file,\n            fileError: {\n                inlineError: {\n                    title: messages.fileDescriptionInlineErrorTitleMessage,\n                    content: messages.defaultInlineErrorContentMessage,\n                },\n            },\n        });\n    };\n\n    /**\n     * Function to update file description\n     *\n     * @private\n     * @param {string} newDescription - New file description\n     * @return {void}\n     */\n    onDescriptionChange = (newDescription: string): void => {\n        const { api }: Props = this.props;\n        const { file }: State = this.state;\n        if (!file) {\n            throw getBadItemError();\n        }\n\n        const { description }: BoxItem = file;\n        if (newDescription === description) {\n            return;\n        }\n\n        api.getFileAPI().setFileDescription(\n            file,\n            newDescription,\n            this.descriptionChangeSuccessCallback,\n            this.descriptionChangeErrorCallback,\n        );\n    };\n\n    /**\n     * Handles a failed file access stats fetch\n     *\n     * @private\n     * @param {Error} e - API error\n     * @param {string} code - error code\n     * @return {void}\n     */\n    fetchAccessStatsErrorCallback = (e: ElementsXhrError, code: string) => {\n        if (!this.props.hasAccessStats) {\n            return;\n        }\n\n        const isForbidden = getProp(e, 'status') === HTTP_STATUS_CODE_FORBIDDEN;\n        let accessStatsError;\n\n        if (isForbidden) {\n            accessStatsError = {\n                error: messages.fileAccessStatsPermissionsError,\n            };\n        } else {\n            accessStatsError = {\n                maskError: {\n                    errorHeader: messages.fileAccessStatsErrorHeaderMessage,\n                    errorSubHeader: messages.defaultErrorMaskSubHeaderMessage,\n                },\n            };\n        }\n\n        this.setState({\n            isLoadingAccessStats: false,\n            accessStats: undefined,\n            accessStatsError,\n        });\n\n        this.props.onError(e, code, {\n            e,\n            [IS_ERROR_DISPLAYED]: !isForbidden,\n        });\n    };\n\n    /**\n     * File access stats fetch success callback\n     *\n     * @private\n     * @param {Object} accessStats - access stats for a file\n     * @return {void}\n     */\n    fetchAccessStatsSuccessCallback = (accessStats: FileAccessStats): void => {\n        if (!this.props.hasAccessStats) {\n            return;\n        }\n\n        this.setState({\n            accessStats,\n            accessStatsError: undefined,\n            isLoadingAccessStats: false,\n        });\n    };\n\n    /**\n     * Fetches the access stats for a file\n     *\n     * @private\n     * @return {void}\n     */\n    fetchAccessStats(): void {\n        const { api, fileId }: Props = this.props;\n        const { isLoadingAccessStats } = this.state;\n\n        if (isLoadingAccessStats) {\n            return;\n        }\n\n        this.setState({ isLoadingAccessStats: true });\n        api.getFileAccessStatsAPI(false).getFileAccessStats(\n            fileId,\n            this.fetchAccessStatsSuccessCallback,\n            this.fetchAccessStatsErrorCallback,\n        );\n    }\n\n    refresh(): void {\n        this.fetchAccessStats();\n    }\n\n    render() {\n        const {\n            classification,\n            elementId,\n            hasProperties,\n            hasNotices,\n            hasAccessStats,\n            hasClassification,\n            hasRetentionPolicy,\n            hasVersions,\n            onAccessStatsClick,\n            onVersionHistoryClick,\n            onClassificationClick,\n            onRetentionPolicyExtendClick,\n            retentionPolicy,\n        }: Props = this.props;\n\n        const { accessStats, accessStatsError, file, fileError, isLoadingAccessStats }: State = this.state;\n\n        // TODO: Add loading indicator and handle errors once file call is split out\n        return (\n            <SidebarContent\n                className=\"bcs-details\"\n                elementId={elementId}\n                sidebarView={SIDEBAR_VIEW_DETAILS}\n                title={<FormattedMessage {...messages.sidebarDetailsTitle} />}\n            >\n                {file && hasNotices && (\n                    <div className=\"bcs-DetailsSidebar-notices\">\n                        <SidebarNotices file={file} />\n                    </div>\n                )}\n                {file && hasClassification && (\n                    <SidebarClassification classification={classification} file={file} onEdit={onClassificationClick} />\n                )}\n                {file && hasAccessStats && (\n                    <SidebarAccessStats\n                        accessStats={accessStats}\n                        file={file}\n                        onAccessStatsClick={onAccessStatsClick}\n                        {...accessStatsError}\n                    />\n                )}\n                {file && hasProperties && (\n                    <SidebarSection\n                        interactionTarget={SECTION_TARGETS.FILE_PROPERTIES}\n                        title={<FormattedMessage {...messages.sidebarProperties} />}\n                    >\n                        {hasVersions && <SidebarVersions file={file} onVersionHistoryClick={onVersionHistoryClick} />}\n                        <SidebarFileProperties\n                            file={file}\n                            onDescriptionChange={this.onDescriptionChange}\n                            {...fileError}\n                            hasRetentionPolicy={hasRetentionPolicy}\n                            isLoading={isLoadingAccessStats}\n                            onRetentionPolicyExtendClick={onRetentionPolicyExtendClick}\n                            retentionPolicy={retentionPolicy}\n                        />\n                    </SidebarSection>\n                )}\n            </SidebarContent>\n        );\n    }\n}\n\nexport type DetailsSidebarProps = ExternalProps;\nexport { DetailsSidebar as DetailsSidebarComponent };\nexport default flow([withLogger(ORIGIN_DETAILS_SIDEBAR), withErrorBoundary(ORIGIN_DETAILS_SIDEBAR), withAPIContext])(\n    DetailsSidebar,\n);\n","// extracted by mini-css-extract-plugin","/**\n * @flow\n * @file Versions sidebar component\n * @author Box\n */\n\nimport React from 'react';\nimport isFinite from 'lodash/isFinite';\nimport { injectIntl, FormattedMessage } from 'react-intl';\nimport type { MessageDescriptor, InjectIntlProvidedProps } from 'react-intl';\nimport AccessStats from '../../features/access-stats/AccessStats';\nimport messages from '../common/messages';\nimport { INTERACTION_TARGET, SECTION_TARGETS, DETAILS_TARGETS } from '../common/interactionTargets';\nimport { isBoxNote } from '../../utils/file';\nimport SidebarSection from './SidebarSection';\nimport withErrorHandling from './withErrorHandling';\nimport type { FileAccessStats } from './flowTypes';\nimport type { BoxItem } from '../../common/types/core';\n\ntype Props = {\n    accessStats?: FileAccessStats,\n    error?: MessageDescriptor,\n    file: BoxItem,\n    onAccessStatsClick?: Function,\n} & InjectIntlProvidedProps;\n\nconst SidebarAccessStats = ({\n    onAccessStatsClick,\n    accessStats = {\n        comment_count: undefined,\n        download_count: undefined,\n        edit_count: undefined,\n        has_count_overflowed: false,\n        preview_count: undefined,\n    },\n    file,\n    error,\n    intl,\n}: Props) => {\n    const { preview_count, comment_count, download_count, edit_count } = accessStats;\n\n    if (\n        !isFinite(preview_count) &&\n        !isFinite(comment_count) &&\n        !isFinite(download_count) &&\n        !isFinite(edit_count) &&\n        !error\n    ) {\n        return null;\n    }\n\n    const errorMessage = error ? intl.formatMessage(error) : undefined;\n    return (\n        <SidebarSection\n            interactionTarget={SECTION_TARGETS.ACCESS_STATS}\n            title={<FormattedMessage {...messages.sidebarAccessStats} />}\n        >\n            <AccessStats\n                errorMessage={errorMessage}\n                commentCount={comment_count}\n                commentStatButtonProps={{\n                    [INTERACTION_TARGET]: DETAILS_TARGETS.ACCESS_STATS.COMMENTS,\n                }}\n                downloadCount={download_count}\n                downloadStatButtonProps={{\n                    [INTERACTION_TARGET]: DETAILS_TARGETS.ACCESS_STATS.DOWNLOADS,\n                }}\n                previewCount={preview_count}\n                previewStatButtonProps={{\n                    [INTERACTION_TARGET]: DETAILS_TARGETS.ACCESS_STATS.PREVIEWS,\n                }}\n                viewStatButtonProps={{\n                    [INTERACTION_TARGET]: DETAILS_TARGETS.ACCESS_STATS.VIEWS,\n                }}\n                editCount={edit_count}\n                editStatButtonProps={{\n                    [INTERACTION_TARGET]: DETAILS_TARGETS.ACCESS_STATS.EDITS,\n                }}\n                openAccessStatsModal={onAccessStatsClick}\n                isBoxNote={isBoxNote(file)}\n                viewMoreButtonProps={{\n                    [INTERACTION_TARGET]: DETAILS_TARGETS.ACCESS_STATS.VIEW_DETAILS,\n                }}\n            />\n        </SidebarSection>\n    );\n};\n\nexport { SidebarAccessStats as SidebarAccessStatsComponent };\nexport default withErrorHandling(injectIntl(SidebarAccessStats));\n","/**\n * @flow\n * @file Classification sidebar component\n * @author Box\n */\n\nimport React from 'react';\nimport getProp from 'lodash/get';\nimport { FormattedMessage } from 'react-intl';\n\nimport Classification, { classificationMessages, EditClassificationButton } from '../../features/classification';\nimport { INTERACTION_TARGET, SECTION_TARGETS } from '../common/interactionTargets';\nimport Collapsible from '../../components/collapsible';\nimport { FIELD_PERMISSIONS_CAN_UPLOAD } from '../../constants';\nimport type { ClassificationInfo } from './flowTypes';\nimport type { BoxItem } from '../../common/types/core';\nimport './SidebarClassification.scss';\n\ntype OnEdit = (e: SyntheticEvent<HTMLButtonElement>) => void;\ntype Props = {\n    classification?: ClassificationInfo,\n    file: BoxItem,\n    onEdit?: OnEdit,\n};\n\nconst SidebarClassification = ({ classification, file, onEdit }: Props) => {\n    const isEditable = !!onEdit && getProp(file, FIELD_PERMISSIONS_CAN_UPLOAD, false);\n    const hasClassification = !!getProp(classification, 'name');\n    if (!hasClassification && !isEditable) {\n        return null;\n    }\n    return (\n        <Collapsible\n            buttonProps={{\n                [INTERACTION_TARGET]: SECTION_TARGETS.CLASSIFICATION,\n            }}\n            className=\"bcs-SidebarClassification\"\n            headerActionItems={\n                isEditable ? (\n                    <EditClassificationButton\n                        className=\"bcs-SidebarClassification-edit\"\n                        isEditing={hasClassification}\n                        onEdit={((onEdit: any): OnEdit)}\n                    />\n                ) : null\n            }\n            title={<FormattedMessage {...classificationMessages.classification} />}\n        >\n            <Classification {...classification} messageStyle=\"inline\" />\n        </Collapsible>\n    );\n};\n\nexport default SidebarClassification;\n","// extracted by mini-css-extract-plugin","/**\n * @flow\n * @file Sidebar file properties component\n * @author Box\n */\n\nimport React from 'react';\nimport getProp from 'lodash/get';\nimport { injectIntl } from 'react-intl';\nimport type { InjectIntlProvidedProps } from 'react-intl';\nimport ItemProperties from '../../features/item-details/ItemProperties';\nimport LoadingIndicatorWrapper from '../../components/loading-indicator/LoadingIndicatorWrapper';\nimport getFileSize from '../../utils/getFileSize';\nimport { INTERACTION_TARGET, DETAILS_TARGETS } from '../common/interactionTargets';\nimport withErrorHandling from './withErrorHandling';\nimport type { ClassificationInfo } from './flowTypes';\nimport type { BoxItem } from '../../common/types/core';\nimport { PLACEHOLDER_USER } from '../../constants';\n\ntype Props = {\n    classification?: ClassificationInfo,\n    file: BoxItem,\n    hasClassification: boolean,\n    hasRetentionPolicy: boolean,\n    isLoading: boolean,\n    onDescriptionChange: Function,\n    onRetentionPolicyExtendClick?: Function,\n    retentionPolicy?: Object,\n} & InjectIntlProvidedProps;\n\nconst SidebarFileProperties = ({\n    file,\n    onDescriptionChange,\n    hasRetentionPolicy,\n    retentionPolicy,\n    onRetentionPolicyExtendClick,\n    isLoading,\n    intl,\n}: Props) => (\n    <LoadingIndicatorWrapper isLoading={isLoading}>\n        <ItemProperties\n            createdAt={file.content_created_at}\n            description={file.description}\n            descriptionTextareaProps={{\n                [INTERACTION_TARGET]: DETAILS_TARGETS.DESCRIPTION,\n            }}\n            modifiedAt={file.content_modified_at}\n            onDescriptionChange={getProp(file, 'permissions.can_rename') ? onDescriptionChange : undefined}\n            owner={getProp(file, 'owned_by.name')}\n            retentionPolicyProps={\n                hasRetentionPolicy\n                    ? {\n                          ...retentionPolicy,\n                          openModal: onRetentionPolicyExtendClick,\n                      }\n                    : {}\n            }\n            size={getFileSize(file.size, intl.locale)}\n            // use uploader_display_name if uploaded anonymously\n            uploader={\n                getProp(file, 'created_by.id') === PLACEHOLDER_USER.id\n                    ? getProp(file, 'uploader_display_name')\n                    : getProp(file, 'created_by.name')\n            }\n        />\n    </LoadingIndicatorWrapper>\n);\n\nexport { SidebarFileProperties as SidebarFilePropertiesComponent };\nexport default injectIntl(withErrorHandling(SidebarFileProperties));\n","/**\n * @flow\n * @file Preview details sidebar notices component\n * @author Box\n */\n\nimport * as React from 'react';\nimport getProp from 'lodash/get';\nimport SharedLinkExpirationNotice from '../../features/item-details/SharedLinkExpirationNotice';\nimport ItemExpirationNotice from '../../features/item-details/ItemExpirationNotice';\nimport { addTime } from '../../utils/datetime';\n\nimport DateField from '../common/date';\n\nimport type { BoxItem } from '../../common/types/core';\n\nconst ONE_MINUTE_IN_MS = 60000;\n\nconst NOTICE_DATE_FORMAT = {\n    month: 'short',\n    day: 'numeric',\n    year: 'numeric',\n};\n\ntype Props = {\n    file: BoxItem,\n};\n\nconst SidebarNotices = ({ file }: Props) => {\n    const itemExpiration = getProp(file, 'expires_at');\n    const sharedLinkExpiration = getProp(file, 'shared_link.unshared_at');\n\n    if (!itemExpiration && !sharedLinkExpiration) {\n        return null;\n    }\n\n    return (\n        <>\n            {!!itemExpiration && (\n                <ItemExpirationNotice\n                    expiration={\n                        <DateField\n                            // $FlowFixMe\n                            date={addTime(new Date(itemExpiration), ONE_MINUTE_IN_MS)}\n                            dateFormat={NOTICE_DATE_FORMAT}\n                            relative={false}\n                        />\n                    }\n                    itemType=\"file\"\n                />\n            )}\n            {!!sharedLinkExpiration && (\n                <SharedLinkExpirationNotice\n                    expiration={\n                        <DateField\n                            // $FlowFixMe\n                            date={addTime(new Date(sharedLinkExpiration), ONE_MINUTE_IN_MS)}\n                            dateFormat={NOTICE_DATE_FORMAT}\n                            relative={false}\n                        />\n                    }\n                />\n            )}\n        </>\n    );\n};\n\nexport default SidebarNotices;\n","/**\n * @flow\n * @file Versions sidebar component\n * @author Box\n */\n\nimport React from 'react';\nimport VersionHistoryLink from '../../features/item-details/VersionHistoryLink';\n\nimport { DETAILS_TARGETS } from '../common/interactionTargets';\nimport { isBoxNote } from '../../utils/file';\nimport type { BoxItem } from '../../common/types/core';\nimport './SidebarVersions.scss';\n\ntype Props = {\n    file: BoxItem,\n    onVersionHistoryClick?: Function,\n};\n\nconst SidebarVersions = ({ onVersionHistoryClick, file }: Props) => {\n    const { version_number } = file;\n\n    const versionNumber = parseInt(version_number, 10);\n\n    if (isBoxNote(file) || !versionNumber || versionNumber <= 1) {\n        return null;\n    }\n\n    return (\n        <VersionHistoryLink\n            className=\"bcs-SidebarVersions\"\n            data-resin-target={DETAILS_TARGETS.VERSION_HISTORY}\n            data-testid={DETAILS_TARGETS.VERSION_HISTORY}\n            onClick={onVersionHistoryClick}\n            versionCount={versionNumber}\n        />\n    );\n};\n\nexport default SidebarVersions;\n","// extracted by mini-css-extract-plugin","// @flow\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport PlainButton from '../../components/plain-button/PlainButton';\nimport AccessStatsItemsList from './AccessStatsItemsList';\n\nimport messages from './messages';\n\nimport './AccessStats.scss';\n\ntype AccessStatsType = {\n    commentCount?: number,\n    /**\n     * Props for comment stat PlainButton\n     */\n    commentStatButtonProps?: Object,\n    downloadCount?: number,\n    /**\n     * Props for download stat PlainButton\n     */\n    downloadStatButtonProps?: Object,\n    editCount?: number,\n    /**\n     * Props for edit stat PlainButton\n     */\n    editStatButtonProps?: Object,\n    errorMessage?: string,\n    hasCountOverflowed?: boolean,\n    isBoxNote?: boolean,\n    /**\n     * A function that opens the access stats modal\n     */\n    openAccessStatsModal?: Function,\n    previewCount?: number,\n    /**\n     * Props for preview stat PlainButton\n     */\n    previewStatButtonProps?: Object,\n    /**\n     * Props for View More PlainButton\n     */\n    viewMoreButtonProps?: Object,\n    /**\n     * Props for view stat PlainButton\n     */\n    viewStatButtonProps?: Object,\n};\n\nconst AccessStats = ({\n    commentCount = 0,\n    commentStatButtonProps = {},\n    downloadCount = 0,\n    downloadStatButtonProps = {},\n    editCount = 0,\n    editStatButtonProps = {},\n    errorMessage,\n    hasCountOverflowed = false,\n    isBoxNote = false,\n    openAccessStatsModal,\n    previewCount = 0,\n    previewStatButtonProps = {},\n    viewMoreButtonProps = {},\n    viewStatButtonProps = {},\n}: AccessStatsType) => (\n    <div className=\"access-stats\">\n        {errorMessage ? (\n            <p>{errorMessage}</p>\n        ) : (\n            <>\n                <AccessStatsItemsList\n                    commentCount={commentCount}\n                    commentStatButtonProps={commentStatButtonProps}\n                    downloadCount={downloadCount}\n                    downloadStatButtonProps={downloadStatButtonProps}\n                    editCount={editCount}\n                    editStatButtonProps={editStatButtonProps}\n                    hasCountOverflowed={hasCountOverflowed}\n                    isBoxNote={isBoxNote}\n                    openAccessStatsModal={openAccessStatsModal}\n                    previewCount={previewCount}\n                    previewStatButtonProps={previewStatButtonProps}\n                    viewStatButtonProps={viewStatButtonProps}\n                />\n                {openAccessStatsModal && (\n                    <PlainButton\n                        className=\"lnk access-stats-view-details\"\n                        onClick={openAccessStatsModal}\n                        {...viewMoreButtonProps}\n                    >\n                        <FormattedMessage {...messages.accessStatsViewDetails} />\n                    </PlainButton>\n                )}\n            </>\n        )}\n    </div>\n);\n\nexport default AccessStats;\n","// extracted by mini-css-extract-plugin","// @flow\nimport * as React from 'react';\nimport { FormattedMessage, FormattedNumber } from 'react-intl';\n\nimport PlainButton from '../../components/plain-button/PlainButton';\nimport IconEye from '../../icons/general/IconEye';\nimport IconComment from '../../icons/general/IconComment';\nimport IconDownloadSolid from '../../icons/general/IconDownloadSolid';\nimport IconPencilSolid from '../../icons/general/IconPencilSolid';\n\nimport messages from './messages';\n\nimport './AccessStatsItem.scss';\n\nconst statsAttributesTable = {\n    preview: {\n        icon: IconEye,\n        message: messages.accessStatsPreviews,\n    },\n    view: {\n        icon: IconEye,\n        message: messages.accessStatsViews,\n    },\n    download: {\n        icon: IconDownloadSolid,\n        message: messages.accessStatsDownloads,\n    },\n    comment: {\n        icon: IconComment,\n        message: messages.accessStatsComments,\n    },\n    edit: {\n        icon: IconPencilSolid,\n        message: messages.accessStatsEdits,\n    },\n};\nconst ICON_COLOR = '#2a62b9';\nconst ITEM_CONTENT_CLASS_NAME = 'access-stats-item-content';\n\ntype AccessStatsItemType = {\n    count: number,\n    hasCountOverflowed?: boolean,\n    openAccessStatsModal?: Function,\n    statButtonProps: Object,\n    type: $Keys<typeof statsAttributesTable>,\n};\n\nconst AccessStatsItem = ({\n    type,\n    count = 0,\n    hasCountOverflowed = false,\n    openAccessStatsModal,\n    statButtonProps,\n}: AccessStatsItemType) => {\n    const statAttributes = statsAttributesTable[type];\n    const IconComponent = statAttributes.icon;\n    const labelMessage = statAttributes.message;\n\n    const itemContent = (\n        <>\n            <IconComponent color={ICON_COLOR} height={10} width={14} />\n            <span className=\"access-stats-label\">\n                <FormattedMessage {...labelMessage} />\n            </span>\n            <FormattedNumber value={count} />\n            {hasCountOverflowed && '+'}\n        </>\n    );\n\n    return (\n        <li className=\"access-stats-item\">\n            {openAccessStatsModal ? (\n                <PlainButton className={ITEM_CONTENT_CLASS_NAME} onClick={openAccessStatsModal} {...statButtonProps}>\n                    {itemContent}\n                </PlainButton>\n            ) : (\n                <span className={ITEM_CONTENT_CLASS_NAME}>{itemContent}</span>\n            )}\n        </li>\n    );\n};\n\nexport default AccessStatsItem;\n","// extracted by mini-css-extract-plugin","// @flow\nimport * as React from 'react';\n\nimport AccessStatsItem from './AccessStatsItem';\n\ntype AccessStatsItemsType = {\n    commentCount: number,\n    commentStatButtonProps: Object,\n    downloadCount: number,\n    downloadStatButtonProps: Object,\n    editCount: number,\n    editStatButtonProps: Object,\n    hasCountOverflowed: boolean,\n    isBoxNote: boolean,\n    openAccessStatsModal?: Function,\n    previewCount: number,\n    previewStatButtonProps: Object,\n    viewStatButtonProps: Object,\n};\n\nconst AccessStatsItemsList = ({\n    commentCount,\n    commentStatButtonProps,\n    downloadCount,\n    downloadStatButtonProps,\n    editCount,\n    editStatButtonProps,\n    hasCountOverflowed = false,\n    isBoxNote,\n    openAccessStatsModal,\n    previewCount,\n    previewStatButtonProps,\n    viewStatButtonProps,\n}: AccessStatsItemsType) => (\n    <ul className=\"access-stats-list\">\n        <AccessStatsItem\n            count={previewCount}\n            hasCountOverflowed={hasCountOverflowed}\n            openAccessStatsModal={openAccessStatsModal}\n            statButtonProps={isBoxNote ? viewStatButtonProps : previewStatButtonProps}\n            type={isBoxNote ? 'view' : 'preview'}\n        />\n        <AccessStatsItem\n            count={editCount}\n            hasCountOverflowed={hasCountOverflowed}\n            openAccessStatsModal={openAccessStatsModal}\n            statButtonProps={editStatButtonProps}\n            type=\"edit\"\n        />\n        <AccessStatsItem\n            count={commentCount}\n            hasCountOverflowed={hasCountOverflowed}\n            openAccessStatsModal={openAccessStatsModal}\n            statButtonProps={commentStatButtonProps}\n            type=\"comment\"\n        />\n        {!isBoxNote && (\n            <AccessStatsItem\n                count={downloadCount}\n                hasCountOverflowed={hasCountOverflowed}\n                openAccessStatsModal={openAccessStatsModal}\n                statButtonProps={downloadStatButtonProps}\n                type=\"download\"\n            />\n        )}\n    </ul>\n);\n\nexport default AccessStatsItemsList;\n","import { defineMessages } from 'react-intl';\n\nconst messages = defineMessages({\n    accessStatsViewDetails: {\n        defaultMessage: 'View Details',\n        description: 'The text in the link in the sidebar to open up the access stats popup',\n        id: 'boxui.accessStats.accessStatsViewDetails',\n    },\n    accessStatsViews: {\n        defaultMessage: 'Views',\n        description: 'The label for the view category of access stats for box notes',\n        id: 'boxui.accessStats.accessStatsViews',\n    },\n    accessStatsPreviews: {\n        defaultMessage: 'Previews',\n        description: 'The label for the preview category of access stats',\n        id: 'boxui.accessStats.accessStatsPreviews',\n    },\n    accessStatsEdits: {\n        defaultMessage: 'Edits',\n        description: 'The label for the edit category of access stats',\n        id: 'boxui.accessStats.accessStatsEdits',\n    },\n    accessStatsComments: {\n        defaultMessage: 'Comments',\n        description: 'The label for the comments category of access stats',\n        id: 'boxui.accessStats.accessStatsComments',\n    },\n    accessStatsDownloads: {\n        defaultMessage: 'Downloads',\n        description: 'The label for the downloads category of access stats',\n        id: 'boxui.accessStats.accessStatsDownloads',\n    },\n});\n\nexport default messages;\n","// @flow\nimport * as React from 'react';\nimport { FormattedDate, FormattedMessage } from 'react-intl';\n\nimport { isValidDate } from '../../utils/datetime';\nimport Label from '../../components/label/Label';\nimport LoadingIndicator from '../../components/loading-indicator/LoadingIndicator';\nimport ClassifiedBadge from './ClassifiedBadge';\nimport SecurityControls from './security-controls';\nimport messages from './messages';\nimport './Classification.scss';\n\nimport type { Controls, ControlsFormat } from './flowTypes';\n\nconst STYLE_INLINE: 'inline' = 'inline';\nconst STYLE_TOOLTIP: 'tooltip' = 'tooltip';\ntype Props = {\n    className?: string,\n    color?: string,\n    controls?: Controls,\n    controlsFormat?: ControlsFormat,\n    definition?: string,\n    isImportedClassification?: boolean,\n    isLoadingControls?: boolean,\n    itemName?: string,\n    maxAppCount?: number,\n    messageStyle?: typeof STYLE_INLINE | typeof STYLE_TOOLTIP,\n    modifiedAt?: string,\n    modifiedBy?: string,\n    name?: string,\n    onClick?: (event: SyntheticEvent<HTMLButtonElement>) => void,\n};\n\nconst Classification = ({\n    className = '',\n    color,\n    controls,\n    controlsFormat,\n    definition,\n    isImportedClassification = false,\n    isLoadingControls,\n    itemName = '',\n    maxAppCount,\n    messageStyle,\n    modifiedAt,\n    modifiedBy,\n    name,\n    onClick,\n}: Props) => {\n    const isClassified = !!name;\n    const hasDefinition = !!definition;\n    const hasModifiedAt = !!modifiedAt;\n    const hasModifiedBy = !!modifiedBy;\n    const hasSecurityControls = !!controls;\n    const isTooltipMessageEnabled = isClassified && hasDefinition && messageStyle === STYLE_TOOLTIP;\n    const isInlineMessageEnabled = isClassified && hasDefinition && messageStyle === STYLE_INLINE;\n    const isNotClassifiedMessageVisible = !isClassified && messageStyle === STYLE_INLINE;\n    const isControlsIndicatorEnabled = isClassified && isLoadingControls && messageStyle === STYLE_INLINE;\n    const isSecurityControlsEnabled =\n        isClassified && !isLoadingControls && hasSecurityControls && messageStyle === STYLE_INLINE;\n    const modifiedDate = new Date(modifiedAt || 0);\n    const isModifiedMessageVisible =\n        isClassified && hasModifiedAt && isValidDate(modifiedDate) && hasModifiedBy && messageStyle === STYLE_INLINE;\n\n    const formattedModifiedAt = isModifiedMessageVisible && (\n        <FormattedDate value={modifiedDate} month=\"long\" year=\"numeric\" day=\"numeric\" />\n    );\n\n    const modifiedByMessage = isImportedClassification ? messages.importedBy : messages.modifiedBy;\n\n    return (\n        <article className={`bdl-Classification ${className}`}>\n            {isClassified && (\n                <ClassifiedBadge\n                    color={color}\n                    name={((name: any): string)}\n                    onClick={onClick}\n                    tooltipText={isTooltipMessageEnabled ? definition : undefined}\n                />\n            )}\n            {isInlineMessageEnabled && (\n                <Label text={<FormattedMessage {...messages.definition} />}>\n                    <p className=\"bdl-Classification-definition\">{definition}</p>\n                </Label>\n            )}\n            {isNotClassifiedMessageVisible && (\n                <span className=\"bdl-Classification-missingMessage\">\n                    <FormattedMessage {...messages.missing} />\n                </span>\n            )}\n            {isModifiedMessageVisible && (\n                <Label text={<FormattedMessage {...messages.modifiedByLabel} />}>\n                    <p className=\"bdl-Classification-modifiedBy\" data-testid=\"classification-modifiedby\">\n                        <FormattedMessage\n                            {...modifiedByMessage}\n                            values={{ modifiedAt: formattedModifiedAt, modifiedBy }}\n                        />\n                    </p>\n                </Label>\n            )}\n\n            {isSecurityControlsEnabled && (\n                <SecurityControls\n                    classificationColor={color}\n                    classificationName={name}\n                    controls={controls}\n                    controlsFormat={controlsFormat}\n                    definition={definition}\n                    itemName={itemName}\n                    maxAppCount={maxAppCount}\n                    shouldRenderLabel\n                />\n            )}\n            {isControlsIndicatorEnabled && <LoadingIndicator />}\n        </article>\n    );\n};\n\nexport { STYLE_INLINE, STYLE_TOOLTIP };\nexport default Classification;\n","// extracted by mini-css-extract-plugin","// @flow\nimport * as React from 'react';\n\nimport PlainButton from '../../components/plain-button';\nimport Tooltip from '../../components/tooltip';\nimport IconSecurityClassification from '../../icons/general/IconSecurityClassification';\nimport SecurityBadge from '../security';\nimport { bdlYellow50 } from '../../styles/variables';\nimport type { Position } from '../../components/tooltip';\nimport './ClassifiedBadge.scss';\n\ntype Props = {\n    color?: string,\n    name: string,\n    onClick?: (event: SyntheticEvent<HTMLButtonElement>) => void,\n    tooltipPosition?: Position,\n    tooltipText?: string,\n};\n\nconst ICON_SIZE = 12;\n\nconst ClassifiedBadge = ({ color, name, onClick, tooltipPosition = 'bottom-center', tooltipText }: Props) => {\n    const isClickable = typeof onClick === 'function';\n    const isTooltipDisabled = !tooltipText;\n    const badge = (\n        <SecurityBadge\n            className=\"bdl-ClassifiedBadge\"\n            color={color}\n            icon={<IconSecurityClassification height={ICON_SIZE} width={ICON_SIZE} />}\n            message={name}\n        />\n    );\n    return (\n        <Tooltip isDisabled={isTooltipDisabled} isTabbable={false} position={tooltipPosition} text={tooltipText}>\n            {isClickable ? (\n                <PlainButton\n                    className=\"bdl-ClassifiedBadge-editButton\"\n                    data-resin-target=\"editclassification\"\n                    onClick={onClick}\n                    type=\"button\"\n                >\n                    {badge}\n                </PlainButton>\n            ) : (\n                badge\n            )}\n        </Tooltip>\n    );\n};\n\nClassifiedBadge.defaultProps = {\n    color: bdlYellow50,\n};\n\nexport default ClassifiedBadge;\n","// extracted by mini-css-extract-plugin","/**\n * @flow\n * @file Classification add/edit button\n * @author Box\n */\n\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport messages from './messages';\nimport PlainButton from '../../components/plain-button/PlainButton';\n\ntype Props = {\n    className?: string,\n    isEditing: boolean,\n    onEdit: (e: SyntheticEvent<HTMLButtonElement>) => void,\n};\n\nconst EditClassificationButton = ({ className = '', isEditing, onEdit, ...rest }: Props) => {\n    const message = isEditing ? messages.edit : messages.add;\n    const interaction = isEditing ? 'editclassification' : 'addclassification';\n    return (\n        <PlainButton\n            className={`bdl-EditClassificationButton ${className}`}\n            data-resin-target={interaction}\n            onClick={onEdit}\n            type=\"button\"\n            {...rest}\n        >\n            <FormattedMessage {...message} />\n        </PlainButton>\n    );\n};\n\nexport default EditClassificationButton;\n","// @flow\nimport messages from './messages';\nimport {\n    CLASSIFICATION_COLOR_ID_0,\n    CLASSIFICATION_COLOR_ID_1,\n    CLASSIFICATION_COLOR_ID_2,\n    CLASSIFICATION_COLOR_ID_3,\n    CLASSIFICATION_COLOR_ID_4,\n    CLASSIFICATION_COLOR_ID_5,\n    CLASSIFICATION_COLOR_ID_6,\n    CLASSIFICATION_COLOR_ID_7,\n} from './constants';\nimport * as vars from '../../styles/variables';\n\nconst classificationColorsMap = {\n    [CLASSIFICATION_COLOR_ID_0]: {\n        name: messages.classificationYellow,\n        color: vars.bdlYellow50,\n        tinycon: vars.bdlYellorange,\n    },\n    [CLASSIFICATION_COLOR_ID_1]: {\n        name: messages.classificationOrange,\n        color: vars.bdlOrange50,\n        tinycon: vars.bdlOrange,\n    },\n    [CLASSIFICATION_COLOR_ID_2]: {\n        name: messages.classificationRed,\n        color: vars.bdlWatermelonRed50,\n        tinycon: vars.bdlWatermelonRed,\n    },\n    [CLASSIFICATION_COLOR_ID_3]: {\n        name: messages.classificationPurple,\n        color: vars.bdlPurpleRain50,\n        tinycon: vars.bdlPurpleRain,\n    },\n    [CLASSIFICATION_COLOR_ID_4]: {\n        name: messages.classificationLightBlue,\n        color: vars.bdlLightBlue50,\n        tinycon: vars.bdlLightBlue,\n    },\n    [CLASSIFICATION_COLOR_ID_5]: {\n        name: messages.classificationDarkBlue,\n        color: vars.bdlDarkBlue50,\n        tinycon: vars.bdlDarkBlue,\n    },\n    [CLASSIFICATION_COLOR_ID_6]: {\n        name: messages.classificationGreen,\n        color: vars.bdlGreenLight50,\n        tinycon: vars.bdlGreenLight,\n    },\n    [CLASSIFICATION_COLOR_ID_7]: {\n        name: messages.classificationGrey,\n        color: vars.bdlGray20,\n        tinycon: vars.bdlGray62,\n    },\n};\n\nexport default classificationColorsMap;\n","// @flow\nconst DEFAULT_MAX_APP_COUNT = 3;\n\nconst SECURITY_CONTROLS_FORMAT: {\n    FULL: 'full',\n    SHORT: 'short',\n    SHORT_WITH_BTN: 'shortWithBtn',\n} = {\n    FULL: 'full',\n    SHORT: 'short',\n    SHORT_WITH_BTN: 'shortWithBtn',\n};\n\nconst ACCESS_POLICY_RESTRICTION: {\n    APP: 'app',\n    BOX_SIGN_REQUEST: 'boxSignRequest',\n    DOWNLOAD: 'download',\n    EXTERNAL_COLLAB: 'externalCollab',\n    FTP: 'ftp',\n    SHARED_LINK: 'sharedLink',\n    WATERMARK: 'watermark',\n} = {\n    APP: 'app',\n    BOX_SIGN_REQUEST: 'boxSignRequest',\n    DOWNLOAD: 'download',\n    EXTERNAL_COLLAB: 'externalCollab',\n    FTP: 'ftp',\n    SHARED_LINK: 'sharedLink',\n    WATERMARK: 'watermark',\n};\n\nconst DOWNLOAD_CONTROL: {\n    DESKTOP: 'desktop',\n    FTP: 'ftp',\n    MOBILE: 'mobile',\n    WEB: 'web',\n} = {\n    DESKTOP: 'desktop',\n    FTP: 'ftp',\n    MOBILE: 'mobile',\n    WEB: 'web',\n};\n\nconst LIST_ACCESS_LEVEL: {\n    BLACKLIST: 'blacklist',\n    BLOCK: 'block',\n    WHITELIST: 'whitelist',\n} = {\n    BLACKLIST: 'blacklist',\n    BLOCK: 'block',\n    WHITELIST: 'whitelist',\n};\n\nconst MANAGED_USERS_ACCESS_LEVEL: {\n    OWNERS_AND_COOWNERS: 'ownersCoOwners',\n    OWNERS_COOWNERS_AND_EDITORS: 'ownersCoOwnersEditors',\n} = {\n    OWNERS_AND_COOWNERS: 'ownersCoOwners',\n    OWNERS_COOWNERS_AND_EDITORS: 'ownersCoOwnersEditors',\n};\n\nconst SHARED_LINK_ACCESS_LEVEL: {\n    COLLAB_AND_COMPANY_ONLY: 'companyAndCollabOnly',\n    COLLAB_ONLY: 'collabOnly',\n    PUBLIC: 'public',\n} = {\n    COLLAB_AND_COMPANY_ONLY: 'companyAndCollabOnly',\n    COLLAB_ONLY: 'collabOnly',\n    PUBLIC: 'public',\n};\n\nconst APP_RESTRICTION_MESSAGE_TYPE = {\n    DEFAULT: 'default',\n    WITH_APP_LIST: 'withAppList',\n    WITH_OVERFLOWN_APP_LIST: 'withOverflownAppList',\n};\n\nconst CLASSIFICATION_COLOR_ID_0 = 0;\nconst CLASSIFICATION_COLOR_ID_1 = 1;\nconst CLASSIFICATION_COLOR_ID_2 = 2;\nconst CLASSIFICATION_COLOR_ID_3 = 3;\nconst CLASSIFICATION_COLOR_ID_4 = 4;\nconst CLASSIFICATION_COLOR_ID_5 = 5;\nconst CLASSIFICATION_COLOR_ID_6 = 6;\nconst CLASSIFICATION_COLOR_ID_7 = 7;\n\nconst DEFAULT_CLASSIFICATION_COLOR_ID = CLASSIFICATION_COLOR_ID_0;\n\nexport {\n    ACCESS_POLICY_RESTRICTION,\n    APP_RESTRICTION_MESSAGE_TYPE,\n    CLASSIFICATION_COLOR_ID_0,\n    CLASSIFICATION_COLOR_ID_1,\n    CLASSIFICATION_COLOR_ID_2,\n    CLASSIFICATION_COLOR_ID_3,\n    CLASSIFICATION_COLOR_ID_4,\n    CLASSIFICATION_COLOR_ID_5,\n    CLASSIFICATION_COLOR_ID_6,\n    CLASSIFICATION_COLOR_ID_7,\n    DEFAULT_CLASSIFICATION_COLOR_ID,\n    DEFAULT_MAX_APP_COUNT,\n    DOWNLOAD_CONTROL,\n    LIST_ACCESS_LEVEL,\n    MANAGED_USERS_ACCESS_LEVEL,\n    SECURITY_CONTROLS_FORMAT,\n    SHARED_LINK_ACCESS_LEVEL,\n};\n","// @flow\n\nexport { default, STYLE_INLINE, STYLE_TOOLTIP } from './Classification';\nexport { default as ClassifiedBadge } from './ClassifiedBadge';\nexport { default as classificationMessages } from './messages';\nexport { default as EditClassificationButton } from './EditClassificationButton';\nexport { default as SecurityControls } from './security-controls';\nexport { default as classificationColorsMap } from './classificationColorsMap';\nexport { getClassificationLabelColor, getClassificationTinyconColor } from './utils';\nexport * from './constants';\n\nexport type {\n    Controls,\n    ControlsFormat,\n    ApplicationRestriction,\n    DownloadRestrictions,\n    ExternalCollabRestriction,\n    SharedLinkRestrictions,\n} from './flowTypes';\n","import { defineMessages } from 'react-intl';\n\nconst messages = defineMessages({\n    add: {\n        defaultMessage: 'Add',\n        description: 'Button to add classification on an item',\n        id: 'boxui.classification.add',\n    },\n    classification: {\n        defaultMessage: 'Classification',\n        description: 'Header for classification section in sidebar',\n        id: 'boxui.classification.classification',\n    },\n    definition: {\n        defaultMessage: 'Definition',\n        description: 'Header displayed above the classification definition',\n        id: 'boxui.classification.definition',\n    },\n    edit: {\n        defaultMessage: 'Edit',\n        description: 'Button to edit classification on an item',\n        id: 'boxui.classification.edit',\n    },\n    missing: {\n        defaultMessage: 'Not classified',\n        description: 'Default message for classification in the sidebar when there is none',\n        id: 'boxui.classification.missing',\n    },\n    modifiedByLabel: {\n        defaultMessage: 'Classification Label',\n        description: 'Label displayed above details about when a classification was last modified.',\n        id: 'boxui.classification.modifiedByLabel',\n    },\n    importedBy: {\n        defaultMessage: 'Imported from {modifiedBy} on {modifiedAt}',\n        description: 'Sentence stating which user or service imported a classification and on what date.',\n        id: 'boxui.classification.importedBy',\n    },\n    modifiedBy: {\n        defaultMessage: 'Applied by {modifiedBy} on {modifiedAt}',\n        description: 'Sentence stating which user or service modified a classification and on what date.',\n        id: 'boxui.classification.modifiedBy',\n    },\n    // Classification Colors\n    classificationYellow: {\n        defaultMessage: 'Yellow',\n        description: 'Classification label color name as yellow',\n        id: 'boxui.classification.classificationYellow',\n    },\n    classificationOrange: {\n        defaultMessage: 'Orange',\n        description: 'Classification label color name as orange',\n        id: 'boxui.classification.classificationOrange',\n    },\n    classificationRed: {\n        defaultMessage: 'Red',\n        description: 'Classification label color name as red',\n        id: 'boxui.classification.classificationRed',\n    },\n    classificationPurple: {\n        defaultMessage: 'Purple',\n        description: 'Classification label color name as purple',\n        id: 'boxui.classification.classificationPurple',\n    },\n    classificationLightBlue: {\n        defaultMessage: 'Light Blue',\n        description: 'Classification label color name as light blue',\n        id: 'boxui.classification.classificationLightBlue',\n    },\n    classificationDarkBlue: {\n        defaultMessage: 'Dark Blue',\n        description: 'Classification label color name as dark blue',\n        id: 'boxui.classification.classificationDarkBlue',\n    },\n    classificationGreen: {\n        defaultMessage: 'Green',\n        description: 'Classification label color name as green',\n        id: 'boxui.classification.classificationGreen',\n    },\n    classificationGrey: {\n        defaultMessage: 'Grey',\n        description: 'Classification label color name as grey',\n        id: 'boxui.classification.classificationGrey',\n    },\n});\n\nexport default messages;\n","// @flow\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport { DEFAULT_MAX_APP_COUNT, SECURITY_CONTROLS_FORMAT } from '../constants';\nimport { getShortSecurityControlsMessage, getFullSecurityControlsMessages } from './utils';\nimport messages from './messages';\nimport PlainButton from '../../../components/plain-button';\nimport Label from '../../../components/label/Label';\nimport SecurityControlsItem from './SecurityControlsItem';\nimport SecurityControlsModal from './SecurityControlsModal';\nimport type { Controls, ControlsFormat } from '../flowTypes';\n\nimport './SecurityControls.scss';\n\nconst { FULL, SHORT, SHORT_WITH_BTN } = SECURITY_CONTROLS_FORMAT;\n\ntype Props = {\n    classificationColor?: string,\n    classificationName?: string,\n    controls: Controls,\n    controlsFormat: ControlsFormat,\n    definition?: string,\n    itemName?: string,\n    maxAppCount?: number,\n    shouldRenderLabel?: boolean,\n};\n\ntype State = {\n    isSecurityControlsModalOpen: boolean,\n};\n\nclass SecurityControls extends React.Component<Props, State> {\n    static defaultProps = {\n        classificationName: '',\n        definition: '',\n        itemName: '',\n        controls: {},\n        controlsFormat: SHORT,\n        maxAppCount: DEFAULT_MAX_APP_COUNT,\n        shouldRenderLabel: false,\n    };\n\n    state = {\n        isSecurityControlsModalOpen: false,\n    };\n\n    openModal = () => this.setState({ isSecurityControlsModalOpen: true });\n\n    closeModal = () => this.setState({ isSecurityControlsModalOpen: false });\n\n    render() {\n        const {\n            classificationColor,\n            classificationName,\n            controls,\n            controlsFormat,\n            definition,\n            itemName,\n            maxAppCount,\n            shouldRenderLabel,\n        } = this.props;\n\n        let items = [];\n        let modalItems;\n\n        if (controlsFormat === FULL) {\n            items = getFullSecurityControlsMessages(controls, maxAppCount);\n        } else {\n            items = getShortSecurityControlsMessage(controls);\n\n            if (items.length && controlsFormat === SHORT_WITH_BTN) {\n                modalItems = getFullSecurityControlsMessages(controls, maxAppCount);\n            }\n        }\n\n        if (!items.length) {\n            return null;\n        }\n\n        const { isSecurityControlsModalOpen } = this.state;\n        const shouldShowSecurityControlsModal =\n            controlsFormat === SHORT_WITH_BTN && !!itemName && !!classificationName && !!definition;\n\n        let itemsList = (\n            <ul className=\"bdl-SecurityControls\">\n                {items.map(({ message, tooltipMessage }, index) => (\n                    <SecurityControlsItem key={index} message={message} tooltipMessage={tooltipMessage} />\n                ))}\n            </ul>\n        );\n\n        if (shouldRenderLabel) {\n            itemsList = <Label text={<FormattedMessage {...messages.securityControlsLabel} />}>{itemsList}</Label>;\n        }\n\n        return (\n            <>\n                {itemsList}\n                {shouldShowSecurityControlsModal && (\n                    <>\n                        <PlainButton className=\"lnk\" onClick={this.openModal} type=\"button\">\n                            <FormattedMessage {...messages.viewAll} />\n                        </PlainButton>\n                        <SecurityControlsModal\n                            classificationColor={classificationColor}\n                            classificationName={classificationName}\n                            closeModal={this.closeModal}\n                            definition={definition}\n                            itemName={itemName}\n                            isSecurityControlsModalOpen={isSecurityControlsModalOpen}\n                            modalItems={modalItems}\n                        />\n                    </>\n                )}\n            </>\n        );\n    }\n}\n\nexport type { Props as SecurityControlsProps };\nexport default SecurityControls;\n","// extracted by mini-css-extract-plugin","// @flow\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport { bdlBoxBlue } from '../../../styles/variables';\nimport Tooltip from '../../../components/tooltip';\nimport IconInfo from '../../../icons/general/IconInfo';\nimport type { MessageItem } from '../flowTypes';\n\nimport './SecurityControlsItem.scss';\n\ntype Props = MessageItem;\n\nconst ICON_SIZE = 13;\n\nconst SecurityControlsItem = ({ message, tooltipMessage }: Props) => {\n    return (\n        <li className=\"bdl-SecurityControlsItem\">\n            {/* $FlowFixMe */}\n            {React.isValidElement(message) ? message : <FormattedMessage {...message} />}\n            {tooltipMessage && (\n                <Tooltip\n                    className=\"bdl-SecurityControlsItem-tooltip\"\n                    text={<FormattedMessage {...tooltipMessage} />}\n                    position=\"middle-right\"\n                    isTabbable={false}\n                >\n                    <span className=\"bdl-SecurityControlsItem-tooltipIcon\">\n                        <IconInfo color={bdlBoxBlue} width={ICON_SIZE} height={ICON_SIZE} />\n                    </span>\n                </Tooltip>\n            )}\n        </li>\n    );\n};\n\nexport default SecurityControlsItem;\n","// extracted by mini-css-extract-plugin","// @flow\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport { Modal, ModalActions } from '../../../components/modal';\nimport commonMessages from '../../../common/messages';\nimport Button from '../../../components/button';\nimport classificationMessages from '../messages';\nimport ClassifiedBadge from '../ClassifiedBadge';\nimport Label from '../../../components/label/Label';\nimport messages from './messages';\nimport SecurityControlsItem from './SecurityControlsItem';\nimport './SecurityControlsModal.scss';\nimport type { MessageItem } from '../flowTypes';\n\ntype Props = {\n    classificationColor?: string,\n    classificationName?: string,\n    closeModal: Function,\n    definition?: string,\n    isSecurityControlsModalOpen: boolean,\n    itemName?: string,\n    modalItems: Array<MessageItem>,\n};\n\nconst SecurityControlsModal = ({\n    closeModal,\n    definition,\n    classificationColor,\n    classificationName,\n    isSecurityControlsModalOpen,\n    itemName,\n    modalItems,\n}: Props) => {\n    if (!itemName || !classificationName || !definition) {\n        return null;\n    }\n\n    const title = <FormattedMessage {...messages.modalTitle} values={{ itemName }} />;\n\n    return (\n        <Modal\n            className=\"bdl-SecurityControlsModal\"\n            title={title}\n            onRequestClose={closeModal}\n            isOpen={isSecurityControlsModalOpen}\n        >\n            <p>\n                <FormattedMessage {...messages.modalDescription} />\n            </p>\n            <ClassifiedBadge color={classificationColor} name={((classificationName: any): string)} />\n            <Label text={<FormattedMessage {...classificationMessages.definition} />}>\n                <p className=\"bdl-SecurityControlsModal-definition\">{definition}</p>\n            </Label>\n            <ul className=\"bdl-SecurityControlsModal-controlsItemList\">\n                {modalItems.map(({ message, tooltipMessage }, index) => (\n                    <SecurityControlsItem key={index} message={message} tooltipMessage={tooltipMessage} />\n                ))}\n            </ul>\n            <ModalActions>\n                <Button onClick={closeModal} type=\"button\">\n                    <FormattedMessage {...commonMessages.close} />\n                </Button>\n            </ModalActions>\n        </Modal>\n    );\n};\n\nSecurityControlsModal.defaultProps = {\n    isSecurityControlsModalOpen: false,\n    modalItems: [],\n};\n\nexport default SecurityControlsModal;\n","// extracted by mini-css-extract-plugin","// @flow\nimport messages from './messages';\nimport { APP_RESTRICTION_MESSAGE_TYPE, LIST_ACCESS_LEVEL } from '../constants';\n\nconst { BLACKLIST, WHITELIST } = LIST_ACCESS_LEVEL;\nconst { DEFAULT, WITH_APP_LIST, WITH_OVERFLOWN_APP_LIST } = APP_RESTRICTION_MESSAGE_TYPE;\n\nconst appRestrictionsMessageMap = {\n    [BLACKLIST]: {\n        [DEFAULT]: messages.appDownloadRestricted,\n        [WITH_APP_LIST]: messages.appDownloadBlacklist,\n        [WITH_OVERFLOWN_APP_LIST]: messages.appDownloadBlacklistOverflow,\n    },\n    [WHITELIST]: {\n        [DEFAULT]: messages.appDownloadRestricted,\n        [WITH_APP_LIST]: messages.appDownloadWhitelist,\n        [WITH_OVERFLOWN_APP_LIST]: messages.appDownloadWhitelistOverflow,\n    },\n};\n\nexport default appRestrictionsMessageMap;\n","// @flow\nimport messages from './messages';\nimport { DOWNLOAD_CONTROL, MANAGED_USERS_ACCESS_LEVEL } from '../constants';\n\nconst { DESKTOP, MOBILE, WEB } = DOWNLOAD_CONTROL;\nconst { OWNERS_AND_COOWNERS, OWNERS_COOWNERS_AND_EDITORS } = MANAGED_USERS_ACCESS_LEVEL;\n\nconst downloadRestrictionsMessageMap = {\n    [DESKTOP]: {\n        externalAllowed: {\n            [OWNERS_AND_COOWNERS]: messages.desktopDownloadOwners,\n            [OWNERS_COOWNERS_AND_EDITORS]: messages.desktopDownloadOwnersEditors,\n        },\n        externalRestricted: {\n            [OWNERS_AND_COOWNERS]: messages.desktopDownloadExternalOwners,\n            [OWNERS_COOWNERS_AND_EDITORS]: messages.desktopDownloadExternalOwnersEditors,\n            default: messages.desktopDownloadExternal,\n        },\n    },\n    [MOBILE]: {\n        externalAllowed: {\n            [OWNERS_AND_COOWNERS]: messages.mobileDownloadOwners,\n            [OWNERS_COOWNERS_AND_EDITORS]: messages.mobileDownloadOwnersEditors,\n        },\n        externalRestricted: {\n            [OWNERS_AND_COOWNERS]: messages.mobileDownloadExternalOwners,\n            [OWNERS_COOWNERS_AND_EDITORS]: messages.mobileDownloadExternalOwnersEditors,\n            default: messages.mobileDownloadExternal,\n        },\n    },\n    [WEB]: {\n        externalAllowed: {\n            [OWNERS_AND_COOWNERS]: messages.webDownloadOwners,\n            [OWNERS_COOWNERS_AND_EDITORS]: messages.webDownloadOwnersEditors,\n        },\n        externalRestricted: {\n            [OWNERS_AND_COOWNERS]: messages.webDownloadExternalOwners,\n            [OWNERS_COOWNERS_AND_EDITORS]: messages.webDownloadExternalOwnersEditors,\n            default: messages.webDownloadExternal,\n        },\n    },\n};\n\nexport default downloadRestrictionsMessageMap;\n","// @flow\nexport { default } from './SecurityControls';\n","// @flow\nimport { defineMessages } from 'react-intl';\n\nconst messages = defineMessages({\n    securityControlsLabel: {\n        defaultMessage: 'Restrictions',\n        description:\n            'Label displayed above the security restrictions on the file due to the classification label and associated policies.',\n        id: 'boxui.securityControls.securityControlsLabel',\n    },\n    // Short summary messages - 1 restriction\n    shortSharing: {\n        defaultMessage: 'Sharing restriction applies',\n        description: 'Short summary displayed for classification when a sharing restriction is applied to it',\n        id: 'boxui.securityControls.shortSharing',\n    },\n    shortDownload: {\n        defaultMessage: 'Download restrictions apply',\n        description: 'Short summary displayed for classification when a download restriction is applied to it',\n        id: 'boxui.securityControls.shortDownload',\n    },\n    shortApp: {\n        defaultMessage: 'Application restrictions apply',\n        description:\n            'Short summary displayed for classification when an application download restriction is applied to it',\n        id: 'boxui.securityControls.shortApp',\n    },\n    shortWatermarking: {\n        defaultMessage: 'Watermarking applies',\n        description: 'Short summary displayed for classification when watermarking is applied to it',\n        id: 'boxui.securityControls.shortWatermarking',\n    },\n    shortSign: {\n        defaultMessage: 'Sign restrictions apply',\n        description:\n            'Short summary displayed for items when Sign restriction is applied to them. Box Sign is a product name',\n        id: 'boxui.securityControls.shortSign',\n    },\n    // Short summary messages - 2 restrictions\n    shortSharingDownload: {\n        defaultMessage: 'Sharing and download restrictions apply',\n        description:\n            'Short summary displayed for classification when both sharing and download restrictions are applied to it',\n        id: 'boxui.securityControls.shortSharingDownload',\n    },\n    shortSharingApp: {\n        defaultMessage: 'Sharing and app restrictions apply',\n        description:\n            'Short summary displayed for classification when both sharing and app download restrictions are applied to it',\n        id: 'boxui.securityControls.shortSharingApp',\n    },\n    shortDownloadApp: {\n        defaultMessage: 'Download and app restrictions apply',\n        description:\n            'Short summary displayed for classification when both download and app download restrictions are applied to it',\n        id: 'boxui.securityControls.shortDownloadApp',\n    },\n    shortSharingSign: {\n        defaultMessage: 'Sharing and Sign restrictions apply',\n        description:\n            'Short summary displayed for items when both sharing and Sign restrictions are applied to them. Box Sign is a product name',\n        id: 'boxui.securityControls.shortSharingSign',\n    },\n    shortDownloadSign: {\n        defaultMessage: 'Download and Sign restrictions apply',\n        description:\n            'Short summary displayed for items when both download and Sign restrictions are applied to them. Box Sign is a product name',\n        id: 'boxui.securityControls.shortDownloadSign',\n    },\n    shortAppSign: {\n        defaultMessage: 'App and Sign restrictions apply',\n        description:\n            'Short summary displayed for items when both app download and Sign restrictions are applied to them. Box Sign is a product name',\n        id: 'boxui.securityControls.shortAppSign',\n    },\n    // Short summary messages - 3 restrictions\n    shortDownloadAppSign: {\n        defaultMessage: 'Download, app and Sign restrictions apply',\n        description:\n            'Short summary displayed for items when download, app download and Sign restrictions are applied to them. Box Sign is a product name',\n        id: 'boxui.securityControls.shortDownloadAppSign',\n    },\n    shortSharingAppSign: {\n        defaultMessage: 'Sharing, app and Sign restrictions apply',\n        description:\n            'Short summary displayed for items when sharing, app download and Sign restrictions are applied to them. Box Sign is a product name',\n        id: 'boxui.securityControls.shortSharingAppSign',\n    },\n    shortSharingDownloadSign: {\n        defaultMessage: 'Sharing, download and Sign restrictions apply',\n        description:\n            'Short summary displayed for items when sharing, download and Sign restrictions are applied to them. Box Sign is a product name',\n        id: 'boxui.securityControls.shortSharingDownloadSign',\n    },\n    shortSharingDownloadApp: {\n        defaultMessage: 'Sharing, download and app restrictions apply',\n        description:\n            'Short summary displayed for items when sharing, download and app download restrictions are applied to them.',\n        id: 'boxui.securityControls.shortSharingDownloadApp',\n    },\n    // Short summary messages - 4 restrictions\n    shortSharingDownloadAppSign: {\n        defaultMessage: 'Sharing, download, app and Sign restrictions apply',\n        description:\n            'Short summary displayed for items when sharing, download, app download and Sign restrictions are applied to them. Box Sign is a product name',\n        id: 'boxui.securityControls.shortSharingDownloadAppSign',\n    },\n    // Full list individual restriction bullets\n    sharingCollabOnly: {\n        defaultMessage: 'Shared links allowed for collaborators only.',\n        description: 'Bullet point that summarizes shared link restriction applied to classification',\n        id: 'boxui.securityControls.sharingCollabOnly',\n    },\n    sharingCollabAndCompanyOnly: {\n        defaultMessage: 'Shared links cannot be made publicly accessible.',\n        description: 'Bullet point that summarizes collaborators shared link restriction applied to classification',\n        id: 'boxui.securityControls.sharingCollabAndCompanyOnly',\n    },\n    externalCollabBlock: {\n        defaultMessage: 'External collaboration restricted.',\n        description:\n            'Bullet point that summarizes external collaboration blocked restriction applied to classification',\n        id: 'boxui.securityControls.externalCollabBlock',\n    },\n    externalCollabDomainList: {\n        defaultMessage: 'External collaboration limited to approved domains.',\n        description: 'Bullet point that summarizes external collaboration restriction applied to classification',\n        id: 'boxui.securityControls.externalCollabDomainList',\n    },\n    appDownloadRestricted: {\n        defaultMessage: 'Download restricted for some applications.',\n        description: 'Bullet point that summarizes application download restriction applied to classification',\n        id: 'boxui.securityControls.appDownloadRestricted',\n    },\n    appDownloadBlacklist: {\n        defaultMessage: 'Download restricted for some applications: {appNames}',\n        description: 'Bullet point that summarizes application download restriction applied to classification',\n        id: 'boxui.securityControls.appDownloadBlacklist',\n    },\n    appDownloadBlacklistOverflow: {\n        defaultMessage: 'Download restricted for some applications: {appNames} +{remainingAppCount} more',\n        description:\n            'Bullet point that summarizes application download restriction applied to classification. This variation is used when the list of applications is longer than the configured threshold',\n        id: 'boxui.securityControls.appDownloadBlacklistOverflow',\n    },\n    appDownloadWhitelist: {\n        defaultMessage: 'Only select applications are allowed: {appNames}',\n        description: 'Bullet point that summarizes application download restriction applied to classification',\n        id: 'boxui.securityControls.appDownloadWhitelist',\n    },\n    appDownloadWhitelistOverflow: {\n        defaultMessage: 'Only select applications are allowed: {appNames} +{remainingAppCount} more',\n        description:\n            'Bullet point that summarizes application download restriction applied to classification. This variation is used when the list of applications is longer than the configured threshold',\n        id: 'boxui.securityControls.appDownloadWhitelistOverflow',\n    },\n    allAppNames: {\n        defaultMessage: 'All applications: {appsList}',\n        description: 'Name list of all applications download restriction applied to classification',\n        id: 'boxui.securityControls.allAppNames',\n    },\n    // Web Download Restrictions\n    webDownloadOwners: {\n        defaultMessage: 'Download restricted on web, except Owners/Co-Owners.',\n        description:\n            'Bullet point that summarizes web download restrictions applied to classification, when restriction applies to managed users except Owners/Co-Owners',\n        id: 'boxui.securityControls.webDownloadOwners',\n    },\n    webDownloadOwnersEditors: {\n        defaultMessage: 'Download restricted on web, except Owners/Co-Owners/Editors.',\n        description:\n            'Bullet point that summarizes web download restrictions applied to classification, when restriction applies to managed users except Owners/Co-Owners/Editors',\n        id: 'boxui.securityControls.webDownloadOwnersEditors',\n    },\n    webDownloadExternalOwners: {\n        defaultMessage: 'Download restricted on web, except Owners/Co-Owners. Also restricted for external users.',\n        description:\n            'Bullet point that summarizes web download restrictions applied to classification, when restriction applies to external users and managed users except Owners/Co-Owners',\n        id: 'boxui.securityControls.webDownloadExternalOwners',\n    },\n    webDownloadExternalOwnersEditors: {\n        defaultMessage:\n            'Download restricted on web, except Owners/Co-Owners/Editors. Also restricted for external users.',\n        description:\n            'Bullet point that summarizes web download restrictions applied to classification, when restriction applies to external users and managed users except Owners/Co-Owners/Editors',\n        id: 'boxui.securityControls.webDownloadExternalOwnersEditors',\n    },\n    webDownloadExternal: {\n        defaultMessage: 'Download restricted on web for external users.',\n        description:\n            'Bullet point that summarizes web download restrictions applied to classification, when restriction applies to external users',\n        id: 'boxui.securityControls.webDownloadExternal',\n    },\n    boxSignRequestRestricted: {\n        defaultMessage: 'Sign restrictions apply.',\n        description:\n            'Bullet point that summarizes Box Sign request restrictions applied to items. Box Sign is a product name',\n        id: 'boxui.securityControls.boxSignRequestRestricted',\n    },\n    // Mobile Download Restrictions\n    mobileDownloadOwners: {\n        defaultMessage: 'Download restricted on mobile, except Owners/Co-Owners.',\n        description:\n            'Bullet point that summarizes mobile download restrictions applied to classification, when restriction applies to managed users except Owners/Co-Owners',\n        id: 'boxui.securityControls.mobileDownloadOwners',\n    },\n    mobileDownloadOwnersEditors: {\n        defaultMessage: 'Download restricted on mobile, except Owners/Co-Owners/Editors.',\n        description:\n            'Bullet point that summarizes mobile download restrictions applied to classification, when restriction applies to managed users except Owners/Co-Owners/Editors',\n        id: 'boxui.securityControls.mobileDownloadOwnersEditors',\n    },\n    mobileDownloadExternalOwners: {\n        defaultMessage: 'Download restricted on mobile, except Owners/Co-Owners. Also restricted for external users.',\n        description:\n            'Bullet point that summarizes mobile download restrictions applied to classification, when restriction applies to external users and managed users except Owners/Co-Owners',\n        id: 'boxui.securityControls.mobileDownloadExternalOwners',\n    },\n    mobileDownloadExternalOwnersEditors: {\n        defaultMessage:\n            'Download restricted on mobile, except Owners/Co-Owners/Editors. Also restricted for external users.',\n        description:\n            'Bullet point that summarizes mobile download restrictions applied to classification, when restriction applies to external users and managed users except Owners/Co-Owners/Editors',\n        id: 'boxui.securityControls.mobileDownloadExternalOwnersEditors',\n    },\n    mobileDownloadExternal: {\n        defaultMessage: 'Download restricted on mobile for external users.',\n        description:\n            'Bullet point that summarizes mobile download restrictions applied to classification, when restriction applies to external users',\n        id: 'boxui.securityControls.mobileDownloadExternal',\n    },\n    // Desktop Download Restrictions\n    desktopDownloadOwners: {\n        defaultMessage: 'Download restricted on Box Drive, except Owners/Co-Owners.',\n        description:\n            'Bullet point that summarizes desktop download restrictions applied to classification, when restriction applies to managed users except Owners/Co-Owners. Box Drive is a product name and not translated',\n        id: 'boxui.securityControls.desktopDownloadOwners',\n    },\n    desktopDownloadOwnersEditors: {\n        defaultMessage: 'Download restricted on Box Drive, except Owners/Co-Owners/Editors.',\n        description:\n            'Bullet point that summarizes desktop download restrictions applied to classification, when restriction applies to managed users except Owners/Co-Owners/Editors. Box Drive is a product name and not translated',\n        id: 'boxui.securityControls.desktopDownloadOwnersEditors',\n    },\n    desktopDownloadExternalOwners: {\n        defaultMessage:\n            'Download restricted on Box Drive, except Owners/Co-Owners. Also restricted for external users.',\n        description:\n            'Bullet point that summarizes desktop download restrictions applied to classification, when restriction applies to external users and managed users except Owners/Co-Owners. Box Drive is a product name and not translated',\n        id: 'boxui.securityControls.desktopDownloadExternalOwners',\n    },\n    desktopDownloadExternalOwnersEditors: {\n        defaultMessage:\n            'Download restricted on Box Drive, except Owners/Co-Owners/Editors. Also restricted for external users.',\n        description:\n            'Bullet point that summarizes desktop download restrictions applied to classification, when restriction applies to external users and managed users except Owners/Co-Owners/Editors. Box Drive is a product name and not translated',\n        id: 'boxui.securityControls.desktopDownloadExternalOwnersEditors',\n    },\n    desktopDownloadExternal: {\n        defaultMessage: 'Download restricted on Box Drive for external users.',\n        description:\n            'Bullet point that summarizes desktop download restrictions applied to classification, when restriction applies to external users. Box Drive is a product name and not translated',\n        id: 'boxui.securityControls.downloadExternal',\n    },\n    // Security Controls Modal\n    viewAll: {\n        defaultMessage: 'View All',\n        description: 'Button to display security controls modal',\n        id: 'boxui.securityControls.viewAll',\n    },\n    modalTitle: {\n        defaultMessage: \"View Classification for '{itemName}'\",\n        description: 'Title for modal to display classification and security controls details',\n        id: 'boxui.securityControls.modalTitle',\n    },\n    modalDescription: {\n        defaultMessage:\n            'Classification labels defined by your administrator can be used to label content and apply security policies.',\n        description: 'Description for modal to display classification and security controls details',\n        id: 'boxui.securityControls.modalDescription',\n    },\n});\n\nexport default messages;\n","// @flow\nimport * as React from 'react';\nimport getProp from 'lodash/get';\nimport isNil from 'lodash/isNil';\n\nimport type { Controls, MessageItem } from '../flowTypes';\n\nimport FormattedCompMessage from '../../../components/i18n/FormattedCompMessage';\nimport Link from '../../../components/link/Link';\nimport appRestrictionsMessageMap from './appRestrictionsMessageMap';\nimport downloadRestrictionsMessageMap from './downloadRestrictionsMessageMap';\nimport messages from './messages';\nimport {\n    ACCESS_POLICY_RESTRICTION,\n    APP_RESTRICTION_MESSAGE_TYPE,\n    DOWNLOAD_CONTROL,\n    LIST_ACCESS_LEVEL,\n    SHARED_LINK_ACCESS_LEVEL,\n} from '../constants';\n\nconst { APP, BOX_SIGN_REQUEST, DOWNLOAD, EXTERNAL_COLLAB, SHARED_LINK, WATERMARK } = ACCESS_POLICY_RESTRICTION;\nconst { DEFAULT, WITH_APP_LIST, WITH_OVERFLOWN_APP_LIST } = APP_RESTRICTION_MESSAGE_TYPE;\nconst { DESKTOP, MOBILE, WEB } = DOWNLOAD_CONTROL;\nconst { BLOCK, WHITELIST, BLACKLIST } = LIST_ACCESS_LEVEL;\nconst { COLLAB_ONLY, COLLAB_AND_COMPANY_ONLY, PUBLIC } = SHARED_LINK_ACCESS_LEVEL;\n\nconst getShortSecurityControlsMessage = (controls: Controls): Array<MessageItem> => {\n    const items = [];\n    const { app, boxSignRequest, download, externalCollab, sharedLink, watermark } = controls;\n\n    // Shared link and external collab restrictions are grouped\n    // together as generic \"sharing\" restrictions\n    const sharing = (sharedLink && sharedLink.accessLevel !== PUBLIC) || externalCollab;\n\n    // 4 restriction combinations\n    if (sharing && download && app && boxSignRequest) {\n        items.push({ message: messages.shortSharingDownloadAppSign });\n    }\n    // 3 restriction combinations\n    else if (sharing && download && app) {\n        items.push({ message: messages.shortSharingDownloadApp });\n    } else if (download && app && boxSignRequest) {\n        items.push({ message: messages.shortDownloadAppSign });\n    } else if (sharing && app && boxSignRequest) {\n        items.push({ message: messages.shortSharingAppSign });\n    } else if (sharing && download && boxSignRequest) {\n        items.push({ message: messages.shortSharingDownloadSign });\n    }\n    // 2 restriction combinations\n    else if (sharing && boxSignRequest) {\n        items.push({ message: messages.shortSharingSign });\n    } else if (download && boxSignRequest) {\n        items.push({ message: messages.shortDownloadSign });\n    } else if (app && boxSignRequest) {\n        items.push({ message: messages.shortAppSign });\n    } else if (sharing && download) {\n        items.push({ message: messages.shortSharingDownload });\n    } else if (sharing && app) {\n        items.push({ message: messages.shortSharingApp });\n    } else if (download && app) {\n        items.push({ message: messages.shortDownloadApp });\n    }\n    // 1 restriction combinations\n    else if (boxSignRequest) {\n        items.push({ message: messages.shortSign });\n    } else if (sharing) {\n        items.push({ message: messages.shortSharing });\n    } else if (download) {\n        items.push({ message: messages.shortDownload });\n    } else if (app) {\n        items.push({ message: messages.shortApp });\n    }\n\n    if (watermark) {\n        items.push({ message: messages.shortWatermarking });\n    }\n\n    return items;\n};\n\nconst getSharedLinkMessages = (controls: Controls): Array<MessageItem> => {\n    const items = [];\n    const accessLevel = getProp(controls, `${SHARED_LINK}.accessLevel`);\n\n    switch (accessLevel) {\n        case COLLAB_ONLY:\n            items.push({ message: messages.sharingCollabOnly });\n            break;\n        case COLLAB_AND_COMPANY_ONLY:\n            items.push({ message: messages.sharingCollabAndCompanyOnly });\n            break;\n        default:\n            // no-op\n            break;\n    }\n    return items;\n};\n\nconst getWatermarkingMessages = (controls: Controls): Array<MessageItem> => {\n    const items = [];\n    const isWatermarkEnabled = getProp(controls, `${WATERMARK}.enabled`, false);\n    if (isWatermarkEnabled) {\n        const formattedCompMessage = (\n            <FormattedCompMessage\n                id=\"boxui.securityControls.watermarkingAppliedWithLink\"\n                description=\"Bullet point that summarizes watermarking applied to classification\"\n            >\n                Watermarking will be applied, click{' '}\n                <Link\n                    className=\"support-link\"\n                    href=\"https://support.box.com/hc/en-us/articles/360044195253\"\n                    target=\"_blank\"\n                >\n                    here\n                </Link>{' '}\n                more details on Watermarking\n            </FormattedCompMessage>\n        );\n        items.push({ message: formattedCompMessage });\n    }\n\n    return items;\n};\n\nconst getExternalCollabMessages = (controls: Controls): Array<MessageItem> => {\n    const items = [];\n    const accessLevel = getProp(controls, `${EXTERNAL_COLLAB}.accessLevel`);\n\n    switch (accessLevel) {\n        case BLOCK:\n            items.push({ message: messages.externalCollabBlock });\n            break;\n        case WHITELIST:\n        case BLACKLIST:\n            items.push({ message: messages.externalCollabDomainList });\n            break;\n        default:\n            // no-op\n            break;\n    }\n    return items;\n};\n\nconst getAppDownloadMessages = (controls: Controls, maxAppCount?: number): Array<MessageItem> => {\n    const items = [];\n    const accessLevel = getProp(controls, `${APP}.accessLevel`);\n\n    switch (accessLevel) {\n        case BLOCK:\n            items.push({ message: messages.appDownloadRestricted });\n            break;\n        case WHITELIST:\n        case BLACKLIST: {\n            const apps = getProp(controls, `${APP}.apps`, []);\n\n            maxAppCount = isNil(maxAppCount) ? apps.length : maxAppCount;\n            const appsToDisplay = apps.slice(0, maxAppCount);\n            const remainingAppCount = apps.slice(maxAppCount).length;\n            const appNames = appsToDisplay.map(({ displayText }) => displayText).join(', ');\n\n            if (remainingAppCount) {\n                const appsList = apps.map(({ displayText }) => displayText).join(', ');\n\n                items.push({\n                    message: {\n                        ...appRestrictionsMessageMap[accessLevel][WITH_OVERFLOWN_APP_LIST],\n                        values: { appNames, remainingAppCount },\n                    },\n                    tooltipMessage: {\n                        ...messages.allAppNames,\n                        values: { appsList },\n                    },\n                });\n            } else {\n                // Display list of apps if available, otherwise use generic\n                // app restriction copy\n                const messageType = apps.length ? WITH_APP_LIST : DEFAULT;\n\n                items.push({\n                    message: {\n                        ...appRestrictionsMessageMap[accessLevel][messageType],\n                        values: { appNames },\n                    },\n                });\n            }\n            break;\n        }\n        default:\n            // no-op\n            break;\n    }\n    return items;\n};\n\nconst getDownloadMessages = (controls: Controls): Array<MessageItem> => {\n    const items = [];\n    const { web, mobile, desktop } = getProp(controls, DOWNLOAD, {});\n\n    const downloadRestrictions = {\n        [WEB]: {\n            platform: WEB,\n            restrictions: web,\n        },\n        [MOBILE]: {\n            platform: MOBILE,\n            restrictions: mobile,\n        },\n        [DESKTOP]: {\n            platform: DESKTOP,\n            restrictions: desktop,\n        },\n    };\n\n    Object.keys(downloadRestrictions).forEach(platformKey => {\n        const { platform, restrictions } = downloadRestrictions[platformKey];\n\n        if (!restrictions) {\n            return;\n        }\n        const { restrictExternalUsers, restrictManagedUsers } = restrictions;\n\n        if (restrictManagedUsers && restrictExternalUsers) {\n            items.push({ message: downloadRestrictionsMessageMap[platform].externalRestricted[restrictManagedUsers] });\n        } else if (restrictManagedUsers) {\n            items.push({ message: downloadRestrictionsMessageMap[platform].externalAllowed[restrictManagedUsers] });\n        } else if (restrictExternalUsers) {\n            items.push({ message: downloadRestrictionsMessageMap[platform].externalRestricted.default });\n        }\n    });\n\n    return items;\n};\n\nconst getBoxSignRequestMessages = (controls: Controls): Array<MessageItem> => {\n    const isBoxSignRequestRestrictionEnabled = getProp(controls, `${BOX_SIGN_REQUEST}.enabled`, false);\n    const items = isBoxSignRequestRestrictionEnabled ? [{ message: messages.boxSignRequestRestricted }] : [];\n\n    return items;\n};\n\nconst getFullSecurityControlsMessages = (controls: Controls, maxAppCount?: number): Array<MessageItem> => {\n    const items = [\n        ...getSharedLinkMessages(controls),\n        ...getExternalCollabMessages(controls),\n        ...getDownloadMessages(controls),\n        ...getAppDownloadMessages(controls, maxAppCount),\n        ...getWatermarkingMessages(controls),\n        ...getBoxSignRequestMessages(controls),\n    ];\n    return items;\n};\n\nexport { getShortSecurityControlsMessage, getFullSecurityControlsMessages };\n","// @flow\nimport getProp from 'lodash/get';\n\nimport classificationColorsMap from './classificationColorsMap';\nimport { DEFAULT_CLASSIFICATION_COLOR_ID } from './constants';\n\nfunction getClassificationLabelColor(classificationLabelData?: ?{ colorID?: number }) {\n    const colorID = getProp(classificationLabelData, 'colorID', DEFAULT_CLASSIFICATION_COLOR_ID);\n    const { color } = classificationColorsMap[colorID] || classificationColorsMap[DEFAULT_CLASSIFICATION_COLOR_ID];\n\n    return color;\n}\n\nfunction getClassificationTinyconColor(classificationLabelData?: ?{ colorID?: number }) {\n    const colorID = getProp(classificationLabelData, 'colorID', DEFAULT_CLASSIFICATION_COLOR_ID);\n    const { tinycon } = classificationColorsMap[colorID] || classificationColorsMap[DEFAULT_CLASSIFICATION_COLOR_ID];\n\n    return tinycon;\n}\n\n// eslint-disable-next-line import/prefer-default-export\nexport { getClassificationLabelColor, getClassificationTinyconColor };\n","// @flow\nimport * as React from 'react';\nimport { injectIntl } from 'react-intl';\nimport TextareaAutosize from 'react-textarea-autosize';\n\nimport messages from './messages';\n\ntype Props = {\n    intl: Object,\n    onDescriptionChange: Function,\n    textAreaProps?: Object,\n    value?: string,\n};\n\ntype State = {\n    value: string,\n};\n\nclass EditableDescription extends React.PureComponent<Props, State> {\n    static defaultProps = {\n        textAreaProps: {},\n        value: '',\n    };\n\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            value: props.value || '',\n        };\n    }\n\n    componentDidUpdate({ value: prevValue }: Props): void {\n        const { value } = this.props;\n        if (prevValue !== value) {\n            this.setState({ value });\n        }\n    }\n\n    handleBlur = (): void => {\n        const { value } = this.state;\n        this.props.onDescriptionChange(value);\n    };\n\n    handleChange = (event: SyntheticEvent<HTMLTextAreaElement>): void => {\n        const { value } = event.currentTarget;\n        this.setState({ value });\n    };\n\n    render() {\n        const { intl, textAreaProps } = this.props;\n        const { value } = this.state;\n\n        return (\n            <TextareaAutosize\n                {...textAreaProps}\n                className=\"description-textarea\"\n                maxLength=\"255\"\n                maxRows={6}\n                onBlur={this.handleBlur}\n                onChange={this.handleChange}\n                placeholder={intl.formatMessage(messages.descriptionPlaceholder)}\n                value={value}\n            />\n        );\n    }\n}\n\nexport { EditableDescription as EditableDescriptionBase };\nexport default injectIntl(EditableDescription);\n","// @flow\nimport * as React from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\n\nimport TextInput from '../../components/text-input/TextInput';\nimport commonMessages from '../../common/messages';\n\nimport messages from './messages';\n\nconst VALUE_MISSING = 'valueMissing';\nconst TYPE_MISMATCH = 'typeMismatch';\n\nconst errorMap = {\n    [VALUE_MISSING]: <FormattedMessage {...commonMessages.requiredFieldError} />,\n    [TYPE_MISMATCH]: <FormattedMessage {...commonMessages.invalidURLError} />,\n};\n\ntype Props = {\n    intl: Object,\n    onValidURLChange: Function,\n    value: string,\n};\n\ntype State = {\n    error: '' | $Keys<typeof errorMap>,\n    value: string,\n};\n\nclass EditableURL extends React.Component<Props, State> {\n    state = {\n        error: '',\n        value: this.props.value,\n    };\n\n    componentDidUpdate({ value: prevValue }: Props) {\n        const { value } = this.props;\n        if (prevValue !== value) {\n            this.setState({ value });\n        }\n    }\n\n    inputEl: ?HTMLInputElement;\n\n    handleBlur = (): void => {\n        if (!this.inputEl) {\n            return;\n        }\n\n        const { valid, valueMissing } = this.inputEl.validity;\n        if (!valid) {\n            this.setState({\n                error: valueMissing ? VALUE_MISSING : TYPE_MISMATCH,\n            });\n            return;\n        }\n\n        this.props.onValidURLChange(this.state.value);\n    };\n\n    handleChange = (event: SyntheticEvent<HTMLInputElement>): void => {\n        this.setState({ value: event.currentTarget.value });\n    };\n\n    handleFocus = (): void => {\n        this.setState({ error: '' });\n    };\n\n    render() {\n        const {\n            intl: { formatMessage },\n        } = this.props;\n        const { error, value } = this.state;\n\n        return (\n            <TextInput\n                className=\"url-input\"\n                error={error ? errorMap[error] : undefined}\n                hideLabel\n                inputRef={ref => {\n                    this.inputEl = ref;\n                }}\n                isRequired\n                label={formatMessage(messages.url)}\n                onBlur={this.handleBlur}\n                onChange={this.handleChange}\n                onFocus={this.handleFocus}\n                placeholder={formatMessage(messages.urlPlaceholder)}\n                type=\"url\"\n                value={value}\n            />\n        );\n    }\n}\n\nexport { EditableURL as EditableURLBase, VALUE_MISSING, TYPE_MISMATCH };\nexport default injectIntl(EditableURL);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\n\nimport InlineNotice from '../../components/inline-notice';\n\nimport messages from './messages';\n\nconst FILE = 'file';\nconst FOLDER = 'folder';\nconst WEBLINK = 'web_link';\n\nconst ItemExpirationNotice = ({ expiration, itemType }) => {\n    let messageID = '';\n    switch (itemType) {\n        case FILE:\n            messageID = 'fileExpiration';\n            break;\n        case FOLDER:\n            messageID = 'folderExpiration';\n            break;\n        case WEBLINK:\n            messageID = 'bookmarkExpiration';\n            break;\n        // no default\n    }\n\n    return (\n        <InlineNotice>\n            <FormattedMessage {...messages[messageID]} values={{ expiration }} />\n        </InlineNotice>\n    );\n};\n\nItemExpirationNotice.propTypes = {\n    /** a localized, human-readable string/node representing the expiration date */\n    expiration: PropTypes.node.isRequired,\n    /** the type of the item */\n    itemType: PropTypes.oneOf([FILE, FOLDER, WEBLINK]).isRequired,\n};\n\nexport default ItemExpirationNotice;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport uniqueid from 'lodash/uniqueId';\nimport { FormattedDate, FormattedMessage } from 'react-intl';\n\nimport EditableDescription from './EditableDescription';\nimport EditableURL from './EditableURL';\nimport RetentionPolicy from './RetentionPolicy';\nimport ReadonlyDescription from './ReadonlyDescription';\nimport messages from './messages';\n\nimport './ItemProperties.scss';\n\nconst datetimeOptions = {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric',\n    hour: 'numeric',\n    minute: 'numeric',\n};\n\nconst ItemProperties = ({\n    createdAt,\n    description,\n    descriptionTextareaProps = {},\n    enterpriseOwner,\n    modifiedAt,\n    onDescriptionChange,\n    onValidURLChange,\n    owner,\n    retentionPolicyProps = {},\n    size,\n    trashedAt,\n    uploader,\n    url,\n}) => {\n    const descriptionId = uniqueid('description_');\n\n    return (\n        <dl className=\"item-properties\">\n            {description || onDescriptionChange ? (\n                <>\n                    <FormattedMessage {...messages.description}>\n                        {text => <dt id={descriptionId}>{text}</dt>}\n                    </FormattedMessage>\n                    <dd>\n                        {onDescriptionChange ? (\n                            <EditableDescription\n                                onDescriptionChange={onDescriptionChange}\n                                textAreaProps={{ ...descriptionTextareaProps, 'aria-labelledby': descriptionId }}\n                                value={description}\n                            />\n                        ) : (\n                            <ReadonlyDescription value={description} />\n                        )}\n                    </dd>\n                </>\n            ) : null}\n            {!!url && (\n                <>\n                    <FormattedMessage tagName=\"dt\" {...messages.url} />\n                    <dd>{onValidURLChange ? <EditableURL onValidURLChange={onValidURLChange} value={url} /> : url}</dd>\n                </>\n            )}\n            {owner ? (\n                <>\n                    <FormattedMessage tagName=\"dt\" {...messages.owner} />\n                    <dd>{owner}</dd>\n                </>\n            ) : null}\n            {enterpriseOwner ? (\n                <>\n                    <FormattedMessage tagName=\"dt\" {...messages.enterpriseOwner} />\n                    <dd>{enterpriseOwner}</dd>\n                </>\n            ) : null}\n            {uploader ? (\n                <>\n                    <FormattedMessage tagName=\"dt\" {...messages.uploader} />\n                    <dd>{uploader}</dd>\n                </>\n            ) : null}\n            {createdAt ? (\n                <>\n                    <FormattedMessage tagName=\"dt\" {...messages.created} />\n                    <dd>\n                        <FormattedDate value={new Date(createdAt)} {...datetimeOptions} />\n                    </dd>\n                </>\n            ) : null}\n            {modifiedAt ? (\n                <>\n                    <FormattedMessage tagName=\"dt\" {...messages.modified} />\n                    <dd>\n                        <FormattedDate value={new Date(modifiedAt)} {...datetimeOptions} />\n                    </dd>\n                </>\n            ) : null}\n            {size ? (\n                <>\n                    <FormattedMessage tagName=\"dt\" {...messages.size} />\n                    <dd>{size}</dd>\n                </>\n            ) : null}\n            {trashedAt ? (\n                <>\n                    <FormattedMessage tagName=\"dt\" {...messages.deleted} />\n                    <dd>\n                        <FormattedDate value={new Date(trashedAt)} {...datetimeOptions} />\n                    </dd>\n                </>\n            ) : null}\n            <RetentionPolicy {...retentionPolicyProps} />\n        </dl>\n    );\n};\n\nItemProperties.propTypes = {\n    /** the datetime this item was created, accepts any value that can be passed to the Date() constructor */\n    createdAt: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    /** a description for the item */\n    description: PropTypes.string,\n    /** props for the editable description textarea */\n    descriptionTextareaProps: PropTypes.object,\n    /** the name of the item's enterprise owner if the item is owned by a different enterprise */\n    enterpriseOwner: PropTypes.string,\n    /** the datetime this item was last modified, accepts any value that can be passed to the Date() constructor */\n    modifiedAt: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    /** function called on description textarea blur with the new value to save */\n    onDescriptionChange: PropTypes.func,\n    /** function called on url input blur with the new value to save */\n    onValidURLChange: PropTypes.func,\n    /** the name of the item's owner */\n    owner: PropTypes.string,\n    /** props for the retention policy of this item */\n    retentionPolicyProps: PropTypes.object,\n    /** use the getFileSize util to get a localized human-readable string from the number of bytes */\n    size: PropTypes.string,\n    /** the datetime this item was deleted or moved to trash, accepts any value that can be passed to the Date() constructor */\n    trashedAt: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    /** the name of the user who uploaded this item */\n    uploader: PropTypes.string,\n    /** the URL for the item when the item is a weblink */\n    url: PropTypes.string,\n};\n\nexport default ItemProperties;\n","// extracted by mini-css-extract-plugin","import React from 'react';\nimport PropTypes from 'prop-types';\nimport processString from 'react-process-string';\n\nconst NEWLINE_REGEX = /(\\r\\n|\\n\\r|\\n|\\r)/g;\n// eslint-disable-next-line no-useless-escape\nconst URL_REGEX = /\\b(ht|f)tps?:\\/\\/[\\w\\._\\-]+(:\\d+)?(\\/[\\w\\-_\\.~\\+\\/#\\?&%=:\\[\\]@!\\$'\\(\\)\\*;,]*)?/gim;\n\nconst ReadonlyDescription = ({ value }) =>\n    processString([\n        {\n            regex: NEWLINE_REGEX,\n            // eslint-disable-next-line react/display-name\n            fn: key => <br key={key} />,\n        },\n        {\n            regex: URL_REGEX,\n            // eslint-disable-next-line react/display-name\n            fn: (key, result) => (\n                <a key={key} href={result[0]} rel=\"noopener noreferrer\" target=\"_blank\">\n                    {result[0]}\n                </a>\n            ),\n        },\n    ])(value);\n\nReadonlyDescription.propTypes = {\n    value: PropTypes.string,\n};\n\nexport default ReadonlyDescription;\n","/* @flow */\nimport * as React from 'react';\nimport { FormattedDate, FormattedMessage } from 'react-intl';\n\nimport PlainButton from '../../components/plain-button';\n\nimport messages from './messages';\n\nconst datetimeOptions = {\n    day: 'numeric',\n    month: 'short',\n    year: 'numeric',\n};\n\ntype Props = {\n    dispositionTime?: number,\n    openModal?: Function,\n    policyType?: string,\n    retentionPolicyDescription?: string,\n};\n\nconst RetentionPolicy = ({ dispositionTime, openModal, policyType, retentionPolicyDescription }: Props) => {\n    if (!retentionPolicyDescription) {\n        return null;\n    }\n\n    return (\n        <>\n            <FormattedMessage tagName=\"dt\" {...messages.retentionPolicyDescription} />\n            <dd>{retentionPolicyDescription}</dd>\n            {policyType !== 'indefinite' ? (\n                <>\n                    <FormattedMessage tagName=\"dt\" {...messages.retentionPolicyExpiration} />\n                    {dispositionTime ? (\n                        <dd>\n                            <FormattedDate value={new Date(dispositionTime)} {...datetimeOptions} />\n                            {openModal ? (\n                                <PlainButton className=\"lnk bdl-RetentionLink\" onClick={openModal}>\n                                    <FormattedMessage {...messages.retentionPolicyExtend} />\n                                </PlainButton>\n                            ) : null}\n                        </dd>\n                    ) : null}\n                </>\n            ) : null}\n        </>\n    );\n};\n\nexport default RetentionPolicy;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\n\nimport InlineNotice from '../../components/inline-notice';\n\nimport messages from './messages';\n\nconst SharedLinkExpirationNotice = ({ expiration }) => (\n    <InlineNotice>\n        <FormattedMessage {...messages.sharedLinkExpiration} values={{ expiration }} />\n    </InlineNotice>\n);\n\nSharedLinkExpirationNotice.propTypes = {\n    /** a localized, human-readable string/node representing the expiration date */\n    expiration: PropTypes.node.isRequired,\n};\n\nexport default SharedLinkExpirationNotice;\n","// @flow\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { FormattedMessage } from 'react-intl';\n\nimport PlainButton from '../../components/plain-button';\n\nimport messages from './messages';\n\ntype Props = {\n    className: string,\n    /** the number of saved versions that exist for this item, should be 2 or more */\n    onClick?: Function,\n    versionCount: number,\n};\n\nconst VersionHistoryLink = ({ className, versionCount, onClick, ...rest }: Props) => {\n    const formattedMessageComponent = <FormattedMessage {...messages.savedVersions} values={{ versionCount }} />;\n\n    // Only render it as a link if there is an onClick\n    if (onClick) {\n        return (\n            <PlainButton className={classNames('lnk', className)} onClick={onClick} {...rest}>\n                {formattedMessageComponent}\n            </PlainButton>\n        );\n    }\n\n    return <div className={className}>{formattedMessageComponent}</div>;\n};\n\nVersionHistoryLink.defaultProps = {\n    className: '',\n};\n\nexport default VersionHistoryLink;\n","// @flow\nimport { defineMessages } from 'react-intl';\n\nconst messages = defineMessages({\n    bookmarkExpiration: {\n        defaultMessage: 'This bookmark will be deleted on {expiration}.',\n        description:\n            'Warning message in the sidebar that this bookmark will be automatically deleted on a certain date, {expiration} is the date',\n        id: 'boxui.itemDetails.bookmarkExpiration',\n    },\n    created: {\n        defaultMessage: 'Created',\n        description: 'Label for created date under item properties in the sidebar',\n        id: 'boxui.itemDetails.created',\n    },\n    deleted: {\n        defaultMessage: 'Deleted',\n        description: 'Label for deletion date under item properties in the sidebar',\n        id: 'boxui.itemDetails.deleted',\n    },\n    description: {\n        defaultMessage: 'Description',\n        description: 'Label for description under item properties in the sidebar',\n        id: 'boxui.itemDetails.description',\n    },\n    descriptionPlaceholder: {\n        defaultMessage: 'Enter a description',\n        description: 'Placeholder for textarea to enter a description under item properties in the sidebar',\n        id: 'boxui.itemDetails.descriptionPlaceholder',\n    },\n    enterpriseOwner: {\n        defaultMessage: 'Enterprise Owner',\n        description: 'Label for name of enterprise owner under item properties in the sidebar',\n        id: 'boxui.itemDetails.enterpriseOwner',\n    },\n    fileExpiration: {\n        defaultMessage: 'This file will be deleted on {expiration}.',\n        description:\n            'Warning message in the sidebar that this file will be automatically deleted on a certain date, {expiration} is the date',\n        id: 'boxui.itemDetails.fileExpiration',\n    },\n    folderExpiration: {\n        defaultMessage: 'This folder will be deleted on {expiration}.',\n        description:\n            'Warning message in the sidebar that this folder will be automatically deleted on a certain date, {expiration} is the date',\n        id: 'boxui.itemDetails.folderExpiration',\n    },\n    modified: {\n        defaultMessage: 'Modified',\n        description: 'Label for modified date under item properties in the sidebar',\n        id: 'boxui.itemDetails.modified',\n    },\n    owner: {\n        defaultMessage: 'Owner',\n        description: 'Label for name of owner under item properties in the sidebar',\n        id: 'boxui.itemDetails.owner',\n    },\n    retentionPolicyDescription: {\n        defaultMessage: 'Policy',\n        description: 'Label for description of the retention policy under item properties in the sidebar',\n        id: 'boxui.itemDetails.retentionPolicyDescription',\n    },\n    retentionPolicyExpiration: {\n        defaultMessage: 'Policy Expiration',\n        description: 'Label for the expiration date of the retention policy under item properties in the sidebar',\n        id: 'boxui.itemDetails.retentionPolicyExpiration',\n    },\n    retentionPolicyExtend: {\n        defaultMessage: 'Extend',\n        description:\n            'Button to extend the expiration date of the retention policy under item properties in the sidebar',\n        id: 'boxui.itemDetails.retentionPolicyExtend',\n    },\n    savedVersions: {\n        defaultMessage: '{versionCount, number} Saved Versions',\n        description:\n            'Text for button in the sidebar to open the version history popup, {versionCount} is the number of saved file versions',\n        id: 'boxui.itemDetails.savedVersions',\n    },\n    sharedLinkExpiration: {\n        defaultMessage: 'This shared link will be disabled on {expiration}.',\n        description:\n            'Warning message in the sidebar that this shared link will expire on a certain date, {expiration} is the date',\n        id: 'boxui.itemDetails.sharedLinkExpiration',\n    },\n    size: {\n        defaultMessage: 'Size',\n        description: 'Label for human-readable filesize under item properties in the sidebar',\n        id: 'boxui.itemDetails.size',\n    },\n    uploader: {\n        defaultMessage: 'Uploader',\n        description: 'Label for name of uploader under item properties in the sidebar',\n        id: 'boxui.itemDetails.uploader',\n    },\n    url: {\n        defaultMessage: 'URL',\n        description: 'Label for a weblink url under item properties in the sidebar',\n        id: 'boxui.itemDetails.url',\n    },\n    urlPlaceholder: {\n        defaultMessage: 'Enter a valid url',\n        description: 'Placeholder for a weblink url text area in the right sidebar',\n        id: 'boxui.itemDetails.urlPlaceholder',\n    },\n});\n\nexport default messages;\n","// @flow\nimport * as React from 'react';\nimport classNames from 'classnames';\n\nimport IconAlertDefault from '../../icons/general/IconAlertDefault';\nimport { bdlYellow50 } from '../../styles/variables';\nimport './SecurityBadge.scss';\n\ntype Props = {\n    className?: string,\n    color?: string,\n    icon?: React.Node,\n    message: React.Node,\n    strokeColor?: string,\n};\n\nconst SecurityBadge = ({ className, color, icon, message, ...rest }: Props) => (\n    <h1 className={classNames('bdl-SecurityBadge', className)} style={{ backgroundColor: color }} {...rest}>\n        {icon}\n        <span className=\"bdl-SecurityBadge-name\">{message}</span>\n    </h1>\n);\n\nSecurityBadge.defaultProps = {\n    icon: <IconAlertDefault color={bdlYellow50} height={22} width={22} strokeWidth={3} />,\n};\n\nexport default SecurityBadge;\n","// extracted by mini-css-extract-plugin","// @flow\nexport { default } from './SecurityBadge';\n","import * as React from 'react';\n\nimport AccessibleSVG from '../accessible-svg';\n\nimport { Icon } from '../iconTypes';\n\nconst IconComment = ({ className = '', color = '#000000', height = 11, title, width = 11 }: Icon) => (\n    <AccessibleSVG\n        className={`icon-comment ${className}`}\n        height={height}\n        title={title}\n        viewBox=\"0 0 11 11\"\n        width={width}\n    >\n        <path\n            className=\"fill-color\"\n            d=\"M9.556.932H1.492C.938.932.49 1.386.49 1.94l-.006 9.072L2.5 8.996h7.056c.554 0 1.008-.454 1.008-1.008V1.94c0-.554-.454-1.008-1.008-1.008zM2.5 4.46h6.048v1.008H2.5V4.46zm4.032 2.52H2.5V5.972h4.032V6.98zm2.016-3.024H2.5V2.948h6.048v1.008z\"\n            fill={color}\n        />\n    </AccessibleSVG>\n);\n\nexport default IconComment;\n","import * as React from 'react';\n\nimport AccessibleSVG from '../accessible-svg';\n\nimport { Icon } from '../iconTypes';\n\nconst IconDownloadSolid = ({ className = '', color = '#000000', height = 10, title, width = 10 }: Icon) => (\n    <AccessibleSVG\n        className={`icon-download-solid ${className}`}\n        height={height}\n        title={title}\n        viewBox=\"0 0 10 10\"\n        width={width}\n    >\n        <path\n            className=\"fill-color\"\n            d=\"M9.658 4.304H7.143V.634h-3.77v3.67H.857l4.4 4.283 4.4-4.283zM.858 9.81v1.224h8.8V9.81h-8.8z\"\n            fill={color}\n        />\n    </AccessibleSVG>\n);\n\nexport default IconDownloadSolid;\n","import * as React from 'react';\n\nimport AccessibleSVG from '../accessible-svg';\n\nimport { Icon } from '../iconTypes';\n\nconst IconEye = ({ className = '', color = '#000000', height = 11, title, width = 15 }: Icon) => (\n    <AccessibleSVG className={`icon-eye ${className}`} height={height} title={title} viewBox=\"0 0 15 11\" width={width}>\n        <path\n            className=\"fill-color\"\n            d=\"M.118 5.857C1.233 8.855 3.986 10.98 7.21 10.98c3.223 0 5.976-2.125 7.09-5.123C13.187 2.86 10.434.735 7.21.735 3.986.735 1.233 2.86.118 5.857zM7.21 9.27c-1.78 0-3.224-1.528-3.224-3.413 0-1.885 1.444-3.414 3.224-3.414 1.78 0 3.223 1.53 3.223 3.414 0 1.885-1.444 3.414-3.223 3.414zm0-5.462c-1.07 0-1.935.915-1.935 2.05 0 1.133.864 2.048 1.935 2.048 1.07 0 1.934-.915 1.934-2.05 0-1.133-.864-2.048-1.934-2.048z\"\n            fill={color}\n        />\n    </AccessibleSVG>\n);\n\nexport default IconEye;\n","import * as React from 'react';\n\nimport AccessibleSVG from '../accessible-svg';\n\nimport { Icon } from '../iconTypes';\n\nconst IconPencilSolid = ({ className = '', color = '#000000', height = 10, title, width = 10 }: Icon) => (\n    <AccessibleSVG\n        className={`icon-pencil-solid ${className}`}\n        height={height}\n        title={title}\n        viewBox=\"0 0 10 10\"\n        width={width}\n    >\n        <path\n            className=\"fill-color\"\n            d=\"M.5 7.625V9.5h1.875l5.53-5.53-1.876-1.874L.5 7.626zM9.354 2.52c.195-.194.195-.51 0-.704L8.184.646C7.99.45 7.674.45 7.48.646l-.916.915L8.44 3.437l.914-.915z\"\n            fill={color}\n        />\n    </AccessibleSVG>\n);\n\nexport default IconPencilSolid;\n","import * as React from 'react';\nimport classNames from 'classnames';\n\nimport AccessibleSVG from '../accessible-svg';\nimport { bdlGray } from '../../styles/variables';\nimport { Icon } from '../iconTypes';\n\n// TODO - Move this icon to the Asset repo. P Paul 5/2020\nconst IconSecurityClassification = ({ className = '', height = 12, color = bdlGray, title, width = 12 }: Icon) => {\n    const classes = classNames('bdl-IconSecurityClassification', className);\n\n    return (\n        <AccessibleSVG className={classes} height={height} title={title} viewBox=\"0 0 12 12\" width={width}>\n            <path\n                d=\"M6 0l4.875 2.438v2.856c0 2.645-2.309 5.792-4.79 6.366L6 11.68l-.084-.02c-2.482-.574-4.791-3.721-4.791-6.366V2.438L6 0zm0 .839L1.875 2.9v2.393c0 2.276 2.026 5.068 4.125 5.614 2.1-.546 4.125-3.338 4.125-5.614V2.901L6 .839zm2.25 2.58c.207 0 .375.168.375.375v3c0 .207-.168.375-.375.375s-.375-.168-.375-.375v-3c0-.207.168-.375.375-.375z\"\n                fill={color}\n                fillRule=\"evenodd\"\n            />\n        </AccessibleSVG>\n    );\n};\n\nexport default IconSecurityClassification;\n","/**\n * @flow\n * @file File for some simple environment-related utilities\n * @author Box\n */\n\n/**\n * Return true if we are currently running in a test or development\n * environment.\n *\n * @return {boolean} true if we are running in a test or dev environment\n */\nexport default function isDevEnvironment() {\n    return process && process.env && (process.env.NODE_ENV === 'test' || process.env.NODE_ENV === 'dev');\n}\n","import filesize from 'filesize';\n\nconst defaultDigitalUnits = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\nconst bcp47TagToDigitalUnits = {\n    fi: ['t', 'kt', 'Mt', 'Gt', 'Tt', 'Pt', 'Et', 'Zt', 'Yt'],\n    fr: ['o', 'Ko', 'Mo', 'Go', 'To', 'Po', 'Eo', 'Zo', 'Yo'],\n    ru: ['Б', 'КБ', 'МБ', 'ГБ', 'ТБ', 'ПБ', 'ЭБ', 'ЗБ', 'ЙБ'],\n};\n\n/**\n * Formats a file size from number of bytes to a human-readable, localized string.\n * @param {number} size Number of bytes\n * @param {string} [locale] Optional locale, defaults to 'en'\n * @returns {string} The size as a localized string\n */\nconst getFileSize = (size, locale = 'en') => {\n    const settings = { round: 1, locale };\n\n    const localizedUnits = bcp47TagToDigitalUnits[locale];\n    if (localizedUnits) {\n        // map default units to localized units, ex. { B: Б, KB: КБ, ... }\n        settings.symbols = defaultDigitalUnits.reduce((symbols, unit, index) => {\n            symbols[unit] = localizedUnits[index];\n            return symbols;\n        }, {});\n    }\n\n    return filesize(size, settings);\n};\n\nexport default getFileSize;\n"],"sourceRoot":""}