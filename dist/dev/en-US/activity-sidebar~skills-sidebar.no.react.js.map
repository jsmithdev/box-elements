{"version":3,"sources":["webpack:///./src/components/avatar/Avatar.scss","webpack:///./src/components/avatar/Avatar.tsx","webpack:///./src/components/avatar/AvatarImage.tsx","webpack:///./src/components/avatar/AvatarInitials.tsx","webpack:///./src/components/avatar/UnknownUserAvatar.tsx","webpack:///./src/components/avatar/index.ts","webpack:///./src/components/badgeable/Badgeable.scss","webpack:///./src/components/badgeable/Badgeable.tsx","webpack:///./src/components/badgeable/index.ts","webpack:///./src/components/label-pill/LabelPill.scss","webpack:///./src/components/label-pill/LabelPill.tsx","webpack:///./src/components/label-pill/LabelPillIcon.tsx","webpack:///./src/components/label-pill/LabelPillText.tsx","webpack:///./src/components/label-pill/index.ts","webpack:///./src/components/pill-selector-dropdown/Pill.js","webpack:///./src/components/pill-selector-dropdown/PillSelector.js","webpack:///./src/components/pill-selector-dropdown/RoundPill.js","webpack:///./src/components/pill-selector-dropdown/RoundPill.scss","webpack:///./src/components/pill-selector-dropdown/SuggestedPill.js","webpack:///./src/components/pill-selector-dropdown/SuggestedPillsRow.js","webpack:///./src/components/pill-selector-dropdown/SuggestedPillsRow.scss","webpack:///./src/icon/fill/GlobeBadge16.tsx"],"names":["SIZES","small","large","Avatar","avatarUrl","className","name","id","isExternal","shouldShowExternal","size","hasImageErrored","setHasImageErrored","React","prevAvatarUrl","setPrevAvatarUrl","classes","classNames","avatar","undefined","AvatarImage","url","onError","event","getInitials","cleanedName","replace","trim","firstInitial","slice","lastInitial","lastIndexOf","toUpperCase","AvatarInitials","avatarColorSelector","parseInt","backgroundColorIndex","avatarColors","length","UnknownUserAvatar","height","title","width","vars","Badgeable","props","children","topLeft","topRight","bottomLeft","bottomRight","classnames","LabelPillStatus","LabelPillSize","LabelPillContainer","ref","type","DEFAULT","REGULAR","rest","labelPillClasses","startCase","displayName","LabelPill","Pill","Text","LabelPillText","Icon","LabelPillIcon","Component","isDisabled","isSelected","isValid","onRemove","text","styles","onClick","noop","stopDefaultEvent","preventDefault","stopPropagation","PillSelector","isFocused","selectedIndex","selectedOptions","key","map","option","inputEl","focus","setState","inputValue","value","numPills","getNumSelected","state","KEYS","backspace","index","resetSelectedIndex","selectedOption","get","arrowLeft","Math","max","hiddenEl","arrowRight","uniqueId","render","allowInvalidPills","disabled","error","getPillClassName","getPillImageUrl","inputProps","onInput","onSuggestedPillAdd","placeholder","showAvatars","showRoundedPills","suggestedPillsData","suggestedPillsFilter","suggestedPillsTitle","validator","suggestedPillsEnabled","hasError","ariaAttrs","errorMessageID","handleBlur","handleClick","handleFocus","handleKeyDown","bind","displayText","hasWarning","isExternalUser","hiddenRef","input","getPillsByKey","RemoveButton","RoundPill","PureComponent","isMounted","getAvatarUrl","Promise","resolve","then","getAvatarUrlHandler","catch","componentDidMount","componentWillUnmount","showAvatar","getStyles","handleClickRemove","SuggestedPill","email","onAdd","addSuggestedPill","handleKeyPress","enter","SuggestedPillsRow","selectedPillsValues","filteredSuggestedPillData","filter","item","includes","GlobeBadge16"],"mappings":"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","file":"activity-sidebar~skills-sidebar.no.react.js","sourcesContent":["// extracted by mini-css-extract-plugin","import * as React from 'react';\nimport classNames from 'classnames';\nimport Badgeable from '../badgeable';\nimport AvatarImage from './AvatarImage';\nimport AvatarInitials from './AvatarInitials';\nimport UnknownUserAvatar from './UnknownUserAvatar';\nimport GlobeBadge16 from '../../icon/fill/GlobeBadge16';\n\nimport './Avatar.scss';\n\nconst SIZES = { small: true, large: true };\n\nexport interface AvatarProps {\n    /**\n     * Url to avatar image.  If passed in, component will render the avatar image instead of the initials\n     *\n     * Required if \"name\" is not specified.\n     */\n    avatarUrl?: string | null;\n    /** classname to add to the container element. */\n    className?: string;\n    /** Users id */\n    id?: string | number | null;\n    /** Whether this avatar should be labeled as external in the current context */\n    isExternal?: boolean;\n    /**\n     * Users full name.\n     *\n     * Required if \"avatarUrl\" is not specified.\n     */\n    name?: string | null;\n    /** Show the external avatar marker if the avatar is marked as for an external user */\n    shouldShowExternal?: boolean;\n    /* avatar size (enum) */\n    size?: keyof typeof SIZES | '';\n}\n\nfunction Avatar({ avatarUrl, className, name, id, isExternal, shouldShowExternal = false, size = '' }: AvatarProps) {\n    const [hasImageErrored, setHasImageErrored] = React.useState<boolean>(false);\n    const [prevAvatarUrl, setPrevAvatarUrl] = React.useState<AvatarProps['avatarUrl']>(null);\n\n    const classes = classNames([\n        'avatar',\n        className,\n        { [`avatar--${size}`]: size && SIZES[size], 'avatar--isExternal': shouldShowExternal && isExternal },\n    ]);\n\n    // Reset hasImageErrored state when avatarUrl changes\n    if (avatarUrl !== prevAvatarUrl) {\n        setHasImageErrored(false);\n        setPrevAvatarUrl(avatarUrl);\n    }\n\n    let avatar;\n    if (avatarUrl && !hasImageErrored) {\n        avatar = (\n            <AvatarImage\n                onError={() => {\n                    setHasImageErrored(true);\n                }}\n                url={avatarUrl}\n            />\n        );\n    } else if (name) {\n        avatar = <AvatarInitials id={id} name={name} />;\n    } else {\n        avatar = <UnknownUserAvatar className=\"avatar-icon\" />;\n    }\n\n    return (\n        <Badgeable\n            className={classes}\n            bottomRight={\n                shouldShowExternal && isExternal ? <GlobeBadge16 className=\"bdl-Avatar-externalBadge\" /> : undefined\n            }\n        >\n            <span>{avatar}</span>\n        </Badgeable>\n    );\n}\n\nexport default Avatar;\n","import * as React from 'react';\n\nexport interface AvatarImageProps {\n    className?: string;\n    onError?: Function;\n    url: string;\n}\n\nconst AvatarImage = ({ className = '', url, onError }: AvatarImageProps) => (\n    <img\n        alt=\"\"\n        className={`avatar-image ${className}`}\n        onError={event => {\n            if (typeof onError === 'function') {\n                onError(event);\n            }\n        }}\n        src={url}\n    />\n);\n\nexport default AvatarImage;\n","import * as React from 'react';\nimport { avatarColors } from '../../styles/variables';\n\nconst getInitials = (name: string) => {\n    // Remove any bracketed text from the user name\n    const cleanedName = name.replace(/[[({<]+.*[\\])}>]+/g, '').trim();\n    const firstInitial = cleanedName.slice(0, 1);\n    const lastInitial = cleanedName.slice(cleanedName.lastIndexOf(' ') + 1, cleanedName.lastIndexOf(' ') + 2);\n    return (firstInitial + lastInitial).toUpperCase();\n};\n\nexport interface AvatarInitialsProps {\n    className?: string;\n    id?: string | number | null;\n    name: string;\n}\n\nconst AvatarInitials = ({ className = '', id = 0, name }: AvatarInitialsProps) => {\n    const avatarColorSelector = parseInt(id as string, 10) || 0;\n    const backgroundColorIndex = avatarColorSelector % avatarColors.length;\n\n    return (\n        <span className={`avatar-initials ${className}`} data-bg-idx={backgroundColorIndex}>\n            {getInitials(name)}\n        </span>\n    );\n};\n\nexport default AvatarInitials;\n","import * as React from 'react';\nimport AccessibleSVG, { SVGProps } from '../accessible-svg/AccessibleSVG';\nimport * as vars from '../../styles/variables';\n\nconst UnknownUserAvatar = ({ className = '', height = 28, title, width = 28 }: SVGProps) => (\n    <AccessibleSVG\n        className={`unknown-user-avatar ${className}`}\n        height={height}\n        title={title}\n        viewBox=\"0 0 16 16\"\n        width={width}\n    >\n        <path\n            fill={vars.bdlGray50}\n            fillRule=\"evenodd\"\n            d=\"M8 0a8 8 0 110 16A8 8 0 018 0zm0 9.5c-1.21 0-2.293.413-3.232 1.096-.56.407-.953.817-1.168 1.104a.5.5 0 00.8.6c.035-.047.114-.141.234-.267.205-.214.447-.428.722-.629.78-.567 1.665-.904 2.644-.904.979 0 1.865.337 2.644.904.275.2.517.415.722.63.12.125.199.219.234.266a.5.5 0 00.8-.6c-.215-.287-.607-.697-1.168-1.104C10.293 9.913 9.21 9.5 8 9.5zm0-6a2.5 2.5 0 000 5 2.5 2.5 0 000-5zm0 1a1.5 1.5 0 11-.001 3.001A1.5 1.5 0 018 4.5z\"\n        />\n    </AccessibleSVG>\n);\n\nexport default UnknownUserAvatar;\n","export { default as AvatarImage } from './AvatarImage';\nexport { default as AvatarInitials } from './AvatarInitials';\nexport { default as UnknownUserAvatar } from './UnknownUserAvatar';\nexport { default } from './Avatar';\n","// extracted by mini-css-extract-plugin","import * as React from 'react';\nimport classnames from 'classnames';\n\nimport './Badgeable.scss';\n\ntype Props = {\n    /** Component to render when badging the bottom left corner of the rendered container */\n    bottomLeft?: React.ReactNode;\n    /** Component to render when badging the bottom right corner of the rendered container */\n    bottomRight?: React.ReactNode;\n    /** the item(s) to receive the badge */\n    children: React.ReactNode;\n    className?: string;\n    /** Component to render when badging the top left corner of the rendered container */\n    topLeft?: React.ReactNode;\n    /** Component to render when badging the top right corner of the rendered container */\n    topRight?: React.ReactNode;\n};\n\nconst Badgeable = (props: Props) => {\n    const { children, className = '', topLeft = null, topRight = null, bottomLeft = null, bottomRight = null } = props;\n\n    return (\n        <div className={classnames('badgeable-container', className)}>\n            {children}\n            <div className=\"badges\">\n                {topLeft && <div className=\"top-left-badge\">{topLeft}</div>}\n                {topRight && <div className=\"top-right-badge\">{topRight}</div>}\n                {bottomLeft && <div className=\"bottom-left-badge\">{bottomLeft}</div>}\n                {bottomRight && <div className=\"bottom-right-badge\">{bottomRight}</div>}\n            </div>\n        </div>\n    );\n};\n\nexport default Badgeable;\n","export { default } from './Badgeable';\n","// extracted by mini-css-extract-plugin","import * as React from 'react';\nimport classNames from 'classnames';\nimport startCase from 'lodash/startCase';\nimport LabelPillIcon from './LabelPillIcon';\nimport LabelPillText from './LabelPillText';\n\nimport './LabelPill.scss';\n\nexport enum LabelPillStatus {\n    DEFAULT = 'default',\n    INFO = 'info',\n    FTUX = 'ftux',\n    HIGHLIGHT = 'highlight',\n    SUCCESS = 'success',\n    WARNING = 'warning',\n    ALERT = 'alert',\n    ERROR = 'error',\n}\n\nexport enum LabelPillSize {\n    REGULAR = 'regular',\n    LARGE = 'large',\n}\n\nexport interface LabelPillProps {\n    /** Content, wrapped in either LabelPill.Text or LabelPill.Icon */\n    children: Array<React.ReactChild> | React.ReactChild;\n    /** Type of pill */\n    type?: LabelPillStatus;\n    /** Size of pill */\n    size?: LabelPillSize;\n    /** Additional CSS classname(s) */\n    className?: string;\n}\n\nconst LabelPillContainer = React.forwardRef((props: LabelPillProps, ref: React.Ref<HTMLSpanElement>) => {\n    const { children, type = LabelPillStatus.DEFAULT, size = LabelPillSize.REGULAR, className, ...rest } = props;\n    const labelPillClasses = classNames(\n        'bdl-LabelPill',\n        `bdl-LabelPill--${type}`,\n        `bdl-LabelPill--size${startCase(size)}`,\n        className,\n    );\n    return (\n        <span ref={ref} className={labelPillClasses} {...rest}>\n            {children}\n        </span>\n    );\n});\n\nLabelPillContainer.displayName = 'LabelPill';\n\nconst LabelPill = {\n    Pill: LabelPillContainer,\n    Text: LabelPillText,\n    Icon: LabelPillIcon,\n};\n\nexport default LabelPill;\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { SVGProps } from '../../components/accessible-svg/AccessibleSVG';\n\nexport interface LabelPillIconProps {\n    /** Icon component */\n    Component: React.FunctionComponent<SVGProps>;\n    /** Additional CSS classname(s) */\n    className?: string;\n}\n\nconst LabelPillIcon = ({ Component, className, ...rest }: LabelPillIconProps) => (\n    <Component className={classNames('bdl-LabelPill-iconContent', className)} width={12} height={12} {...rest} />\n);\n\nexport default LabelPillIcon;\n","import * as React from 'react';\nimport classNames from 'classnames';\n\nexport interface LabelPillTextProps {\n    /** Text content, ie string or FormattedMessage */\n    children: React.ReactChild;\n    /** Additional CSS classname(s) */\n    className?: string;\n}\n\nconst LabelPillText = ({ children, className, ...rest }: LabelPillTextProps) => (\n    <span className={classNames('bdl-LabelPill-textContent', className)} {...rest}>\n        {children}\n    </span>\n);\n\nexport default LabelPillText;\n","export { default, LabelPillStatus } from './LabelPill';\n","// @flow\nimport React from 'react';\nimport noop from 'lodash/noop';\nimport classNames from 'classnames';\n\ntype Props = {\n    isDisabled?: boolean,\n    isSelected?: boolean,\n    isValid?: boolean,\n    onRemove: Function,\n    text: string,\n};\n\nconst Pill = ({ isDisabled = false, isSelected = false, isValid = true, onRemove, text }: Props) => {\n    const styles = classNames('bdl-Pill', 'pill', {\n        'is-selected': isSelected && !isDisabled,\n        'is-invalid': !isValid,\n        'is-disabled': isDisabled,\n        'bdl-is-disabled': isDisabled,\n    });\n    const onClick = isDisabled ? noop : onRemove;\n\n    return (\n        <span className={styles}>\n            <span className=\"bdl-Pill-text pill-text\">{text}</span>\n            <span aria-hidden=\"true\" className=\"close-btn\" onClick={onClick}>\n                ✕\n            </span>\n        </span>\n    );\n};\n\nexport default Pill;\n","// @flow\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport uniqueId from 'lodash/uniqueId';\nimport { List } from 'immutable';\n\nimport Tooltip from '../tooltip';\nimport { KEYS } from '../../constants';\n\nimport RoundPill from './RoundPill';\nimport Pill from './Pill';\nimport SuggestedPillsRow from './SuggestedPillsRow';\nimport type { RoundOption, Option, OptionValue, SuggestedPillsFilter } from './flowTypes';\n\nfunction stopDefaultEvent(event) {\n    event.preventDefault();\n    event.stopPropagation();\n}\n\ntype Props = {\n    allowInvalidPills: boolean,\n    className?: string,\n    disabled?: boolean,\n    error?: React.Node,\n    /** Called on pill render to get a specific class name to use for a particular option. Note: Only has effect when showRoundedPills is true. */\n    getPillClassName?: (option: Option) => string,\n    /** Function to retrieve the image URL associated with a pill */\n    getPillImageUrl?: (data: { id: string | number, [key: string]: any }) => string,\n    inputProps: Object,\n    onInput: Function,\n    onRemove: Function,\n    onSuggestedPillAdd?: Function,\n    placeholder: string,\n    selectedOptions: Array<Object> | List<Object>,\n    /** Whether to show avatars in pills (if rounded style is enabled) */\n    showAvatars?: boolean,\n    /** Whether to use rounded style for pills */\n    showRoundedPills?: boolean,\n    suggestedPillsData?: Array<Object>,\n    suggestedPillsFilter?: SuggestedPillsFilter,\n    suggestedPillsTitle?: string,\n    validator: (option: Option | OptionValue) => boolean,\n};\n\ntype State = {\n    isFocused: boolean,\n    selectedIndex: number,\n};\n\nclass PillSelector extends React.Component<Props, State> {\n    static defaultProps = {\n        allowInvalidPills: false,\n        disabled: false,\n        error: '',\n        inputProps: {},\n        placeholder: '',\n        selectedOptions: [],\n        validator: () => true,\n    };\n\n    state = {\n        isFocused: false,\n        selectedIndex: -1,\n    };\n\n    getNumSelected = (): number => {\n        const { selectedOptions } = this.props;\n\n        return typeof selectedOptions.size === 'number' ? selectedOptions.size : selectedOptions.length;\n    };\n\n    getPillsByKey = (key: string): Array<any> => {\n        const { selectedOptions } = this.props;\n\n        return selectedOptions.map(option => option[key]);\n    };\n\n    inputEl: HTMLInputElement;\n\n    handleClick = () => {\n        this.inputEl.focus();\n    };\n\n    handleFocus = () => {\n        this.setState({ isFocused: true });\n    };\n\n    handleBlur = () => {\n        this.setState({ isFocused: false });\n    };\n\n    hiddenEl: HTMLSpanElement;\n\n    handleKeyDown = (event: SyntheticKeyboardEvent<>) => {\n        const inputValue = this.inputEl.value;\n        const numPills = this.getNumSelected();\n        const { selectedIndex } = this.state;\n\n        switch (event.key) {\n            case KEYS.backspace: {\n                let index = -1;\n                if (selectedIndex >= 0) {\n                    // remove selected pill\n                    index = selectedIndex;\n                    this.resetSelectedIndex();\n                    this.inputEl.focus();\n                } else if (inputValue === '') {\n                    // remove last pill\n                    index = numPills - 1;\n                }\n                if (index >= 0) {\n                    const { onRemove, selectedOptions } = this.props;\n                    const selectedOption =\n                        // $FlowFixMe\n                        typeof selectedOptions.get === 'function' ? selectedOptions.get(index) : selectedOptions[index];\n                    onRemove(selectedOption, index);\n                    stopDefaultEvent(event);\n                }\n                break;\n            }\n            case KEYS.arrowLeft:\n                if (selectedIndex >= 0) {\n                    // select previous pill\n                    this.setState({\n                        selectedIndex: Math.max(selectedIndex - 1, 0),\n                    });\n                    stopDefaultEvent(event);\n                } else if (inputValue === '' && numPills > 0) {\n                    // select last pill\n                    this.hiddenEl.focus();\n                    this.setState({ selectedIndex: numPills - 1 });\n                    stopDefaultEvent(event);\n                }\n                break;\n            case KEYS.arrowRight: {\n                if (selectedIndex >= 0) {\n                    const index = selectedIndex + 1;\n                    if (index >= numPills) {\n                        // deselect last pill\n                        this.resetSelectedIndex();\n                        this.inputEl.focus();\n                    } else {\n                        // select next pill\n                        this.setState({ selectedIndex: index });\n                    }\n                    stopDefaultEvent(event);\n                }\n                break;\n            }\n            // no default\n        }\n    };\n\n    errorMessageID = uniqueId('errorMessage');\n\n    hiddenRef = (hiddenEl: ?HTMLSpanElement) => {\n        if (hiddenEl) {\n            this.hiddenEl = hiddenEl;\n        }\n    };\n\n    resetSelectedIndex = () => {\n        if (this.state.selectedIndex !== -1) {\n            this.setState({ selectedIndex: -1 });\n        }\n    };\n\n    render() {\n        const { isFocused, selectedIndex } = this.state;\n        const {\n            allowInvalidPills,\n            className,\n            disabled,\n            error,\n            getPillClassName,\n            getPillImageUrl,\n            inputProps,\n            onInput,\n            onRemove,\n            onSuggestedPillAdd,\n            placeholder,\n            selectedOptions,\n            showAvatars,\n            showRoundedPills,\n            suggestedPillsData,\n            suggestedPillsFilter,\n            suggestedPillsTitle,\n            validator,\n            ...rest\n        } = this.props;\n        const suggestedPillsEnabled = suggestedPillsData && suggestedPillsData.length > 0;\n        const hasError = !!error;\n        const classes = classNames('bdl-PillSelector', 'pill-selector-input-wrapper', {\n            'is-disabled': disabled,\n            'bdl-is-disabled': disabled,\n            'is-focused': isFocused,\n            'show-error': hasError,\n            'pill-selector-suggestions-enabled': suggestedPillsEnabled,\n            'bdl-PillSelector--suggestionsEnabled': suggestedPillsEnabled,\n        });\n        const ariaAttrs = {\n            'aria-invalid': hasError,\n            'aria-errormessage': this.errorMessageID,\n            'aria-describedby': this.errorMessageID,\n        };\n\n        return (\n            <Tooltip isShown={hasError} text={error || ''} position=\"middle-right\" theme=\"error\">\n                {/* eslint-disable-next-line jsx-a11y/no-static-element-interactions */}\n                <span\n                    className={classes}\n                    onBlur={this.handleBlur}\n                    onClick={this.handleClick}\n                    onFocus={this.handleFocus}\n                    onKeyDown={this.handleKeyDown}\n                >\n                    {showRoundedPills\n                        ? selectedOptions.map((option: RoundOption, index: number) => {\n                              return (\n                                  <RoundPill\n                                      className={getPillClassName ? getPillClassName(option) : undefined}\n                                      getPillImageUrl={getPillImageUrl}\n                                      isValid={allowInvalidPills ? validator(option) : true}\n                                      isDisabled={disabled}\n                                      isSelected={index === selectedIndex}\n                                      key={option.value}\n                                      onRemove={onRemove.bind(this, option, index)}\n                                      // $FlowFixMe option.text is for backwards compatibility\n                                      text={option.displayText || option.text}\n                                      showAvatar\n                                      id={option.id}\n                                      hasWarning={option.hasWarning}\n                                      isExternal={option.isExternalUser}\n                                  />\n                              );\n                          })\n                        : selectedOptions.map((option: Option, index: number) => {\n                              // TODO: This and associated types will be removed once all views are updates with round pills.\n                              return (\n                                  <Pill\n                                      isValid={allowInvalidPills ? validator(option) : true}\n                                      isDisabled={disabled}\n                                      isSelected={index === selectedIndex}\n                                      key={option.value}\n                                      onRemove={onRemove.bind(this, option, index)}\n                                      // $FlowFixMe option.text is for backwards compatibility\n                                      text={option.displayText || option.text}\n                                  />\n                              );\n                          })}\n\n                    {/* hidden element for focus/key events during pill selection */}\n                    <span\n                        aria-hidden=\"true\"\n                        className=\"accessibility-hidden\"\n                        onBlur={this.resetSelectedIndex}\n                        ref={this.hiddenRef}\n                        tabIndex={-1}\n                        data-testid=\"pill-selection-helper\"\n                    />\n                    <textarea\n                        {...ariaAttrs}\n                        {...rest}\n                        {...inputProps}\n                        autoComplete=\"off\"\n                        className={classNames('bdl-PillSelector-input', 'pill-selector-input', className, {\n                            'bdl-PillSelector-input--showAvatars': showAvatars,\n                        })}\n                        disabled={disabled}\n                        onInput={onInput}\n                        placeholder={this.getNumSelected() === 0 ? placeholder : ''}\n                        ref={input => {\n                            this.inputEl = input;\n                        }}\n                    />\n                    <SuggestedPillsRow\n                        onSuggestedPillAdd={onSuggestedPillAdd}\n                        selectedPillsValues={this.getPillsByKey('value')}\n                        suggestedPillsFilter={suggestedPillsFilter}\n                        suggestedPillsData={suggestedPillsData}\n                        title={suggestedPillsTitle}\n                    />\n                    <span id={this.errorMessageID} className=\"accessibility-hidden\" role=\"alert\">\n                        {error}\n                    </span>\n                </span>\n            </Tooltip>\n        );\n    }\n}\n\nexport default PillSelector;\n","// @flow\nimport React from 'react';\nimport noop from 'lodash/noop';\nimport classNames from 'classnames';\nimport X from '../../icon/fill/X16';\n// $FlowFixMe this imports from a typescript file\nimport LabelPill from '../label-pill';\nimport Avatar from '../avatar';\n\nimport './RoundPill.scss';\n\ntype Props = {\n    className?: string,\n    /** Function to retrieve the image URL associated with a pill */\n    getPillImageUrl?: (data: { id: string | number, [key: string]: any }) => string | Promise<?string>,\n    hasWarning?: boolean,\n    id?: string | number,\n    isDisabled?: boolean,\n    isExternal?: boolean,\n    isSelected?: boolean,\n    isValid?: boolean,\n    onRemove: () => any,\n    showAvatar?: boolean,\n    text: string,\n};\n\ntype State = {\n    avatarUrl: ?string,\n};\n\nconst RemoveButton = ({ onClick, ...rest }: { onClick: () => any }) => (\n    <X {...rest} aria-hidden=\"true\" onClick={onClick} />\n);\n\nclass RoundPill extends React.PureComponent<Props, State> {\n    static defaultProps = {\n        isDisabled: false,\n        isSelected: false,\n        isValid: true,\n        hasWarning: false,\n        showAvatar: false,\n    };\n\n    state = {\n        avatarUrl: undefined,\n    };\n\n    isMounted: boolean = false;\n\n    getStyles = (): string => {\n        const { className, isSelected, isDisabled, hasWarning, isValid } = this.props;\n\n        return classNames('bdl-RoundPill', className, {\n            'bdl-RoundPill--selected': isSelected && !isDisabled,\n            'bdl-RoundPill--disabled': isDisabled,\n            'bdl-RoundPill--warning': hasWarning,\n            'bdl-RoundPill--error': !isValid,\n        });\n    };\n\n    handleClickRemove = () => {\n        const { isDisabled, onRemove } = this.props;\n        return isDisabled ? noop : onRemove();\n    };\n\n    /**\n     * Success handler for getting avatar url\n     *\n     * @param {string} [avatarUrl] the user avatar url\n     */\n    getAvatarUrlHandler = (avatarUrl: ?string) => {\n        if (this.isMounted) {\n            this.setState({\n                avatarUrl,\n            });\n        }\n    };\n\n    /**\n     * Gets the avatar URL for the user from the getPillImageUrl prop\n     *\n     * @return {void}\n     */\n    getAvatarUrl() {\n        const { getPillImageUrl, id } = this.props;\n        Promise.resolve(getPillImageUrl && id ? getPillImageUrl({ id }) : undefined)\n            .then(this.getAvatarUrlHandler)\n            .catch(() => {\n                // noop\n            });\n    }\n\n    componentDidMount() {\n        this.isMounted = true;\n        this.getAvatarUrl();\n    }\n\n    componentWillUnmount() {\n        this.isMounted = false;\n    }\n\n    render() {\n        const { id, isExternal, showAvatar, text } = this.props;\n        const { avatarUrl } = this.state;\n\n        return (\n            <LabelPill.Pill size=\"large\" className={this.getStyles()}>\n                {showAvatar ? (\n                    <LabelPill.Icon\n                        Component={Avatar}\n                        className=\"bdl-RoundPill-avatar\"\n                        avatarUrl={avatarUrl}\n                        id={id}\n                        isExternal={isExternal}\n                        name={text}\n                        size=\"small\"\n                        shouldShowExternal\n                    />\n                ) : null}\n                <LabelPill.Text className=\"bdl-RoundPill-text\">{text}</LabelPill.Text>\n                <LabelPill.Icon\n                    className=\"bdl-RoundPill-closeBtn\"\n                    Component={RemoveButton}\n                    onClick={this.handleClickRemove}\n                />\n            </LabelPill.Pill>\n        );\n    }\n}\n\nexport default RoundPill;\n","// extracted by mini-css-extract-plugin","// @flow\nimport React from 'react';\n\nimport PlainButton from '../plain-button';\nimport Tooltip from '../tooltip';\nimport { KEYS } from '../../constants';\n\nimport { type SuggestedPill as SuggestedPillType } from './flowTypes';\n\nimport './SuggestedPillsRow.scss';\n\ntype Props = {\n    email: string,\n    id: number,\n    name: string,\n    onAdd: SuggestedPillType => void,\n};\n\nconst SuggestedPill = ({ email, id, name, onAdd }: Props) => {\n    const addSuggestedPill = (event: SyntheticEvent<HTMLButtonElement>) => {\n        event.preventDefault();\n\n        // TODO: refactor this so inline conversions aren't required at every usage\n        onAdd({\n            email,\n            id,\n            name,\n            text: name,\n            type: 'user',\n            value: email,\n        });\n    };\n\n    const handleKeyPress = (event: SyntheticKeyboardEvent<HTMLButtonElement>) => {\n        if (event.key === KEYS.enter) {\n            addSuggestedPill(event);\n        }\n    };\n\n    return (\n        <Tooltip position=\"bottom-center\" text={email}>\n            <PlainButton\n                className=\"suggested-pill-invisible-button\"\n                onClick={addSuggestedPill}\n                onKeyDown={handleKeyPress}\n                type=\"button\"\n            >\n                <span className=\"bdl-Pill-text pill-text suggested-pill\">{name}</span>\n            </PlainButton>\n        </Tooltip>\n    );\n};\n\nexport default SuggestedPill;\n","// @flow\nimport React from 'react';\nimport noop from 'lodash/noop';\n\nimport SuggestedPill from './SuggestedPill';\nimport type { SuggestedPill as SuggestedPillType, SuggestedPills, SuggestedPillsFilter } from './flowTypes';\n\nimport './SuggestedPillsRow.scss';\n\ntype Props = {\n    onSuggestedPillAdd?: SuggestedPillType => void,\n    selectedPillsValues?: Array<number>,\n    suggestedPillsData?: SuggestedPills,\n    suggestedPillsFilter?: SuggestedPillsFilter,\n    title?: string,\n};\n\nconst SuggestedPillsRow = ({\n    onSuggestedPillAdd = noop,\n    selectedPillsValues = [],\n    suggestedPillsData = [],\n    suggestedPillsFilter = 'id',\n    title,\n}: Props) => {\n    // Prevents pills from being rendered that are in the form by checking for value (id or custom value)\n    const filteredSuggestedPillData = suggestedPillsData.filter(\n        item => !selectedPillsValues.includes(item[suggestedPillsFilter]),\n    );\n\n    if (filteredSuggestedPillData.length === 0) {\n        return null;\n    }\n\n    return (\n        <div className=\"pill-selector-suggested\">\n            <span>{title}</span>\n            {filteredSuggestedPillData.map(item => (\n                <SuggestedPill\n                    key={item.id}\n                    email={item.email}\n                    id={item.id}\n                    name={item.name}\n                    onAdd={onSuggestedPillAdd}\n                />\n            ))}\n        </div>\n    );\n};\n\nexport default SuggestedPillsRow;\n","// extracted by mini-css-extract-plugin","/* eslint-disable react/jsx-sort-props */\nimport * as React from 'react';\nimport * as vars from '../../styles/variables';\nimport AccessibleSVG, { SVGProps } from '../../components/accessible-svg/AccessibleSVG';\n\n/**\n * This is an auto-generated component and should not be edited\n * manually in contributor pull requests.\n *\n * If you have problems with this component:\n * - https://github.com/box/box-ui-elements/issues/new?template=Bug_report.md\n *\n * If there are missing features in this component:\n * - https://github.com/box/box-ui-elements/issues/new?template=Feature_request.md\n */\n\nconst GlobeBadge16 = (props: SVGProps) => (\n    <AccessibleSVG width={16} height={16} viewBox=\"0 0 16 16\" {...props}>\n        <path\n            fill={vars.bdlGray50}\n            fillRule=\"evenodd\"\n            d=\"M8 0a7.988 7.988 0 00-5.662 2.338A7.992 7.992 0 000 8a7.988 7.988 0 002.338 5.662A7.992 7.992 0 008 16a7.988 7.988 0 005.662-2.338A7.992 7.992 0 0016 8a7.988 7.988 0 00-2.338-5.662A7.992 7.992 0 008 0zm-.862 14.4C4.062 13.908 1.6 11.323 1.6 8c0-.492.123-.984.123-1.477L5.54 10.34v.861c0 .862.738 1.6 1.6 1.6v1.6zm5.539-2.092c-.247-.616-.861-1.108-1.477-1.108h-.862V8.738c0-.368-.246-.738-.738-.738H4.8V6.4h1.6c.492 0 .862-.37.862-.862V4.062h1.6c.861 0 1.6-.739 1.6-1.6v-.37C12.8 3.077 14.4 5.292 14.4 8c0 1.723-.616 3.2-1.723 4.308z\"\n        />\n    </AccessibleSVG>\n);\n\nexport default GlobeBadge16;\n"],"sourceRoot":""}