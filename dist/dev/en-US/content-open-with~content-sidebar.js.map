{"version":3,"sources":["webpack:///./src/common/tether-positions.tsx","webpack:///./src/components/plain-button/index.ts","webpack:///./src/components/tooltip/Tooltip.scss","webpack:///./src/components/tooltip/Tooltip.tsx","webpack:///./src/elements/common/Tooltip.js","webpack:///./src/icons/general/IconCaretDown.tsx"],"names":["TetherPosition","TooltipTheme","TooltipPosition","positions","BOTTOM_CENTER","attachment","TOP_CENTER","targetAttachment","BOTTOM_LEFT","TOP_RIGHT","BOTTOM_RIGHT","TOP_LEFT","MIDDLE_LEFT","MIDDLE_RIGHT","Tooltip","React","constructor","props","uniqueId","tetherRef","current","isShown","position","onDismiss","setState","wasClosedByUser","type","event","children","handler","stopPropagation","nativeEvent","stopImmediatePropagation","fireChildEvent","isShownProp","key","isControlled","state","showTooltip","hasRendered","componentDidMount","componentDidUpdate","prevProps","prevState","document","addEventListener","handleKeyDown","removeEventListener","componentWillUnmount","render","ariaHidden","bodyElement","className","constrainToScrollParent","constrainToWindow","isDisabled","isTabbable","offset","showCloseButton","stopBubble","tetherElementClassName","text","theme","childAriaLabel","getProp","isLabelMatchingTooltipText","only","withCloseButton","tetherPosition","constraints","componentProps","push","to","undefined","tooltipID","ERROR","onBlur","handleBlur","onFocus","handleFocus","onMouseEnter","handleMouseEnter","onMouseLeave","handleMouseLeave","tabIndex","bodyEl","HTMLElement","body","classes","classNames","CALLOUT","tetherProps","classPrefix","enabled","tooltipInner","closeTooltip","tooltip","handleTooltipEvent","DEFAULT","rest","IconCaretDown","color","height","title","width"],"mappings":"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","file":"content-open-with~content-sidebar.js","sourcesContent":["enum TetherPosition {\n    TOP_LEFT = 'top left',\n    TOP_CENTER = 'top center',\n    TOP_RIGHT = 'top right',\n    MIDDLE_LEFT = 'middle left',\n    MIDDLE_CENTER = 'middle center',\n    MIDDLE_RIGHT = 'middle right',\n    BOTTOM_LEFT = 'bottom left',\n    BOTTOM_CENTER = 'bottom center',\n    BOTTOM_RIGHT = 'bottom right',\n}\n\nexport default TetherPosition;\n","import { PlainButtonProps as Props } from './PlainButton';\n\nexport { default } from './PlainButton';\nexport type PlainButtonProps = Props;\n","// extracted by mini-css-extract-plugin","import * as React from 'react';\nimport classNames from 'classnames';\nimport uniqueId from 'lodash/uniqueId';\nimport getProp from 'lodash/get';\nimport TetherComponent from 'react-tether';\n\nimport TetherPosition from '../../common/tether-positions';\nimport IconClose from '../../icon/fill/X16';\nimport PlainButton from '../plain-button';\n\nimport './Tooltip.scss';\n\nexport enum TooltipTheme {\n    CALLOUT = 'callout',\n    DEFAULT = 'default',\n    ERROR = 'error',\n}\n\nexport enum TooltipPosition {\n    BOTTOM_CENTER = 'bottom-center',\n    BOTTOM_LEFT = 'bottom-left',\n    BOTTOM_RIGHT = 'bottom-right',\n    MIDDLE_LEFT = 'middle-left',\n    MIDDLE_RIGHT = 'middle-right',\n    TOP_CENTER = 'top-center',\n    TOP_LEFT = 'top-left',\n    TOP_RIGHT = 'top-right',\n}\n\nexport type TooltipCustomPosition = {\n    attachment: TetherPosition;\n    targetAttachment: TetherPosition;\n};\n\nconst positions = {\n    [TooltipPosition.BOTTOM_CENTER]: {\n        attachment: TetherPosition.TOP_CENTER,\n        targetAttachment: TetherPosition.BOTTOM_CENTER,\n    },\n    [TooltipPosition.BOTTOM_LEFT]: {\n        attachment: TetherPosition.TOP_RIGHT,\n        targetAttachment: TetherPosition.BOTTOM_RIGHT,\n    },\n    [TooltipPosition.BOTTOM_RIGHT]: {\n        attachment: TetherPosition.TOP_LEFT,\n        targetAttachment: TetherPosition.BOTTOM_LEFT,\n    },\n    [TooltipPosition.MIDDLE_LEFT]: {\n        attachment: TetherPosition.MIDDLE_RIGHT,\n        targetAttachment: TetherPosition.MIDDLE_LEFT,\n    },\n    [TooltipPosition.MIDDLE_RIGHT]: {\n        attachment: TetherPosition.MIDDLE_LEFT,\n        targetAttachment: TetherPosition.MIDDLE_RIGHT,\n    },\n    [TooltipPosition.TOP_CENTER]: {\n        attachment: TetherPosition.BOTTOM_CENTER,\n        targetAttachment: TetherPosition.TOP_CENTER,\n    },\n    [TooltipPosition.TOP_LEFT]: {\n        attachment: TetherPosition.BOTTOM_RIGHT,\n        targetAttachment: TetherPosition.TOP_RIGHT,\n    },\n    [TooltipPosition.TOP_RIGHT]: {\n        attachment: TetherPosition.BOTTOM_LEFT,\n        targetAttachment: TetherPosition.TOP_LEFT,\n    },\n};\n\nexport type DefaultTooltipProps = {\n    /** Whether to constrain the tooltip to the element's scroll parent. Defaults to `false` */\n    constrainToScrollParent: boolean;\n    /** Whether to constrain the tooltip to window. Defaults to `true` */\n    constrainToWindow: boolean;\n    /** Forces the tooltip to be disabled irrespecitve of it's shown state. Defaults to `false` */\n    isDisabled: boolean;\n    /** Where to position the tooltip relative to the wrapped component */\n    position: TooltipPosition | TooltipCustomPosition;\n    /** Tooltip theme */\n    theme: TooltipTheme;\n};\n\nexport type TooltipProps = {\n    /** Sets aria-hidden attribute on tooltip */\n    ariaHidden?: boolean;\n    /** An HTML element to append the tooltip container into (otherwise appends to body) */\n    bodyElement?: HTMLElement;\n    /** A React element to put the tooltip on */\n    children: React.ReactChild;\n    /** A CSS class for the tooltip */\n    className?: string;\n    /** Forces the tooltip to be shown or hidden (useful for errors) */\n    isShown?: boolean;\n    /** Whether to add tabindex=0.  Defaults to `true` */\n    isTabbable?: boolean;\n    /** A string of the form 'vert-offset horiz-offset' which controls positioning */\n    offset?: string;\n    /** Function called if the user manually dismisses the tooltip - only applies if showCloseButton is true */\n    onDismiss?: () => void;\n    /** Shows an X button to close the tooltip. Useful when tooltips are force shown with the isShown prop. */\n    showCloseButton?: boolean;\n    /** stop click|keypress event bubbling */\n    stopBubble?: boolean;\n    /** A CSS class for the tether element component */\n    tetherElementClassName?: string;\n    /** Text to show in the tooltip */\n    text?: React.ReactNode;\n} & Partial<DefaultTooltipProps>;\n\ntype State = {\n    isShown: boolean;\n    hasRendered: boolean;\n    wasClosedByUser: boolean;\n};\n\nclass Tooltip extends React.Component<TooltipProps, State> {\n    static defaultProps: DefaultTooltipProps = {\n        constrainToScrollParent: false,\n        constrainToWindow: true,\n        isDisabled: false,\n        position: TooltipPosition.TOP_CENTER,\n        theme: TooltipTheme.DEFAULT,\n    };\n\n    constructor(props: TooltipProps) {\n        super(props);\n\n        this.state = { isShown: !!props.isShown, hasRendered: false, wasClosedByUser: false };\n    }\n\n    componentDidMount() {\n        this.setState({ hasRendered: true });\n    }\n\n    componentDidUpdate(prevProps: TooltipProps, prevState: State) {\n        const isControlled = this.isControlled();\n\n        // Reset wasClosedByUser state when isShown transitions from false to true\n        if (isControlled) {\n            if (!prevProps.isShown && this.props.isShown) {\n                this.setState({ wasClosedByUser: false });\n            }\n        } else {\n            if (!prevState.isShown && this.state.isShown) {\n                // capture event so that tooltip closes before any other floating components that can be closed by\n                // \"Escape\" key(e.g. Modal, Menu, etc.)\n                document.addEventListener('keydown', this.handleKeyDown, true);\n            }\n            if (prevState.isShown && !this.state.isShown) {\n                document.removeEventListener('keydown', this.handleKeyDown, true);\n            }\n        }\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.handleKeyDown, true);\n    }\n\n    tooltipID = uniqueId('tooltip');\n\n    tetherRef = React.createRef<TetherComponent>();\n\n    // Instance API: Forces the radar to be repositioned\n    position = () => {\n        if (this.tetherRef.current && this.isShown()) {\n            this.tetherRef.current.position();\n        }\n    };\n\n    closeTooltip = () => {\n        const { onDismiss } = this.props;\n        this.setState({ wasClosedByUser: true });\n        if (onDismiss) {\n            onDismiss();\n        }\n    };\n\n    fireChildEvent = (type: string, event: React.SyntheticEvent<HTMLElement> | Event) => {\n        const { children } = this.props;\n        const handler = (children as React.ReactElement).props[type];\n        if (handler) {\n            handler(event);\n        }\n    };\n\n    handleTooltipEvent = (event: React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>) => {\n        event.stopPropagation();\n        event.nativeEvent.stopImmediatePropagation();\n    };\n\n    handleMouseEnter = (event: React.SyntheticEvent<HTMLElement>) => {\n        this.setState({ isShown: true });\n        this.fireChildEvent('onMouseEnter', event);\n    };\n\n    handleMouseLeave = (event: React.SyntheticEvent<HTMLElement>) => {\n        this.setState({ isShown: false });\n        this.fireChildEvent('onMouseLeave', event);\n    };\n\n    handleFocus = (event: React.SyntheticEvent<HTMLElement>) => {\n        this.setState({ isShown: true });\n        this.fireChildEvent('onFocus', event);\n    };\n\n    handleBlur = (event: React.SyntheticEvent<HTMLElement>) => {\n        this.setState({ isShown: false });\n        this.fireChildEvent('onBlur', event);\n    };\n\n    isControlled = () => {\n        const { isShown: isShownProp } = this.props;\n        return typeof isShownProp !== 'undefined';\n    };\n\n    handleKeyDown = (event: KeyboardEvent) => {\n        if (event.key === 'Escape') {\n            event.stopPropagation();\n            this.setState({ isShown: false });\n        }\n        this.fireChildEvent('onKeyDown', event);\n    };\n\n    isShown = () => {\n        const { isShown: isShownProp } = this.props;\n        const isControlled = this.isControlled();\n\n        const isShown = isControlled ? isShownProp : this.state.isShown;\n\n        const showTooltip = isShown && !this.state.wasClosedByUser && this.state.hasRendered;\n\n        return showTooltip;\n    };\n\n    render() {\n        const {\n            ariaHidden,\n            bodyElement,\n            children,\n            className,\n            constrainToScrollParent,\n            constrainToWindow,\n            isDisabled,\n            isTabbable = true,\n            offset,\n            position = TooltipPosition.TOP_CENTER,\n            showCloseButton,\n            stopBubble,\n            tetherElementClassName,\n            text,\n            theme,\n        } = this.props;\n\n        const childAriaLabel = getProp(children, 'props.aria-label');\n        const isLabelMatchingTooltipText = !!childAriaLabel && childAriaLabel === text;\n\n        // If the tooltip is disabled just render the children\n        if (isDisabled) {\n            return React.Children.only(children);\n        }\n\n        const isControlled = this.isControlled();\n        const showTooltip = this.isShown();\n\n        const withCloseButton = showCloseButton && isControlled;\n        const tetherPosition = typeof position === 'string' ? positions[position] : position;\n        const constraints = [];\n        const componentProps: {\n            [key: string]:\n                | string\n                | ((event: React.SyntheticEvent<HTMLElement>) => void)\n                | ((event: React.KeyboardEvent<HTMLElement>) => void);\n        } = {};\n\n        if (constrainToScrollParent) {\n            constraints.push({\n                to: 'scrollParent',\n                attachment: 'together',\n            });\n        }\n        if (constrainToWindow) {\n            constraints.push({\n                to: 'window',\n                attachment: 'together',\n            });\n        }\n\n        if (showTooltip) {\n            if (!isLabelMatchingTooltipText || childAriaLabel === undefined) {\n                componentProps['aria-describedby'] = this.tooltipID;\n            }\n\n            if (theme === TooltipTheme.ERROR) {\n                componentProps['aria-errormessage'] = this.tooltipID;\n            }\n        }\n        if (!isControlled) {\n            componentProps.onBlur = this.handleBlur;\n            componentProps.onFocus = this.handleFocus;\n            componentProps.onMouseEnter = this.handleMouseEnter;\n            componentProps.onMouseLeave = this.handleMouseLeave;\n\n            if (isTabbable) {\n                componentProps.tabIndex = '0';\n            }\n        }\n\n        const bodyEl = bodyElement instanceof HTMLElement ? bodyElement : document.body;\n\n        const classes = classNames('tooltip', 'bdl-Tooltip', className, {\n            'is-callout': theme === TooltipTheme.CALLOUT,\n            'is-error': theme === TooltipTheme.ERROR,\n            'with-close-button': withCloseButton,\n        });\n\n        const tetherProps: {\n            attachment: TetherPosition;\n            bodyElement: HTMLElement;\n            classPrefix: string;\n            constraints: {};\n            enabled: boolean | undefined;\n            targetAttachment: TetherPosition;\n            offset?: string;\n            className?: string;\n        } = {\n            attachment: tetherPosition.attachment,\n            bodyElement: bodyEl,\n            classPrefix: 'tooltip',\n            constraints,\n            enabled: showTooltip,\n            targetAttachment: tetherPosition.targetAttachment,\n        };\n\n        if (tetherElementClassName) {\n            tetherProps.className = tetherElementClassName;\n        }\n\n        if (offset) {\n            tetherProps.offset = offset;\n        }\n\n        const tooltipInner = (\n            <>\n                {text}\n                {withCloseButton && (\n                    <PlainButton className=\"tooltip-close-button\" onClick={this.closeTooltip}>\n                        <IconClose className=\"bdl-Tooltip-iconClose\" width={14} height={14} />\n                    </PlainButton>\n                )}\n            </>\n        );\n\n        const tooltip = stopBubble ? (\n            <div\n                className={classes}\n                id={this.tooltipID}\n                onClick={this.handleTooltipEvent}\n                onContextMenu={this.handleTooltipEvent}\n                onKeyPress={this.handleTooltipEvent}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseLeave={this.handleMouseLeave}\n                role=\"presentation\"\n            >\n                <div\n                    role={theme === TooltipTheme.ERROR ? undefined : 'tooltip'}\n                    aria-live=\"polite\"\n                    aria-hidden={ariaHidden || isLabelMatchingTooltipText}\n                    data-testid=\"bdl-Tooltip\"\n                >\n                    {tooltipInner}\n                </div>\n            </div>\n        ) : (\n            <div\n                aria-live=\"polite\"\n                aria-hidden={ariaHidden || isLabelMatchingTooltipText}\n                className={classes}\n                data-testid=\"bdl-Tooltip\"\n                id={this.tooltipID}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseLeave={this.handleMouseLeave}\n                role={theme === TooltipTheme.ERROR ? undefined : 'tooltip'}\n            >\n                {tooltipInner}\n            </div>\n        );\n\n        return (\n            <TetherComponent ref={this.tetherRef} {...tetherProps}>\n                {React.cloneElement(React.Children.only(children) as React.ReactElement, componentProps)}\n                {showTooltip && tooltip}\n            </TetherComponent>\n        );\n    }\n}\n\nexport default Tooltip;\n","/**\n * @flow\n * @file Wrapper to conditionally add a tooltip\n * @author Box\n */\n\nimport * as React from 'react';\nimport TooltipCore from '../../components/tooltip/Tooltip';\n\nconst Tooltip = ({\n    children,\n    isDisabled,\n    text,\n    ...rest\n}: {\n    children: React.Node,\n    isDisabled?: boolean,\n    text?: ?string | React.Node,\n}) => {\n    if (isDisabled || !text) {\n        return children;\n    }\n\n    return (\n        <TooltipCore text={text} {...rest}>\n            {children}\n        </TooltipCore>\n    );\n};\n\nexport default Tooltip;\n","import * as React from 'react';\n\nimport AccessibleSVG from '../accessible-svg';\n\nimport { Icon } from '../iconTypes';\n\nconst IconCaretDown = ({ className = '', color = '#000', height = 6, title, width = 10 }: Icon) => (\n    <AccessibleSVG\n        className={`icon-caret-down ${className}`}\n        height={height}\n        title={title}\n        viewBox=\"0 0 10 6\"\n        width={width}\n    >\n        <path className=\"fill-color\" d=\"M0 .5l5 5 5-5H0z\" fill={color} fillRule=\"evenodd\" />\n    </AccessibleSVG>\n);\n\nexport default IconCaretDown;\n"],"sourceRoot":""}