{"version":3,"sources":["webpack:///./src/components/checkbox/Checkbox.scss","webpack:///./src/components/checkbox/Checkbox.tsx","webpack:///./src/components/checkbox/CheckboxField.tsx","webpack:///./src/components/checkbox/CheckboxTooltip.tsx","webpack:///./src/components/checkbox/index.ts","webpack:///./src/components/contact-datalist-item/ContactDatalistItem.scss","webpack:///./src/components/contact-datalist-item/ContactDatalistItem.tsx","webpack:///./src/components/draft-js-editor/DraftJSEditor.js","webpack:///./src/components/draft-js-editor/DraftJSEditor.scss","webpack:///./src/components/draft-js-editor/index.js","webpack:///./src/components/form-elements/draft-js-mention-selector/DraftJSMentionSelector.js","webpack:///./src/components/form-elements/draft-js-mention-selector/DraftJSMentionSelectorCore.js","webpack:///./src/components/form-elements/draft-js-mention-selector/DraftMentionDecorator.js","webpack:///./src/components/form-elements/draft-js-mention-selector/DraftMentionItem.js","webpack:///./src/components/form-elements/draft-js-mention-selector/MentionSelector.scss","webpack:///./src/components/form-elements/draft-js-mention-selector/createMentionSelectorState.js","webpack:///./src/components/form-elements/draft-js-mention-selector/index.js","webpack:///./src/components/form-elements/draft-js-mention-selector/messages.js","webpack:///./src/components/form-elements/draft-js-mention-selector/utils.js","webpack:///./src/components/form-elements/form/FormInput.js","webpack:///./src/components/form-elements/input-messages.js","webpack:///./src/components/link/LinkButton.tsx","webpack:///./src/components/link/LinkGroup.tsx","webpack:///./src/components/link/LinkPrimaryButton.tsx","webpack:///./src/components/link/index.ts","webpack:///./src/components/media/Media.scss","webpack:///./src/components/media/Media.tsx","webpack:///./src/components/media/MediaBody.tsx","webpack:///./src/components/media/MediaFigure.tsx","webpack:///./src/components/media/MediaMenu.tsx","webpack:///./src/components/media/index.tsx","webpack:///./src/components/media/messages.tsx","webpack:///./src/components/pill-selector-dropdown/PillSelectorDropdown.js","webpack:///./src/components/pill-selector-dropdown/PillSelectorDropdown.scss","webpack:///./src/components/text-area/TextArea.js","webpack:///./src/components/text-area/TextArea.scss","webpack:///./src/components/text-area/TextAreaField.js","webpack:///./src/components/text-area/index.js","webpack:///./src/elements/content-sidebar/ActivitySidebar.js","webpack:///./src/elements/content-sidebar/ActivitySidebar.scss","webpack:///./src/elements/content-sidebar/ActivitySidebarFilter.js","webpack:///./src/elements/content-sidebar/ActivitySidebarFilter.scss","webpack:///./src/elements/content-sidebar/AddTaskButton.js","webpack:///./src/elements/content-sidebar/AddTaskMenu.js","webpack:///./src/elements/content-sidebar/AddTaskMenu.scss","webpack:///./src/elements/content-sidebar/TaskModal.js","webpack:///./src/elements/content-sidebar/activity-feed/ActivityCard.scss","webpack:///./src/elements/content-sidebar/activity-feed/ActivityCard.tsx","webpack:///./src/elements/content-sidebar/activity-feed/Avatar.js","webpack:///./src/elements/content-sidebar/activity-feed/SelectableActivityCard.scss","webpack:///./src/elements/content-sidebar/activity-feed/SelectableActivityCard.tsx","webpack:///./src/elements/content-sidebar/activity-feed/activity-feed/ActiveState.js","webpack:///./src/elements/content-sidebar/activity-feed/activity-feed/ActivityFeed.js","webpack:///./src/elements/content-sidebar/activity-feed/activity-feed/ActivityFeed.scss","webpack:///./src/elements/content-sidebar/activity-feed/activity-feed/ActivityItem.tsx","webpack:///./src/elements/content-sidebar/activity-feed/activity-feed/ActivityThread.js","webpack:///./src/elements/content-sidebar/activity-feed/activity-feed/ActivityThread.scss","webpack:///./src/elements/content-sidebar/activity-feed/activity-feed/ActivityThreadReplies.js","webpack:///./src/elements/content-sidebar/activity-feed/activity-feed/ActivityThreadReplies.scss","webpack:///./src/elements/content-sidebar/activity-feed/activity-feed/EmptyState.js","webpack:///./src/elements/content-sidebar/activity-feed/activity-feed/EmptyState.scss","webpack:///./src/elements/content-sidebar/activity-feed/activity-feed/activityFeedUtils.js","webpack:///./src/elements/content-sidebar/activity-feed/activity-feed/index.js","webpack:///./src/elements/content-sidebar/activity-feed/activity-feed/messages.js","webpack:///./src/elements/content-sidebar/activity-feed/annotations/AnnotationActivity.js","webpack:///./src/elements/content-sidebar/activity-feed/annotations/AnnotationActivity.scss","webpack:///./src/elements/content-sidebar/activity-feed/annotations/AnnotationActivityLink.scss","webpack:///./src/elements/content-sidebar/activity-feed/annotations/AnnotationActivityLink.tsx","webpack:///./src/elements/content-sidebar/activity-feed/annotations/AnnotationActivityMenu.js","webpack:///./src/elements/content-sidebar/activity-feed/annotations/index.js","webpack:///./src/elements/content-sidebar/activity-feed/annotations/messages.js","webpack:///./src/elements/content-sidebar/activity-feed/app-activity/AppActivity.js","webpack:///./src/elements/content-sidebar/activity-feed/app-activity/AppActivity.scss","webpack:///./src/elements/content-sidebar/activity-feed/app-activity/index.js","webpack:///./src/elements/content-sidebar/activity-feed/app-activity/messages.js","webpack:///./src/elements/content-sidebar/activity-feed/comment-form/CommentForm.js","webpack:///./src/elements/content-sidebar/activity-feed/comment-form/CommentForm.scss","webpack:///./src/elements/content-sidebar/activity-feed/comment-form/CommentFormControls.js","webpack:///./src/elements/content-sidebar/activity-feed/comment-form/index.js","webpack:///./src/elements/content-sidebar/activity-feed/comment-form/messages.js","webpack:///./src/elements/content-sidebar/activity-feed/comment/Comment.js","webpack:///./src/elements/content-sidebar/activity-feed/comment/Comment.scss","webpack:///./src/elements/content-sidebar/activity-feed/comment/index.js","webpack:///./src/elements/content-sidebar/activity-feed/comment/messages.js","webpack:///./src/elements/content-sidebar/activity-feed/common/activity-datestamp/ActivityDatestamp.tsx","webpack:///./src/elements/content-sidebar/activity-feed/common/activity-datestamp/index.ts","webpack:///./src/elements/content-sidebar/activity-feed/common/activity-error/ActivityError.js","webpack:///./src/elements/content-sidebar/activity-feed/common/activity-error/ActivityError.scss","webpack:///./src/elements/content-sidebar/activity-feed/common/activity-error/index.js","webpack:///./src/elements/content-sidebar/activity-feed/common/activity-message/ActivityMessage.js","webpack:///./src/elements/content-sidebar/activity-feed/common/activity-message/ActivityMessage.scss","webpack:///./src/elements/content-sidebar/activity-feed/common/activity-message/ShowOriginalButton.js","webpack:///./src/elements/content-sidebar/activity-feed/common/activity-message/TranslateButton.js","webpack:///./src/elements/content-sidebar/activity-feed/common/activity-message/index.js","webpack:///./src/elements/content-sidebar/activity-feed/common/activity-message/messages.js","webpack:///./src/elements/content-sidebar/activity-feed/common/activity-timestamp/ActivityTimestamp.js","webpack:///./src/elements/content-sidebar/activity-feed/common/activity-timestamp/ActivityTimestamp.scss","webpack:///./src/elements/content-sidebar/activity-feed/common/activity-timestamp/index.js","webpack:///./src/elements/content-sidebar/activity-feed/common/activity-timestamp/messages.js","webpack:///./src/elements/content-sidebar/activity-feed/common/delete-confirmation/DeleteConfirmation.js","webpack:///./src/elements/content-sidebar/activity-feed/common/delete-confirmation/DeleteConfirmation.scss","webpack:///./src/elements/content-sidebar/activity-feed/common/delete-confirmation/index.js","webpack:///./src/elements/content-sidebar/activity-feed/common/user-link/UserLink.js","webpack:///./src/elements/content-sidebar/activity-feed/common/user-link/UserLink.scss","webpack:///./src/elements/content-sidebar/activity-feed/common/user-link/index.js","webpack:///./src/elements/content-sidebar/activity-feed/illustrations/ActivityFeedEmptyStateIllustration.tsx","webpack:///./src/elements/content-sidebar/activity-feed/index.js","webpack:///./src/elements/content-sidebar/activity-feed/task-form/TaskError.js","webpack:///./src/elements/content-sidebar/activity-feed/task-form/TaskForm.js","webpack:///./src/elements/content-sidebar/activity-feed/task-form/TaskForm.scss","webpack:///./src/elements/content-sidebar/activity-feed/task-form/index.js","webpack:///./src/elements/content-sidebar/activity-feed/task-form/messages.js","webpack:///./src/elements/content-sidebar/activity-feed/task-new/AssigneeDetails.js","webpack:///./src/elements/content-sidebar/activity-feed/task-new/AssigneeDetails.scss","webpack:///./src/elements/content-sidebar/activity-feed/task-new/AssigneeList.js","webpack:///./src/elements/content-sidebar/activity-feed/task-new/AssigneeList.scss","webpack:///./src/elements/content-sidebar/activity-feed/task-new/AvatarGroupAvatar.js","webpack:///./src/elements/content-sidebar/activity-feed/task-new/AvatarGroupAvatar.scss","webpack:///./src/elements/content-sidebar/activity-feed/task-new/Task.js","webpack:///./src/elements/content-sidebar/activity-feed/task-new/Task.scss","webpack:///./src/elements/content-sidebar/activity-feed/task-new/TaskActions.js","webpack:///./src/elements/content-sidebar/activity-feed/task-new/TaskActions.scss","webpack:///./src/elements/content-sidebar/activity-feed/task-new/TaskCompletionRuleIcon.js","webpack:///./src/elements/content-sidebar/activity-feed/task-new/TaskCompletionRuleIcon.scss","webpack:///./src/elements/content-sidebar/activity-feed/task-new/TaskDueDate.js","webpack:///./src/elements/content-sidebar/activity-feed/task-new/TaskMultiFileIcon.js","webpack:///./src/elements/content-sidebar/activity-feed/task-new/TaskStatus.js","webpack:///./src/elements/content-sidebar/activity-feed/task-new/index.js","webpack:///./src/elements/content-sidebar/activity-feed/task-new/messages.js","webpack:///./src/elements/content-sidebar/activity-feed/utils/formatTaggedMessage.js","webpack:///./src/elements/content-sidebar/activity-feed/version/CollapsedVersion.js","webpack:///./src/elements/content-sidebar/activity-feed/version/Version.js","webpack:///./src/elements/content-sidebar/activity-feed/version/Version.scss","webpack:///./src/elements/content-sidebar/activity-feed/version/index.js","webpack:///./src/icon/fill/Checkmark16.tsx","webpack:///./src/icon/fill/Trash16.tsx","webpack:///./src/icon/line/Avatar16.tsx","webpack:///./src/icon/line/MoveCopy16.tsx","webpack:///./src/icon/line/Pencil16.tsx","webpack:///./src/icon/line/Trash16.tsx","webpack:///./src/icons/general/IconPencil.tsx","webpack:///./src/icons/general/IconRejected.tsx","webpack:///./src/icons/two-toned/IconTaskApproval.tsx","webpack:///./src/icons/two-toned/IconTaskGeneral.tsx","webpack:///./src/illustration/EmptyStatePreviewActivity140.tsx","webpack:///./src/utils/keys.js","webpack:///./src/utils/parseCSV.js"],"names":["Checkbox","className","description","fieldLabel","hideLabel","id","isChecked","isDisabled","label","name","onChange","subsection","tooltip","rest","generatedID","React","uniqueId","current","inputID","checkboxAndLabel","classNames","CheckboxField","field","value","messages","defineMessages","checkboxTooltipIconInfoText","CheckboxTooltip","ContactDatalistItem","constructor","props","avatarUrl","isMounted","setState","state","undefined","getAvatarUrl","getContactAvatarUrl","Promise","resolve","then","getAvatarUrlHandler","catch","componentDidMount","componentWillUnmount","render","isExternal","showAvatar","subtitle","OptionalFormattedMessage","commonMessages","optional","DraftJSEditor","editorState","onBlur","event","onReturn","inputProps","error","isRequired","onFocus","placeholder","handleBlur","handleChange","classes","a11yProps","role","ariaActiveDescendantID","ariaAutoComplete","ariaExpanded","ariaOwneeID","ariaMultiline","labelID","descriptionID","message","handleReturn","isFocused","mentionStrategy","contentBlock","callback","contentState","findEntityRanges","character","entityKey","getEntity","ret","getType","DraftJSMentionSelector","validateOnBlur","containerEl","relatedTarget","Node","contains","checkValidity","nextEditorState","internalEditorState","isTouched","getErrorFromValidityState","handleValidityStateUpdateHandler","mentionDecorator","CompositeDecorator","strategy","component","DraftMentionItem","contacts","EditorState","createEmpty","getDerivedStateFromProps","nextProps","componentDidUpdate","prevProps","prevState","prevInternalEditorState","prevEditorStateFromProps","prevEditorState","currentEditorState","newState","getDerivedStateFromEditorState","checkValidityIfAllowed","previousEditorState","isPreviousEditorStateEmpty","isEditorStateEmpty","isCurrentEditorStateEmpty","isNewEditorState","isEditorStateDirty","text","getCurrentContent","getPlainText","trim","lastChangeType","getLastChangeType","length","externalEditorState","maxLength","minLength","contactsLoaded","mentionTriggers","onMention","selectorRow","startMentionMessage","handleFocus","noop","DefaultSelectorRow","item","email","DefaultStartMentionMessage","startMention","MentionStartState","activeMention","mentionString","index","addMention","handleMention","getActiveMentionForEditorState","reduce","prev","mentionPattern","RegExp","prevContacts","currentContacts","mention","editorStateWithLink","showMentionStartState","usersFoundMessage","shouldDisplayMentionLookup","usersFound","values","usersCount","noUsersFound","handleContactSelected","map","contact","key","defaultMentionTriggers","DraftMentionDecorator","children","getData","getMentionFromText","mentionRegex","matchArray","exec","fullMatch","triggerSymbol","start","end","data","content","createMentionSelectorState","ContentState","createFromText","getFirstBlock","getText","getBlockAfter","getKey","createEntity","mentionEntityKey","getLastCreatedEntityKey","mentionRange","SelectionState","merge","anchorOffset","focusOffset","Modifier","replaceText","getBlockForKey","createWithContent","defaultMentionTriggersString","defaultMentionPattern","selectionState","getSelection","startKey","getStartKey","activeBlock","cursorPosition","getStartOffset","result","activeRangeText","substr","mentionMatch","match","blockID","mentionTrigger","preInsertionSelectionState","textToInsert","contentStateWithEntity","contentStateWithLink","spaceOffset","selectionStateForAddingSpace","contentStateWithLinkAndExtraSpace","insertText","push","getFormattedCommentText","blockMap","getBlockMap","resultStringArr","hasMention","forEach","block","blockMapStringArr","getEntityAt","entity","stringToAdd","substring","join","FormInput","Component","onValidityStateUpdate","context","form","registerInput","unregisterInput","PropTypes","node","func","string","shape","badInput","code","invalidInputError","patternMismatch","tooShort","minLengthError","min","tooLong","maxLengthError","max","typeMismatchEmail","invalidEmailError","typeMismatchUrl","invalidURLError","valueMissing","requiredFieldError","LinkButton","size","LinkGroup","title","i","LinkPrimaryButton","Media","as","Wrapper","classnames","Body","MediaBody","Menu","MediaMenu","Figure","MediaFigure","dropdownProps","menuProps","intl","formatMessage","menuButtonArialLabel","ButtonType","BUTTON","bdlGray50","injectIntl","PillSelectorDropdown","inputValue","isInCompositionMode","allowInvalidPills","parseItems","validator","pills","parseCSV","filter","pill","normalizedPills","displayText","allowCustomPills","onPillCreate","onSelect","selectedOptions","shouldClearUnmatchedInput","validateForError","parsePills","resetInputValue","addPillsFromInput","target","onInput","preventDefault","clipboardData","selectorOptions","selectedOption","get","handleInput","disabled","dividerIndex","dropdownScrollBoundarySelector","getPillClassName","getPillImageUrl","onRemove","onSuggestedPillAdd","overlayTitle","showAvatars","showRoundedPills","suggestedPillsData","suggestedPillsFilter","suggestedPillsTitle","shouldSetActiveItemOnOpen","selectorDropdownElement","handleEnter","handleSelect","handleCompositionEnd","handleCompositionStart","handlePaste","TextArea","errorTooltipPosition","hideOptionalLabel","isResizable","textareaRef","tooltipTetherClassName","hasError","errorMessageID","ariaAttrs","resize","displayName","TextAreaField","innerRef","errors","touched","getProp","activityFeedInlineError","inlineError","errorOccured","activityFeedItemApiError","MARK_NAME_DATA_LOADING","ORIGIN_ACTIVITY_SIDEBAR","MARK_NAME_DATA_READY","EVENT_DATA_READY","MARK_NAME_JS_READY","EVENT_JS_READY","mark","ActivitySidebar","permissions","api","file","getFeedAPI","deleteAnnotation","deleteAnnotationSuccess","bind","feedErrorCallback","fetchFeedItems","updateAnnotation","feedSuccessCallback","status","e","contextInfo","errorCallback","assignees","taskType","dueAt","completionRule","onSuccess","onError","currentUser","getBadUserError","successCallback","createTaskNew","task","onTaskDelete","deleteTaskNew","taskId","onTaskUpdate","updateTaskNew","taskAssignmentId","onTaskAssignmentUpdate","updateTaskCollaborator","hasReplies","onCommentDelete","comment","deleteThreadedComment","deleteComment","onCommentUpdate","updateThreadedComment","updateComment","onCommentCreate","createThreadedComment","createComment","parentId","parentType","createReply","deleteAppActivity","feedItems","fileId","logger","onDataReadyMetric","endMarkName","startMarkName","activityFeedError","Array","isArray","Error","ERROR_CODE_FETCH_ACTIVITY","showNotification","console","currentUserError","collaborators","entries","approverSelectorContacts","mentionSelectorContacts","debounce","searchStr","getCollaborators","getApproverContactsSuccessCallback","includeGroups","DEFAULT_COLLAB_DEBOUNCE","getMentionContactsSuccessCallback","maskError","errorHeader","currentUserErrorHeaderMessage","errorSubHeader","defaultErrorMaskSubHeaderMessage","userId","getUsersAPI","getAvatarUrlWithAccessToken","annotation","file_version","nextActiveAnnotationId","emitAnnotatorActiveChangeEvent","getAnnotationsMatchPath","getAnnotationsPath","history","location","onAnnotationSelect","annotationFileVersionId","currentFileVersionId","selectedFileVersionId","feedItemsStatusFilter","type","hasTasks","getApproverWithQuery","createTask","onTaskModalClose","approvers","TASK_COMPLETION_RULE_ALL","features","shouldShowActivityFeedFilter","isFeatureEnabled","selectedStatus","handleItemsFiltered","renderActivitySidebarFilter","renderAddTaskButton","sidebarActivityTitle","onReadyMetric","fetchCurrentUser","emitRemoveEvent","user","shouldDestroy","getBadItemError","getUser","fetchCurrentUserSuccessCallback","fetchCurrentUserErrorCallback","shouldRefreshCache","shouldShowReplies","shouldShowTasks","hasVersions","shouldShowVersions","shouldShowAppActivity","shouldShowAnnotations","fetchFeedItemsSuccessCallback","fetchFeedItemsErrorCallback","getFileCollaboratorsAPI","getFileCollaborators","filter_term","include_groups","include_uploader_collabs","refresh","elementId","onVersionHistoryClick","getUserProfileUrl","activeFeedEntryId","activeFeedEntryType","onTaskView","renderActions","SIDEBAR_VIEW_ACTIVITY","renderTitle","getFilteredFeedItems","getMentionWithQuery","handleAnnotationDelete","handleAnnotationEdit","handleAnnotationSelect","handleAnnotationStatusChange","updateTaskAssignment","deleteTask","updateTask","annotatorState","onTaskCreate","onVersionChange","flow","withLogger","withErrorBoundary","withAPIContext","withFeatureConsumer","withAnnotatorContext","withRouterAndRef","ACTIVITY_FEED_ITEM_ALL","ACTIVITY_FEED_ITEM_OPEN","COMMENT_STATUS_OPEN","ACTIVITY_FEED_ITEM_RESOLVED","COMMENT_STATUS_RESOLVED","statuses","statusMap","msg","activitySidebarFilterOptionAll","val","activitySidebarFilterOptionOpen","activitySidebarFilterOptionResolved","ActivitySidebarFilter","feedItemStatus","onFeedItemStatusClick","AddTaskButton","isTaskFormOpen","TASK_TYPE_APPROVAL","replace","open","buttonRef","focus","element","taskFormProps","handleClickMenuItem","setAddTaskButtonRef","handleSubmitError","handleModalClose","withRouter","AddTaskMenu","tasksAddTask","onMenuItemClick","TASK_TYPE_GENERAL","taskAddTaskGeneral","taskAddTaskGeneralDescription","taskAddTaskApproval","taskAddTaskApprovalDescription","getMessageForModalTitle","mode","TASK_EDIT_MODE_CREATE","tasksCreateGeneralTaskFormTitle","tasksEditGeneralTaskFormTitle","tasksCreateApprovalTaskFormTitle","tasksEditApprovalTaskFormTitle","focusTargetSelector","TaskModal","editMode","onSubmitError","onSubmitSuccess","onModalClose","ActivityCard","ref","Avatar","avatar_url","avatarPromise","ALLOWABLE_NODENAMES","isAllowableNode","HTMLElement","includes","nodeName","SelectableActivityCard","handleClick","stopPropagation","currentTarget","handleKeyDown","decode","ActiveState","activeFeedItemRef","items","onAnnotationDelete","onAnnotationEdit","onAnnotationStatusChange","onAppActivityDelete","onCommentEdit","onTaskEdit","onVersionInfo","translations","activeEntry","find","refValue","itemFileVersionId","total_reply_count","replies","can_delete","can_edit","can_reply","can_resolve","versions","withErrorHandling","ActivityFeed","isInputOpen","ItemTypes","fileVersion","prevCurrentUser","prevFeedItems","feedContainer","scrollTop","scrollHeight","nativeEvent","stopImmediatePropagation","resetFeedScroll","commentFormSubmitHandler","versionInfoHandler","prevActiveFeedEntryId","currFeedItems","prevIsInputOpen","currIsInputOpen","hasLoaded","hasMoreItems","didLoadFeedItems","hasInputOpened","hasActiveFeedEntryIdChanged","scrollToActiveFeedItemOrErrorMessage","scrollIntoView","onReplyCreate","hasAnnotationCreatePermission","PERMISSION_CAN_CREATE_ANNOTATIONS","hasCommentPermission","showCommentForm","isEmpty","isLoading","errorMessageByEntryType","annotationMissingError","commentMissingError","taskMissingError","inlineFeedItemErrorMessage","isInlineFeedItemErrorVisible","onKeyDown","collapseFeedState","openVersionHistoryPopup","feedInlineErrorTitle","commentFormCancelHandler","commentFormFocusHandler","ActivityItem","ActivityThread","isRepliesLoading","onGetReplies","onReplyDelete","onReplyEdit","repliesTotalCount","isExpanded","setIsExpanded","toggleButtonLabel","hideReplies","showReplies","repliesToLoadCount","Math","toggleReplies","previousState","ActivityThreadReplies","onDelete","onEdit","lastReply","getReplyPermissions","reply","EmptyState","showAnnotationMessage","showCommentMessage","showActionMessage","actionMessage","noActivityAnnotationPrompt","noActivityCommentPrompt","noActivity","feedState","collapsedFeedState","feedItem","previousFeedItem","pop","concat","selectors","getVersionAction","VERSION_UPLOAD_ACTION","modified_by","tmpModifiedBy","version_start","parseInt","version_number","version_end","prevModifiedBy","PLACEHOLDER_USER","tmpCurModifiedBy","created_at","trashed_at","parsedVersionNumber","modifiedBy","AnnotationActivity","isCurrentVersion","onStatusChange","isConfirmingDelete","setIsConfirmingDelete","isEditing","setIsEditing","isMenuOpen","setIsMenuOpen","created_by","isPending","canDelete","canEdit","canResolve","isFileVersionUnavailable","isCardDisabled","isMenuVisible","handleDelete","handleDeleteCancel","handleDeleteConfirm","handleEdit","handleFormCancel","handleFormSubmit","handleMenuClose","handleMenuOpen","handleMouseDown","handleStatusChange","newStatus","createdAtTimestamp","Date","getTime","createdByUser","linkMessage","annotationActivityPageItem","annotationActivityVersionLink","linkValue","activityLinkMessage","annotationActivityVersionUnavailable","number","tetherProps","attachment","constraints","to","targetAttachment","ACTIVITY_TARGETS","PROFILE","ANNOTATION_OPTIONS","annotationActivityDeletePrompt","AnnotationActivityLink","onClick","messageDescriptor","translatedMessage","AnnotationActivityMenu","onMenuClose","onMenuOpen","isResolved","ANNOTATION_OPTIONS_UNRESOLVE","annotationActivityUnresolveMenuItem","ANNOTATION_OPTIONS_RESOLVE","annotationActivityResolveMenuItem","ANNOTATION_OPTIONS_EDIT","annotationActivityEditMenuItem","ANNOTATION_OPTIONS_DELETE","annotationActivityDeleteMenuItem","annotationActivityPostedFullDateTime","mapActivityNodes","dataset","href","tagName","textContent","resinTarget","resinAction","AppActivity","DOMParser","rendered_text","renderedText","doc","parser","parseFromString","childNodes","from","activity_template","templateId","app","icon_url","createdAt","createdBy","appActivityAltIcon","appActivityName","handleDeleteClick","bdlGray80","appActivityDeleteMenuItem","appActivityDeletePrompt","parseActivity","CommentForm","commentEditorState","tagged_message","onSubmit","entityId","isOpen","prevIsOpen","onCancel","showTip","inputContainerClassNames","onFormValidSubmitHandler","commentLabel","atMentionTipDescription","onMentionSelectorChangeHandler","commentWrite","atMentionTip","CommentInputControls","APPROVAL_FORM_CANCEL","commentCancel","APPROVAL_FORM_POST","commentPost","approvalAddAssignee","approvalAddTask","approvalAddTaskTooltip","approvalAssignees","approvalDueDate","approvalSelectDate","Comment","translatedTaggedMessage","COMMENT_OPTIONS","COMMENT_OPTIONS_EDIT","handleEditClick","commentEditMenuItem","COMMENT_OPTIONS_DELETE","commentDeleteMenuItem","commentDeletePrompt","handleMessageUpdate","commentPostedFullDateTime","MILLISECONDS_PER_YEAR","ActivityDatestamp","date","now","dateInMs","showTime","ActivityError","action","onAction","ActivityMessage","isTranslation","onTranslate","translationFailed","prevTaggedMessage","prevTranslationFailed","getButton","button","handleShowOriginal","handleTranslate","translationEnabled","commentToDisplay","formatTaggedMessage","ShowOriginalButton","activityMessageShowOriginal","TranslateButton","activityMessageTranslate","ActivityTimestamp","fullDateTime","time","DeleteConfirmation","onDeleteCancel","KEYS","escape","onDeleteConfirm","INLINE_DELETE_CANCEL","cancel","INLINE_DELETE_CONFIRM","delete","UserLink","profileUrl","getProfileUrlHandler","ActivityFeedEmptyStateIllustration","width","height","TaskError","isEditMode","TASK_EDIT_MODE_EDIT","isForbiddenErrorOnEdit","taskGroupExceedsError","ERROR_CODE_GROUP_EXCEEDS_LIMIT","errorTitle","taskEditWarningTitle","taskCreateErrorTitle","errorMessage","taskUpdateErrorMessage","apiMessages","taskCreateErrorMessage","taskGeneralAssigneeRemovalWarningMessage","taskApprovalAssigneeRemovalWarningMessage","taskGroupExceedsLimitWarningTitle","taskGroupExceedsLimitWarningMessage","TASK_MAX_GROUP_ASSIGNEES","convertAssigneesToSelectorItems","newSelectorItem","TaskForm","getInitialFormState","only","invalidSubmitValidityState","approverTextInput","assigneeFieldMissingError","assigneeFieldInvalidError","invalidUserError","messageFieldError","taskDueDateError","invalidDateError","formValidityState","taskAssignees","taskName","taskDueDate","isValid","Object","every","fieldName","validateForm","clearForm","dueDate","addedAssignees","getAddedAssignees","removedAssignees","getRemovedAssignees","assignee","currentApprovers","approverIds","approver","currentApprover","indexOf","currentApproverIds","editTask","dueDateString","toISOString","completion_rule","due_at","handleSubmitSuccess","dateValue","setHours","checked","TASK_COMPLETION_RULE_ANY","can_update","option","splice","persist","isCreateEditMode","selectedApprovers","approverOptions","pillSelectorOverlayClasses","scrollable","submitButtonMessage","tasksAddTaskFormSubmitLabel","tasksEditTaskFormSubmitLabel","shouldShowCompletionRule","isCompletionRuleCheckboxDisabled","isCompletionRuleCheckboxChecked","handleInvalidSubmit","handleValidSubmit","getErrorByFieldname","tasksAddTaskFormSelectAssigneesLabel","handleApproverSelectorInput","handleApproverSelectorRemove","handleApproverSelectorSelect","commentFormMessages","taskCreateGroupLabel","taskAnyCheckboxLabel","taskAnyInfoGroupTooltip","handleCompletionRuleChange","taskAnyInfoTooltip","tasksAddTaskFormMessageLabel","handleChangeMessage","INTERACTION_TARGET","TASK_DATE_PICKER","tasksAddTaskFormDueDateLabel","handleDueDateChange","handleCancelClick","addResinInfo","tasksAddTaskFormCancelLabel","statusMessages","TASK_NEW_APPROVED","tasksFeedStatusApproved","TASK_NEW_REJECTED","tasksFeedStatusRejected","TASK_NEW_COMPLETED","tasksFeedStatusCompleted","TASK_NEW_NOT_STARTED","AssigneeDetails","completedAt","statusMessage","priorCollaborator","dateTime","DEFAULT_ASSIGNEES_SHOWN","TASKS_PAGE_SIZE","AssigneeList","initialAssigneeCount","users","onCollapse","onExpand","next_marker","entryCount","numVisibleAssignees","visibleUsers","slice","completed_at","hiddenAssigneeCount","maxAdditionalAssignees","hasMoreAssigneesThanPageSize","additionalAssigneeMessage","taskShowMoreAssigneesOverflow","taskShowMoreAssignees","additionalAssigneeCount","taskShowLessAssignees","StatusIcon","AvatarGroupAvatar","camelCase","taskAssignmentCompleted","Task","loadCollabError","assignedToFull","assigned_to","modalError","isAssigneeListOpen","getAllTaskCollaborators","task_links","taskCollaboratorLoadErrorMessage","getTaskCollaboratorsAPI","getTaskCollaborators","assignmentId","taskStatus","onAssignmentUpdate","onView","task_type","assignments","currentUserAssignment","isTaskCompleted","TASK_NEW_IN_PROGRESS","isCreator","isMultiFile","shouldShowActions","TaskTypeIcon","IconTaskApproval","IconTaskGeneral","TASK_OPTIONS","TASK_OPTIONS_EDIT","taskEditMenuItem","TASK_OPTIONS_DELETE","taskDeleteMenuItem","taskDeletePrompt","handleAssigneeListCollapse","handleAssigneeListExpand","handleTaskAction","getFeatureConfig","feedbackUrl","handleEditSubmitError","handleEditModalClose","TaskActions","onTaskApproval","onTaskReject","onTaskComplete","TASK_VIEW_DETAILS","tasksFeedViewDetailsAction","TASK_REJECT","tasksFeedRejectAction","TASK_APPROVE","tasksFeedApproveAction","TASK_COMPLETE","tasksFeedCompleteAction","TaskCompletionRuleIcon","taskAnyAffordanceTooltip","Avatar16","TaskDueDate","isOverdue","fullDueDate","pillProps","taskFeedStatusDue","TaskMultiFileIcon","taskMultipleFilesAffordanceTooltip","MoveCopy16","statusMessageKeyMap","taskFeedApprovedUppercaseLabel","taskFeedCompletedUppercaseLabel","taskFeedRejectedUppercaseLabel","taskFeedInProgressUppercaseLabel","typeKeyMap","Status","taskDueDateLabel","tasksFeedCompletedLabel","tasksFeedApprovedLabel","tasksFeedRejectedLabel","tasksFeedInProgressLabel","tasksFeedHeadlineApprovalCurrentUser","tasksFeedHeadlineApproval","tasksFeedHeadlineGeneralCurrentUser","tasksFeedHeadlineGeneral","tasksFeedMoreAssigneesLabel","tasksFeedAssigneeListTitle","splitRegex","itemID","shouldReturnString","contentItems","split","contentIndex","contentKey","trigger","MENTION","urlMatch","url","getMessageForAction","collaboratorIDs","keys","numberOfCollaborators","versionRange","collaborator","versionUploadCollapsed","versionMultipleUsersUploaded","CollapsedVersion","onInfo","getVersionInfo","VERSION_CARD","ACTION_MAP","VERSION_DELETE_ACTION","versionDeleted","VERSION_PROMOTE_ACTION","versionPromoted","VERSION_RESTORE_ACTION","versionRestored","versionUploaded","Version","version_promoted","getVersionUser","FILE_REQUEST_NAME","fileRequestDisplayName","Checkmark16","vars","Trash16","Pencil16","IconPencil","color","IconRejected","bdlBoxBlue","white","EmptyStatePreviewActivity140","bdlBoxBlue10","modifier","keyIdentifier","ctrlKey","shiftKey","metaKey","String","fromCharCode","Number","components","c","charAt"],"mappings":"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","file":"activity-sidebar.no.react.js","sourcesContent":["// extracted by mini-css-extract-plugin","import * as React from 'react';\nimport uniqueId from 'lodash/uniqueId';\nimport classNames from 'classnames';\n\nimport CheckboxTooltip from './CheckboxTooltip';\n\nimport './Checkbox.scss';\n\nexport interface CheckboxProps {\n    /** Class name for the checkbox */\n    className?: string;\n    /** Description for the checkbox */\n    description?: React.ReactNode;\n    /** fieldLabel - label for the field shown on top of the checkbox */\n    fieldLabel?: React.ReactNode;\n    /** hideLabel - whether the checkbox label is hidden or not */\n    hideLabel?: boolean;\n    /** id - Unique `id` for the input */\n    id?: string;\n    /** isChecked - whether the checkbox is checked or not */\n    isChecked?: boolean; // @TODO: eventually call this `checked`\n    /** isDisabled - whether the checkbox is disabled or not */\n    isDisabled?: boolean; // @TODO: eventually call this `disabled`\n    /** Label displayed for the input */\n    label: React.ReactNode;\n    /** Name of the input */\n    name: string;\n    /** onBlur - blur callback function that takes the event as the argument */\n    onBlur?:\n        | ((e: React.SyntheticEvent<HTMLInputElement, Event>) => React.ReactText)\n        | {\n              (e: React.FocusEvent<HTMLInputElement>): void;\n          };\n    /** onChange - change callback function that takes the event as the argument */\n    onChange?: (e: React.SyntheticEvent<HTMLInputElement, Event>) => string | number | boolean | void;\n    /** Subsection below the checkbox */\n    subsection?: React.ReactNode;\n    /** Tooltip text next to the checkbox label */\n    tooltip?: string;\n    /** Value for the checkbox */\n    value?: string | number | string[];\n}\n\nconst Checkbox = ({\n    className = '',\n    description,\n    fieldLabel,\n    hideLabel,\n    id,\n    isChecked,\n    isDisabled,\n    label,\n    name,\n    onChange,\n    subsection,\n    tooltip,\n    ...rest // @TODO: eventually remove `rest` in favor of explicit props\n}: CheckboxProps) => {\n    const generatedID = React.useRef(uniqueId('checkbox')).current;\n    // use passed-in ID from props; otherwise generate one\n    const inputID = id || generatedID;\n\n    const checkboxAndLabel = (\n        <span className=\"checkbox-label\">\n            <input\n                aria-describedby={description ? `description_${inputID}` : ''}\n                checked={isChecked}\n                disabled={isDisabled}\n                id={inputID}\n                name={name}\n                onChange={onChange}\n                type=\"checkbox\"\n                {...rest}\n            />\n            {/* This span is used for the before/after custom checkbox styles, but mouse clicks will pass through this element\n                    to the underlying <input> */}\n            <span className=\"checkbox-pointer-target\" />\n            <span className={classNames('bdl-Checkbox-labelTooltipWrapper', { 'accessibility-hidden': hideLabel })}>\n                {label && <label htmlFor={inputID}>{label}</label>}\n                {tooltip && <CheckboxTooltip tooltip={tooltip} />}\n            </span>\n        </span>\n    );\n\n    return (\n        <div className={classNames('checkbox-container', className, { 'is-disabled bdl-is-disabled': isDisabled })}>\n            {fieldLabel && <div className=\"label\">{fieldLabel}</div>}\n            {checkboxAndLabel}\n            {description ? (\n                <div id={`description_${inputID}`} className=\"checkbox-description\">\n                    {description}\n                </div>\n            ) : null}\n            {subsection ? <div className=\"checkbox-subsection\">{subsection}</div> : null}\n        </div>\n    );\n};\n\nexport default Checkbox;\n","import * as React from 'react';\nimport { FieldProps } from 'formik';\n\nimport CheckboxPrimitive, { CheckboxProps } from './Checkbox';\n\nexport type CheckboxFieldProps = Partial<FieldProps> & CheckboxProps;\n\nconst CheckboxField = ({ field, ...rest }: CheckboxFieldProps) => {\n    if (!field) {\n        return <CheckboxPrimitive {...rest} />;\n    }\n    const { value } = field;\n    return <CheckboxPrimitive {...field} {...rest} isChecked={!!value} />;\n};\n\nexport default CheckboxField;\n","import * as React from 'react';\nimport { defineMessages, FormattedMessage } from 'react-intl';\n\nimport IconInfo from '../../icons/general/IconInfo';\nimport Tooltip from '../tooltip';\n\nconst messages = defineMessages({\n    checkboxTooltipIconInfoText: {\n        defaultMessage: 'Info',\n        description: 'Icon to display more information on the checkbox',\n        id: 'boxui.checkboxTooltip.iconInfoText',\n    },\n});\n\nexport interface CheckboxTooltipProps {\n    tooltip: string;\n}\n\nconst CheckboxTooltip = ({ tooltip }: CheckboxTooltipProps) => (\n    <div className=\"checkbox-tooltip-wrapper\">\n        <Tooltip text={tooltip}>\n            <div className=\"info-tooltip\">\n                <IconInfo\n                    height={16}\n                    title={<FormattedMessage {...messages.checkboxTooltipIconInfoText} />}\n                    width={16}\n                />\n            </div>\n        </Tooltip>\n    </div>\n);\n\nexport default CheckboxTooltip;\n","export { default } from './Checkbox';\nexport { default as CheckboxField } from './CheckboxField';\n","// extracted by mini-css-extract-plugin","import * as React from 'react';\nimport Avatar from '../avatar';\nimport DatalistItem from '../datalist-item';\n\nimport { ContactType } from '../../features/unified-share-modal/types';\nimport { SuggestedPillType } from '../pill-selector-dropdown/types';\n\nimport './ContactDatalistItem.scss';\n\nexport interface ContactDatalistItemProps {\n    getContactAvatarUrl?: (contact: ContactType) => string | Promise<string | null | undefined>;\n    getPillImageUrl?: (data: SuggestedPillType) => string | Promise<string>;\n    id?: string;\n    isExternal?: boolean;\n    name: string | null | undefined;\n    showAvatar?: boolean;\n    subtitle?: React.ReactNode;\n}\n\ninterface ContactDatalistItemState {\n    avatarUrl: string | null | undefined;\n}\n\nclass ContactDatalistItem extends React.PureComponent<ContactDatalistItemProps, ContactDatalistItemState> {\n    constructor(props: ContactDatalistItemProps) {\n        super(props);\n        this.state = { avatarUrl: undefined };\n    }\n\n    isMounted = false;\n\n    /**\n     * Success handler for getting avatar url\n     *\n     * @param {string} [avatarUrl] the user avatar url\n     */\n    getAvatarUrlHandler = (avatarUrl: string | null | undefined) => {\n        if (this.isMounted) {\n            this.setState({\n                avatarUrl,\n            });\n        }\n    };\n\n    /**\n     * Gets the avatar URL for the user from the getContactAvatarUrl prop\n     *\n     * @return {void}\n     */\n    getAvatarUrl() {\n        const { getContactAvatarUrl, id } = this.props;\n        Promise.resolve(\n            getContactAvatarUrl && id\n                ? getContactAvatarUrl({\n                      id,\n                  })\n                : undefined,\n        )\n            .then(this.getAvatarUrlHandler)\n            .catch(() => {\n                // noop\n            });\n    }\n\n    componentDidMount() {\n        this.isMounted = true;\n        this.getAvatarUrl();\n    }\n\n    componentWillUnmount() {\n        this.isMounted = false;\n    }\n\n    render() {\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const { getContactAvatarUrl, id, isExternal, name, showAvatar, subtitle, ...rest } = this.props;\n        const { avatarUrl } = this.state;\n        return (\n            <DatalistItem className=\"contact-data-list-item\" {...rest}>\n                {showAvatar && (\n                    <Avatar\n                        className=\"contact-avatar\"\n                        id={id}\n                        name={name}\n                        isExternal={isExternal}\n                        shouldShowExternal\n                        avatarUrl={avatarUrl}\n                    />\n                )}\n                <div className=\"contact-name-container\">\n                    <div className=\"contact-text contact-name\">{name}</div>\n                    {subtitle && <div className=\"contact-text contact-sub-name\">{subtitle}</div>}\n                </div>\n            </DatalistItem>\n        );\n    }\n}\n\nexport default ContactDatalistItem;\n","// @flow\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport classNames from 'classnames';\nimport uniqueId from 'lodash/uniqueId';\n\nimport { Editor } from 'draft-js';\nimport type { EditorState } from 'draft-js';\nimport 'draft-js/dist/Draft.css';\n\nimport Tooltip from '../tooltip';\n\nimport commonMessages from '../../common/messages';\nimport './DraftJSEditor.scss';\n\nconst OptionalFormattedMessage = () => (\n    <span className=\"bdl-Label-optional\">\n        (<FormattedMessage {...commonMessages.optional} />)\n    </span>\n);\ntype Props = {\n    description?: React.Node,\n    editorState: EditorState,\n    error?: ?Object,\n    hideLabel?: boolean,\n    inputProps: Object,\n    isDisabled?: boolean,\n    isRequired?: boolean,\n    label: React.Node,\n    onBlur: Function,\n    onChange: Function,\n    onFocus: Function,\n    onReturn?: Function,\n    placeholder?: string,\n};\n\nclass DraftJSEditor extends React.Component<Props> {\n    static defaultProps = {\n        inputProps: {},\n        isRequired: false,\n        isFocused: false,\n    };\n\n    /**\n     * Calls onChange handler passed in\n     * @param {EditorState} editorState The new/updated editor state\n     * @returns {void}\n     */\n    handleChange = (editorState: EditorState) => {\n        const { onChange } = this.props;\n\n        onChange(editorState);\n    };\n\n    handleBlur = (editorState: EditorState) => {\n        const { onBlur } = this.props;\n\n        onBlur(editorState);\n    };\n\n    /**\n     * Event handler which being passed to 'handleReturn' prop of DraftJSEditor\n     * This gives consumer the ability to handle return key event before DraftJSEditor handles it.\n     * @param {SyntheticKeyboardEvent} event\n     * @returns {string}\n     */\n    handleReturn = (event: SyntheticKeyboardEvent<>) => {\n        const { onReturn, inputProps } = this.props;\n\n        if (onReturn && !inputProps['aria-activedescendant']) {\n            // Return 'handled' tells DraftJS Editor to not handle return key event,\n            // return 'not-handled' tells DraftJS Editor to continue handle the return key event.\n            // We encapsulate this DraftJS Editor specific contract here, and use true/fase\n            // to indicate whether to let DraftJS Editor handle return event or not in the upper level.\n            return onReturn(event) ? 'handled' : 'not-handled';\n        }\n\n        return 'not-handled';\n    };\n\n    labelID = uniqueId('label');\n\n    descriptionID = uniqueId('description');\n\n    render() {\n        const {\n            editorState,\n            error,\n            hideLabel,\n            inputProps,\n            isDisabled,\n            isRequired,\n            label,\n            description,\n            onFocus,\n            placeholder,\n        } = this.props;\n\n        const { handleBlur, handleChange } = this;\n\n        const classes = classNames({\n            'draft-js-editor': true,\n            'is-disabled bdl-is-disabled': isDisabled,\n            'show-error': !!error,\n        });\n\n        let a11yProps = {};\n        if (inputProps.role) {\n            a11yProps = {\n                ariaActiveDescendantID: inputProps['aria-activedescendant'],\n                ariaAutoComplete: inputProps['aria-autocomplete'],\n                ariaExpanded: inputProps['aria-expanded'],\n                ariaOwneeID: inputProps['aria-owns'],\n                ariaMultiline: true,\n                role: 'textbox',\n            };\n        }\n\n        return (\n            <div className={classes}>\n                <span className={classNames('bdl-Label', { 'accessibility-hidden': hideLabel })} id={this.labelID}>\n                    {label}\n                    {!isRequired && <OptionalFormattedMessage />}\n                </span>\n                <span className=\"accessibility-hidden screenreader-description\" id={this.descriptionID}>\n                    {description}\n                </span>\n\n                <Tooltip isShown={!!error} position=\"bottom-left\" text={error ? error.message : ''} theme=\"error\">\n                    {/* need div so tooltip can set aria-describedby */}\n                    <div>\n                        <Editor\n                            {...a11yProps}\n                            ariaLabelledBy={this.labelID}\n                            ariaDescribedBy={this.descriptionID}\n                            editorState={editorState}\n                            handleReturn={this.handleReturn}\n                            onBlur={handleBlur}\n                            onChange={handleChange}\n                            onFocus={onFocus}\n                            placeholder={placeholder}\n                            readOnly={isDisabled}\n                            stripPastedStyles\n                        />\n                    </div>\n                </Tooltip>\n            </div>\n        );\n    }\n}\n\nexport default DraftJSEditor;\n","// extracted by mini-css-extract-plugin","// @flow\nexport { default } from './DraftJSEditor';\n","// @flow\nimport * as React from 'react';\nimport { CompositeDecorator, EditorState } from 'draft-js';\nimport noop from 'lodash/noop';\n\nimport DraftJSMentionSelectorCore from './DraftJSMentionSelectorCore';\nimport DraftMentionItem from './DraftMentionItem';\nimport FormInput from '../form/FormInput';\nimport * as messages from '../input-messages';\nimport type { SelectorItems } from '../../../common/types/core';\n\n/**\n * Scans a Draft ContentBlock for entity ranges, so they can be annotated\n * @see docs at {@link https://draftjs.org/docs/advanced-topics-decorators.html#compositedecorator}\n * @param {ContentBlock} contentBlock\n * @param {function} callback\n * @param {ContentState} contentState\n */\nconst mentionStrategy = (contentBlock, callback, contentState) => {\n    contentBlock.findEntityRanges(character => {\n        const entityKey = character.getEntity();\n\n        const ret = entityKey !== null && contentState.getEntity(entityKey).getType() === 'MENTION';\n        return ret;\n    }, callback);\n};\n\ntype Props = {\n    className?: string,\n    contacts: SelectorItems<>,\n    contactsLoaded?: boolean,\n    description?: React.Node,\n    editorState?: EditorState,\n    hideLabel?: boolean,\n    isDisabled?: boolean,\n    isRequired?: boolean,\n    label: React.Node,\n    maxLength?: number,\n    mentionTriggers?: Array<string>,\n    minLength?: number,\n    name: string,\n    onChange: Function,\n    onFocus?: Function,\n    onMention?: Function,\n    onReturn?: Function,\n    placeholder?: string,\n    selectorRow?: React.Element<any>,\n    startMentionMessage?: React.Node,\n    validateOnBlur?: boolean,\n};\n\ntype State = {\n    contacts: SelectorItems<>,\n    error: ?Object,\n    internalEditorState: ?EditorState,\n    isTouched: boolean,\n};\n\nclass DraftJSMentionSelector extends React.Component<Props, State> {\n    static defaultProps = {\n        isRequired: false,\n        onChange: noop,\n        validateOnBlur: true,\n    };\n\n    constructor(props: Props) {\n        super(props);\n\n        const mentionDecorator = new CompositeDecorator([\n            {\n                strategy: mentionStrategy,\n                component: DraftMentionItem,\n            },\n        ]);\n\n        // @NOTE (smotraghi 2017-05-30):\n        // This component might be either own its EditorState (in which case it lives in `this.state.internalEditorState`)\n        // or be a controlled component whose EditorState is passed in via the `editorState` prop.\n        // If `props.editorState` is set, `internalEditorState` is `null`,\n        // otherwise we initialize it here\n        this.state = {\n            contacts: [],\n            isTouched: false,\n            internalEditorState: props.editorState ? null : EditorState.createEmpty(mentionDecorator),\n            error: null,\n        };\n    }\n\n    static getDerivedStateFromProps(nextProps: Props) {\n        const { contacts } = nextProps;\n        return contacts ? { contacts } : null;\n    }\n\n    componentDidUpdate(prevProps: Props, prevState: State) {\n        const { internalEditorState: prevInternalEditorState } = prevState;\n        const { internalEditorState } = this.state;\n\n        const { editorState: prevEditorStateFromProps } = prevProps;\n        const { editorState } = this.props;\n\n        // Determine whether we're working with the internal editor state or\n        // external editor state passed in from props\n        const prevEditorState = prevInternalEditorState || prevEditorStateFromProps;\n        const currentEditorState = internalEditorState || editorState;\n\n        // Only handle isTouched state transitions and check validity if the\n        // editorState references are different. This is to avoid getting stuck\n        // in an infinite loop of checking validity because checkValidity always\n        // calls setState({ error })\n        if (prevEditorState && currentEditorState && prevEditorState !== currentEditorState) {\n            const newState = this.getDerivedStateFromEditorState(currentEditorState, prevEditorState);\n            if (newState) {\n                this.setState(newState, this.checkValidityIfAllowed);\n            } else {\n                this.checkValidityIfAllowed();\n            }\n        }\n    }\n\n    getDerivedStateFromEditorState(currentEditorState: EditorState, previousEditorState: EditorState) {\n        const isPreviousEditorStateEmpty = this.isEditorStateEmpty(previousEditorState);\n        const isCurrentEditorStateEmpty = this.isEditorStateEmpty(currentEditorState);\n        const isNewEditorState = isCurrentEditorStateEmpty && !isPreviousEditorStateEmpty;\n        const isEditorStateDirty = isPreviousEditorStateEmpty && !isCurrentEditorStateEmpty;\n\n        let newState = null;\n        // Detect case where controlled EditorState is created anew and empty.\n        // If next editorState is empty and the current editorState is not empty\n        // that means it is a new empty state and this component should not be marked dirty\n        if (isNewEditorState) {\n            newState = { isTouched: false, error: null };\n        } else if (isEditorStateDirty) {\n            // Detect case where controlled EditorState has been made dirty\n            // If the current editorState is empty and the next editorState is not\n            // empty then this is the first interaction so mark this component dirty\n            newState = { isTouched: true };\n        }\n\n        return newState;\n    }\n\n    checkValidityIfAllowed() {\n        const { validateOnBlur }: Props = this.props;\n\n        if (!validateOnBlur) {\n            this.checkValidity();\n        }\n    }\n\n    isEditorStateEmpty(editorState: EditorState): boolean {\n        const text = editorState\n            .getCurrentContent()\n            .getPlainText()\n            .trim();\n        const lastChangeType = editorState.getLastChangeType();\n\n        return text.length === 0 && lastChangeType === null;\n    }\n\n    /**\n     * @returns {string}\n     */\n    getErrorFromValidityState() {\n        const { editorState: externalEditorState, isRequired, maxLength, minLength } = this.props;\n        const { internalEditorState } = this.state;\n\n        // manually check for content length if isRequired is true\n        const editorState: EditorState = internalEditorState || externalEditorState;\n        const { length } = editorState\n            .getCurrentContent()\n            .getPlainText()\n            .trim();\n\n        if (isRequired && !length) {\n            return messages.valueMissing();\n        }\n\n        if (typeof minLength !== 'undefined' && length < minLength) {\n            return messages.tooShort(minLength);\n        }\n\n        if (typeof maxLength !== 'undefined' && length > maxLength) {\n            return messages.tooLong(maxLength);\n        }\n\n        return null;\n    }\n\n    containerEl: ?HTMLDivElement;\n\n    /**\n     * Event handler called on blur. Triggers validation\n     * @param {SyntheticFocusEvent} event The event object\n     * @returns {void}\n     */\n    handleBlur = (event: SyntheticFocusEvent<>) => {\n        if (\n            this.props.validateOnBlur &&\n            this.containerEl &&\n            event.relatedTarget instanceof Node &&\n            !this.containerEl.contains(event.relatedTarget)\n        ) {\n            this.checkValidity();\n        }\n    };\n\n    handleFocus = (event: SyntheticEvent<>) => {\n        const { onFocus } = this.props;\n\n        if (onFocus) {\n            onFocus(event);\n        }\n    };\n\n    /**\n     * Updates editorState, rechecks validity\n     * @param {EditorState} nextEditorState The new editor state to set in the state\n     * @returns {void}\n     */\n    handleChange = (nextEditorState: EditorState) => {\n        const { internalEditorState }: State = this.state;\n        const { onChange }: Props = this.props;\n\n        onChange(nextEditorState);\n\n        if (internalEditorState) {\n            this.setState({ internalEditorState: nextEditorState });\n        }\n    };\n\n    handleValidityStateUpdateHandler = () => {\n        const { isTouched } = this.state;\n\n        if (!isTouched) {\n            return;\n        }\n\n        const error = this.getErrorFromValidityState();\n\n        this.setState({ error });\n    };\n\n    checkValidity = () => {\n        this.handleValidityStateUpdateHandler();\n    };\n\n    render() {\n        const {\n            className = '',\n            contactsLoaded,\n            editorState: externalEditorState,\n            hideLabel,\n            isDisabled,\n            isRequired,\n            label,\n            description,\n            mentionTriggers,\n            name,\n            onMention,\n            placeholder,\n            selectorRow,\n            startMentionMessage,\n            onReturn,\n        } = this.props;\n        const { contacts, internalEditorState, error } = this.state;\n        const { handleBlur, handleChange, handleFocus } = this;\n        const editorState: EditorState = internalEditorState || externalEditorState;\n\n        return (\n            <div\n                ref={containerEl => {\n                    this.containerEl = containerEl;\n                }}\n                className={className}\n            >\n                <FormInput name={name} onValidityStateUpdate={this.handleValidityStateUpdateHandler}>\n                    <DraftJSMentionSelectorCore\n                        contacts={contacts}\n                        contactsLoaded={contactsLoaded}\n                        editorState={editorState}\n                        error={error}\n                        hideLabel={hideLabel}\n                        isDisabled={isDisabled}\n                        isRequired={isRequired}\n                        label={label}\n                        description={description}\n                        mentionTriggers={mentionTriggers}\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        onFocus={handleFocus}\n                        onMention={onMention}\n                        onReturn={onReturn}\n                        placeholder={placeholder}\n                        selectorRow={selectorRow}\n                        startMentionMessage={startMentionMessage}\n                    />\n                </FormInput>\n            </div>\n        );\n    }\n}\n\nexport default DraftJSMentionSelector;\n","// @flow\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport classNames from 'classnames';\nimport { EditorState } from 'draft-js';\n\nimport DatalistItem from '../../datalist-item';\nimport DraftJSEditor from '../../draft-js-editor';\nimport SelectorDropdown from '../../selector-dropdown';\nimport { addMention, defaultMentionTriggers, getActiveMentionForEditorState } from './utils';\n\nimport messages from './messages';\n\nimport type { SelectorItems } from '../../../common/types/core';\nimport type { Mention } from './utils';\n\nimport './MentionSelector.scss';\n\ntype DefaultSelectorRowProps = {\n    item?: {\n        email?: string,\n        name?: string,\n    },\n};\n\nconst DefaultSelectorRow = ({ item = {}, ...rest }: DefaultSelectorRowProps) => (\n    <DatalistItem {...rest}>\n        {item.name} <span className=\"dropdown-secondary-text\">{item.email}</span>\n    </DatalistItem>\n);\n\nconst DefaultStartMentionMessage = () => <FormattedMessage {...messages.startMention} />;\n\ntype MentionStartStateProps = {\n    message?: React.Node,\n};\n\nconst MentionStartState = ({ message }: MentionStartStateProps) => (\n    <div role=\"alert\" className=\"mention-start-state\">\n        {message}\n    </div>\n);\n\ntype Props = {\n    className?: string,\n    contacts: SelectorItems<>,\n    contactsLoaded?: boolean,\n    description?: React.Node,\n    editorState: EditorState,\n    error?: ?Object,\n    hideLabel?: boolean,\n    isDisabled?: boolean,\n    isRequired?: boolean,\n    label: React.Node,\n    mentionTriggers: Array<string>,\n    onBlur?: Function,\n    onChange?: Function,\n    onFocus?: Function,\n    onMention?: Function,\n    onReturn?: Function,\n    placeholder?: string,\n    selectorRow: React.Element<any>,\n    startMentionMessage?: React.Node,\n};\n\ntype State = {\n    activeMention: Mention | null,\n    isFocused: boolean,\n    mentionPattern: RegExp,\n};\n\nclass DraftJSMentionSelector extends React.Component<Props, State> {\n    static defaultProps = {\n        className: '',\n        contacts: [],\n        isDisabled: false,\n        isRequired: false,\n        mentionTriggers: defaultMentionTriggers,\n        selectorRow: <DefaultSelectorRow />,\n        startMentionMessage: <DefaultStartMentionMessage />,\n    };\n\n    constructor(props: Props) {\n        super(props);\n        const mentionTriggers = props.mentionTriggers.reduce((prev, current) => `${prev}\\\\${current}`, '');\n\n        this.state = {\n            activeMention: null,\n            isFocused: false,\n            mentionPattern: new RegExp(`([${mentionTriggers}])([^${mentionTriggers}]*)$`),\n        };\n    }\n\n    /**\n     * Lifecycle method that gets called immediately after an update\n     * @param {object} lastProps Props the component is receiving\n     * @returns {void}\n     */\n    componentDidUpdate(prevProps: Props) {\n        const { contacts: prevContacts } = prevProps;\n        const { contacts: currentContacts } = this.props;\n        const { activeMention } = this.state;\n\n        if (activeMention !== null && !currentContacts.length && prevContacts.length !== currentContacts.length) {\n            // if empty set of contacts get passed in, set active mention to null\n            this.setState({\n                activeMention: null,\n            });\n        }\n    }\n\n    /**\n     * Extracts the active mention from the editor state\n     *\n     * @param {EditorState} editorState\n     * @returns {object}\n     */\n    getActiveMentionForEditorState(editorState: EditorState) {\n        const { mentionPattern } = this.state;\n\n        return getActiveMentionForEditorState(editorState, mentionPattern);\n    }\n\n    /**\n     * Called on each keypress when a mention is being composed\n     * @returns {void}\n     */\n    handleMention = () => {\n        const { onMention } = this.props;\n        const { activeMention } = this.state;\n\n        if (onMention) {\n            onMention(activeMention ? activeMention.mentionString : '');\n        }\n    };\n\n    /**\n     * Method that gets called when a mention contact is selected\n     * @param {number} index The selected index\n     * @returns {void}\n     */\n    handleContactSelected = (index: number) => {\n        const { contacts } = this.props;\n        this.addMention(contacts[index]);\n        this.setState(\n            {\n                activeMention: null,\n                isFocused: true,\n            },\n            () => {\n                this.handleMention();\n            },\n        );\n    };\n\n    handleBlur = (event: SyntheticEvent<>) => {\n        const { onBlur } = this.props;\n\n        this.setState({\n            isFocused: false,\n        });\n\n        if (onBlur) {\n            onBlur(event);\n        }\n    };\n\n    handleFocus = (event: SyntheticEvent<>) => {\n        const { onFocus } = this.props;\n\n        this.setState({\n            isFocused: true,\n        });\n\n        if (onFocus) {\n            onFocus(event);\n        }\n    };\n\n    /**\n     * Event handler called when DraftJSEditor emits onChange\n     * Checks current text to see if any mentions were made\n     * @param {EditorState} editorState The new editor state\n     * @returns {void}\n     */\n    handleChange = (nextEditorState: EditorState) => {\n        const { onChange } = this.props;\n        const activeMention = this.getActiveMentionForEditorState(nextEditorState);\n\n        this.setState(\n            {\n                activeMention,\n            },\n            () => {\n                if (onChange) {\n                    onChange(nextEditorState);\n                }\n\n                if (activeMention && activeMention.mentionString) {\n                    this.handleMention();\n                }\n            },\n        );\n    };\n\n    /**\n     * Inserts a selected mention into the editor\n     * @param {object} mention The selected mention to insert\n     */\n    addMention(mention: Object) {\n        const { activeMention } = this.state;\n        const { editorState } = this.props;\n\n        const editorStateWithLink = addMention(editorState, activeMention, mention);\n\n        this.setState(\n            {\n                activeMention: null,\n            },\n            () => {\n                this.handleChange(editorStateWithLink);\n            },\n        );\n    }\n\n    /**\n     * @returns {boolean}\n     */\n    shouldDisplayMentionLookup = () => {\n        const { contacts } = this.props;\n        const { activeMention } = this.state;\n\n        return !!(activeMention && activeMention.mentionString && contacts.length);\n    };\n\n    render() {\n        const {\n            className,\n            contacts,\n            contactsLoaded,\n            editorState,\n            error,\n            hideLabel,\n            isDisabled,\n            isRequired,\n            label,\n            description,\n            onReturn,\n            placeholder,\n            selectorRow,\n            startMentionMessage,\n            onMention,\n        } = this.props;\n        const { activeMention, isFocused } = this.state;\n\n        const classes = classNames('mention-selector-wrapper', className);\n\n        const showMentionStartState = !!(onMention && activeMention && !activeMention.mentionString && isFocused);\n\n        const usersFoundMessage = this.shouldDisplayMentionLookup()\n            ? { ...messages.usersFound, values: { usersCount: contacts.length } }\n            : messages.noUsersFound;\n\n        return (\n            <div className={classes}>\n                <SelectorDropdown\n                    onSelect={this.handleContactSelected}\n                    selector={\n                        <DraftJSEditor\n                            editorState={editorState}\n                            error={error}\n                            hideLabel={hideLabel}\n                            isDisabled={isDisabled}\n                            isFocused={isFocused}\n                            isRequired={isRequired}\n                            label={label}\n                            description={description}\n                            onBlur={this.handleBlur}\n                            onFocus={this.handleFocus}\n                            onChange={this.handleChange}\n                            onReturn={onReturn}\n                            placeholder={placeholder}\n                        />\n                    }\n                >\n                    {this.shouldDisplayMentionLookup()\n                        ? contacts.map(contact =>\n                              React.cloneElement(selectorRow, {\n                                  ...selectorRow.props,\n                                  ...contact,\n                                  key: contact.id,\n                              }),\n                          )\n                        : []}\n                </SelectorDropdown>\n                {showMentionStartState ? <MentionStartState message={startMentionMessage} /> : null}\n                {contactsLoaded && (\n                    <span className=\"accessibility-hidden\" data-testid=\"accessibility-alert\" role=\"alert\">\n                        <FormattedMessage {...usersFoundMessage} />\n                    </span>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default DraftJSMentionSelector;\n","// @flow\nimport { CompositeDecorator } from 'draft-js';\n\nimport DraftMentionItem from './DraftMentionItem';\n\nconst mentionStrategy = (contentBlock, callback, contentState) => {\n    contentBlock.findEntityRanges(character => {\n        const entityKey = character.getEntity();\n\n        const ret = entityKey !== null && contentState.getEntity(entityKey).getType() === 'MENTION';\n        return ret;\n    }, callback);\n};\n\nconst DraftMentionDecorator = new CompositeDecorator([\n    {\n        strategy: mentionStrategy,\n        component: DraftMentionItem,\n    },\n]);\n\nexport default DraftMentionDecorator;\n","// @flow\nimport * as React from 'react';\nimport { ContentState } from 'draft-js';\n\ntype Props = {\n    children: React.Node, // React.ChildrenArray<React.Element<any>> unsupported by babel-plugin-flow-react-proptypes\n    contentState: ContentState,\n    decoratedText: string,\n    entityKey?: string,\n};\n\nconst DraftMentionItem = ({ contentState, entityKey, children }: Props) => {\n    let id = '';\n    if (entityKey) {\n        id = contentState.getEntity(entityKey).getData().id;\n    }\n\n    return <a href={`/profile/${id}`}>{children}</a>;\n};\n\nexport default DraftMentionItem;\n","// extracted by mini-css-extract-plugin","// @flow\nimport { ContentState, EditorState, Modifier, SelectionState } from 'draft-js';\nimport DraftMentionDecorator from './DraftMentionDecorator';\n\n// returns data for first mention in a string\nconst getMentionFromText = (text: string) => {\n    // RegEx.exec() is stateful, so we create a new regex instance each time\n    const mentionRegex = /([@＠﹫])\\[([0-9]+):([^\\]]+)]/gi;\n    const matchArray = mentionRegex.exec(text);\n    if (!matchArray) {\n        return null;\n    }\n    const [fullMatch, triggerSymbol, id, name] = matchArray;\n    const start = matchArray.index;\n    const end = start + fullMatch.length;\n    const data = { id, name, content: `${triggerSymbol}${name}` };\n    return { start, end, data };\n};\n\n// creates draftjs state with mentions parsed into entities\nconst createMentionSelectorState = (message: string = '') => {\n    let contentState = ContentState.createFromText(message);\n    let contentBlock = contentState.getFirstBlock();\n\n    while (contentBlock != null) {\n        const text = contentBlock.getText();\n        const mention = text ? getMentionFromText(text) : null;\n        if (mention == null) {\n            contentBlock = contentState.getBlockAfter(contentBlock.getKey());\n        } else {\n            const { data, start, end } = mention;\n            contentState.createEntity('MENTION', 'IMMUTABLE', data);\n            const mentionEntityKey = contentState.getLastCreatedEntityKey();\n            const mentionRange = SelectionState.createEmpty(contentBlock.getKey()).merge({\n                anchorOffset: start,\n                focusOffset: end,\n            });\n            contentState = Modifier.replaceText(contentState, mentionRange, data.content, null, mentionEntityKey);\n            contentBlock = contentState.getBlockForKey(contentBlock.getKey());\n        }\n    }\n    return EditorState.createWithContent(contentState, DraftMentionDecorator);\n};\n\nexport default createMentionSelectorState;\n","// @flow\nexport * from './utils';\nexport { default } from './DraftJSMentionSelector';\nexport { default as createMentionSelectorState } from './createMentionSelectorState';\nexport { default as DraftMentionDecorator } from './DraftMentionDecorator';\n","// @flow\nimport { defineMessages } from 'react-intl';\n\nconst messages = defineMessages({\n    startMention: {\n        defaultMessage: 'Mention someone to notify them',\n        description: 'Message to display when a user triggers a mention',\n        id: 'boxui.draftjs.mentionSelector.startMention',\n    },\n    noUsersFound: {\n        defaultMessage: 'No users found',\n        description: 'Message for screenReader users when trying to tag a user but there are no matches',\n        id: 'boxui.draftjs.mentionSelector.noUsersFound',\n    },\n    usersFound: {\n        defaultMessage: '{usersCount, plural, one {one user found} other {{usersCount} users found}}',\n        description: 'Message for screenReader users when a certain number of users is being tagged',\n        id: 'boxui.draftjs.mentionSelector.usersFound',\n    },\n});\n\nexport default messages;\n","// @flow\nimport { EditorState, Modifier } from 'draft-js';\n\nexport type Mention = {\n    blockID: string,\n    end: number,\n    mentionString: string,\n    mentionTrigger: string,\n    start: number,\n};\n\nconst defaultMentionTriggers = ['@', '＠', '﹫'];\nconst defaultMentionTriggersString = defaultMentionTriggers.reduce((prev, current) => `${prev}\\\\${current}`, '');\nconst defaultMentionPattern = new RegExp(`([${defaultMentionTriggersString}])([^${defaultMentionTriggersString}]*)$`);\n\n/**\n * Extracts the active mention from the editor state\n */\nfunction getActiveMentionForEditorState(\n    editorState: EditorState,\n    mentionPattern: RegExp = defaultMentionPattern,\n): Mention | null {\n    const contentState = editorState.getCurrentContent();\n    const selectionState = editorState.getSelection();\n\n    const startKey = selectionState.getStartKey();\n    const activeBlock = contentState.getBlockForKey(startKey);\n\n    const cursorPosition = selectionState.getStartOffset();\n\n    let result = null;\n\n    // Break the active block into entity ranges.\n    activeBlock.findEntityRanges(\n        character => character.getEntity() === null,\n        (start, end) => {\n            // Find the active range (is the cursor inside this range?)\n            if (start <= cursorPosition && cursorPosition <= end) {\n                // Determine if the active range contains a mention.\n                const activeRangeText = activeBlock.getText().substr(start, cursorPosition - start);\n                const mentionMatch = activeRangeText.match(mentionPattern);\n\n                if (mentionMatch) {\n                    result = {\n                        blockID: startKey,\n                        mentionString: mentionMatch[2],\n                        mentionTrigger: mentionMatch[1],\n                        start: start + mentionMatch.index,\n                        end: cursorPosition,\n                    };\n                }\n            }\n\n            return null;\n        },\n    );\n\n    return result;\n}\n\n/**\n * Inserts a selected mention into the editor\n */\nfunction addMention(editorState: EditorState, activeMention: Mention | null, mention: Object): EditorState {\n    const { start, end } = activeMention || {};\n\n    const { id, name } = mention;\n\n    const contentState = editorState.getCurrentContent();\n    const selectionState = editorState.getSelection();\n\n    const preInsertionSelectionState = selectionState.merge({\n        anchorOffset: start,\n        focusOffset: end,\n    });\n\n    const textToInsert = `@${name}`;\n\n    const contentStateWithEntity = contentState.createEntity('MENTION', 'IMMUTABLE', { id });\n\n    const entityKey = contentStateWithEntity.getLastCreatedEntityKey();\n\n    const contentStateWithLink = Modifier.replaceText(\n        contentState,\n        preInsertionSelectionState,\n        textToInsert,\n        null,\n        entityKey,\n    );\n\n    const spaceOffset = preInsertionSelectionState.getStartOffset() + textToInsert.length;\n    const selectionStateForAddingSpace = preInsertionSelectionState.merge({\n        anchorOffset: spaceOffset,\n        focusOffset: spaceOffset,\n    });\n\n    const contentStateWithLinkAndExtraSpace = Modifier.insertText(\n        contentStateWithLink,\n        selectionStateForAddingSpace,\n        ' ',\n    );\n\n    const editorStateWithLink = EditorState.push(editorState, contentStateWithLinkAndExtraSpace, 'change-block-type');\n\n    return editorStateWithLink;\n}\n\n/**\n * Formats the editor's text such that it will be accepted by the server.\n */\nfunction getFormattedCommentText(editorState: EditorState): { hasMention: boolean, text: string } {\n    const contentState = editorState.getCurrentContent();\n    const blockMap = contentState.getBlockMap();\n\n    const resultStringArr = [];\n\n    // The API needs to explicitly know if a message contains a mention.\n    let hasMention = false;\n\n    // For all ContentBlocks in the ContentState:\n    blockMap.forEach(block => {\n        const text = block.getText();\n        const blockMapStringArr = [];\n\n        // Break down the ContentBlock into ranges\n        block.findEntityRanges(\n            () => true,\n            (start, end) => {\n                const entityKey = block.getEntityAt(start);\n                // If the range is an Entity, format its text eg \"@[1:Username]\"\n                // Otherwise append its text to the block result as-is\n                if (entityKey) {\n                    const entity = contentState.getEntity(entityKey);\n                    const stringToAdd = `@[${entity.getData().id}:${text.substring(start + 1, end)}]`;\n                    blockMapStringArr.push(stringToAdd);\n                    hasMention = true;\n                } else {\n                    blockMapStringArr.push(text.substring(start, end));\n                }\n            },\n        );\n        resultStringArr.push(blockMapStringArr.join(''));\n    });\n\n    // Concatenate the array of block strings with newlines\n    // (Each block represents a paragraph)\n    return { text: resultStringArr.join('\\n'), hasMention };\n}\n\nexport {\n    addMention,\n    defaultMentionTriggers,\n    defaultMentionPattern,\n    getActiveMentionForEditorState,\n    getFormattedCommentText,\n};\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\n\nclass FormInput extends Component {\n    static propTypes = {\n        children: PropTypes.node.isRequired,\n        /** callback called when Form pushed down a new validityState, useful for displaying server validation errors */\n        onValidityStateUpdate: PropTypes.func.isRequired,\n        /** Input name */\n        name: PropTypes.string.isRequired,\n    };\n\n    static contextTypes = {\n        form: PropTypes.shape({\n            registerInput: PropTypes.func.isRequired,\n            unregisterInput: PropTypes.func.isRequired,\n        }),\n    };\n\n    componentDidMount() {\n        const { name, onValidityStateUpdate } = this.props;\n\n        if (this.context.form) {\n            this.context.form.registerInput(name, onValidityStateUpdate);\n        }\n    }\n\n    componentWillUnmount() {\n        if (this.context.form) {\n            this.context.form.unregisterInput(this.props.name);\n        }\n    }\n\n    render() {\n        return <div>{this.props.children}</div>;\n    }\n}\n\nexport default FormInput;\n","// @flow\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport commonMessages from '../../common/messages';\n\nconst badInput = () => ({\n    code: 'badInput',\n    message: <FormattedMessage {...commonMessages.invalidInputError} />,\n});\n\nconst patternMismatch = () => ({\n    code: 'patternMismatch',\n    message: <FormattedMessage {...commonMessages.invalidInputError} />,\n});\n\nconst tooShort = (minLength: number) => ({\n    code: 'tooShort',\n    message: <FormattedMessage {...commonMessages.minLengthError} values={{ min: minLength }} />,\n});\n\nconst tooLong = (maxLength: number) => ({\n    code: 'tooLong',\n    message: <FormattedMessage {...commonMessages.maxLengthError} values={{ max: maxLength }} />,\n});\n\nconst typeMismatchEmail = () => ({\n    code: 'typeMismatch',\n    message: <FormattedMessage {...commonMessages.invalidEmailError} />,\n});\n\nconst typeMismatchUrl = () => ({\n    code: 'typeMismatch',\n    message: <FormattedMessage {...commonMessages.invalidURLError} />,\n});\n\nconst valueMissing = () => ({\n    code: 'valueMissing',\n    message: <FormattedMessage {...commonMessages.requiredFieldError} />,\n});\n\nexport { badInput, patternMismatch, tooShort, tooLong, typeMismatchEmail, typeMismatchUrl, valueMissing };\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport LinkBase, { LinkBaseProps } from './LinkBase';\n\nexport interface LinkButtonProps extends LinkBaseProps {\n    children: React.ReactChild;\n    className?: string;\n    size?: 'large';\n}\n\nconst LinkButton = ({ className = '', size, ...rest }: LinkButtonProps) => (\n    <LinkBase className={classNames('btn', className, { 'bdl-btn--large': size === 'large' })} {...rest} />\n);\n\nexport default LinkButton;\n","import * as React from 'react';\n\nimport Link from './Link';\n\nexport interface LinkGroupProps {\n    children: Array<React.ReactElement<Link>>;\n    className: string;\n    title?: React.ReactNode;\n}\n\n// TODO: convert to stateless function\n// eslint-disable-next-line react/prefer-stateless-function\nclass LinkGroup extends React.Component<LinkGroupProps> {\n    static defaultProps = {\n        title: '',\n        className: '',\n    };\n\n    render() {\n        const { title, children, className } = this.props;\n\n        return (\n            <div className={`link-group ${className}`}>\n                {title ? <div className=\"link-group-title\">{title}</div> : null}\n                <ul>{React.Children.map(children, (item, i) => (item ? <li key={i}>{item} </li> : null))}</ul>\n            </div>\n        );\n    }\n}\n\nexport default LinkGroup;\n","import * as React from 'react';\n\nimport LinkButton, { LinkButtonProps } from './LinkButton';\n\nexport interface LinkPrimaryButtonProps extends LinkButtonProps {\n    className?: string;\n}\n\nconst LinkPrimaryButton = ({ className = '', ...rest }: LinkPrimaryButtonProps) => (\n    <LinkButton className={`btn-primary ${className}`} {...rest} />\n);\n\nexport default LinkPrimaryButton;\n","export { default as Link } from './Link';\nexport { default as LinkButton } from './LinkButton';\nexport { default as LinkGroup } from './LinkGroup';\nexport { default as LinkPrimaryButton } from './LinkPrimaryButton';\n","// extracted by mini-css-extract-plugin","import * as React from 'react';\nimport classnames from 'classnames';\n\nimport MediaFigure from './MediaFigure';\nimport MediaBody from './MediaBody';\nimport MediaMenu from './MediaMenu';\nimport './Media.scss';\n\nexport interface MediaProps {\n    /** Component to use as outermost element, e.g., 'li' */\n    as?: React.ElementType;\n\n    /** Child elements */\n    children: Array<React.ReactElement<typeof MediaFigure | typeof MediaBody | typeof MediaMenu>>;\n\n    /** Additional class names */\n    className?: string;\n\n    /** Additional inline styles */\n    style?: React.CSSProperties;\n}\n\nconst Media = ({ as: Wrapper = 'div', children, className, ...rest }: MediaProps) => (\n    <Wrapper className={classnames('bdl-Media', className)} {...rest}>\n        {children}\n    </Wrapper>\n);\n\nMedia.Body = MediaBody;\nMedia.Menu = MediaMenu;\nMedia.Figure = MediaFigure;\n\nexport default Media;\n","import * as React from 'react';\nimport classnames from 'classnames';\n\nimport './Media.scss';\n\nexport interface MediaBodyProps {\n    /** Child elements */\n    children: React.ReactNode;\n\n    /** Additional class names */\n    className?: string;\n\n    /** Additional inline styles */\n    style?: React.CSSProperties;\n}\n\nconst MediaBody = ({ className, children, ...rest }: MediaBodyProps) => (\n    <div className={classnames('bdl-Media-body', className)} {...rest}>\n        {children}\n    </div>\n);\n\nexport default MediaBody;\n","import * as React from 'react';\nimport classnames from 'classnames';\n\nimport './Media.scss';\n\nexport interface MediaFigureProps {\n    /** Component to use as outermost element, e.g., 'div' */\n    as?: React.ElementType;\n\n    /** Child elements */\n    children: React.ReactNode;\n\n    /** Additional class names */\n    className?: string;\n\n    /** Additional inline styles */\n    style?: React.CSSProperties;\n}\n\nconst MediaFigure = ({ as: Wrapper = 'div', className, children, ...rest }: MediaFigureProps) => (\n    <Wrapper className={classnames('bdl-Media-figure', className)} {...rest}>\n        {children}\n    </Wrapper>\n);\n\nexport default MediaFigure;\n","import * as React from 'react';\nimport classnames from 'classnames';\n\nimport { injectIntl, WrappedComponentProps } from 'react-intl';\nimport messages from './messages';\nimport IconEllipsis from '../../icons/general/IconEllipsis';\nimport { ButtonType } from '../button';\nimport PlainButton, { PlainButtonProps } from '../plain-button';\n// @ts-ignore TODO: migrate DropdownMenu to typescript\nimport DropdownMenu from '../dropdown-menu';\nimport { Menu } from '../menu';\nimport { bdlGray50 } from '../../styles/variables';\nimport './Media.scss';\n\nexport interface MediaMenuProps extends PlainButtonProps, WrappedComponentProps {\n    /** Child elements */\n    children: Array<React.ReactNode> | React.ReactChild;\n\n    /** Additional class names for the menu button */\n    className?: string;\n\n    /** Additional props for the DropdownMenu */\n    dropdownProps?: {};\n\n    /** is the dropdown menu button disabled */\n    isDisabled?: boolean;\n\n    /** Additional props for the Menu */\n    menuProps?: {};\n}\n\nconst MediaMenu = ({\n    className,\n    children,\n    isDisabled = false,\n    dropdownProps = {},\n    menuProps = {},\n    intl,\n    ...rest\n}: MediaMenuProps) => (\n    <DropdownMenu constrainToScrollParent isRightAligned {...dropdownProps}>\n        <PlainButton\n            aria-label={intl.formatMessage(messages.menuButtonArialLabel)}\n            className={classnames('bdl-Media-menu', className)}\n            isDisabled={isDisabled}\n            type={ButtonType.BUTTON}\n            {...rest}\n        >\n            <IconEllipsis color={bdlGray50} height={16} width={16} />\n        </PlainButton>\n        <Menu {...menuProps}>{children}</Menu>\n    </DropdownMenu>\n);\n\nexport default injectIntl(MediaMenu);\n","export { default } from './Media';\n","/**\n * @file i18n messages\n * @author Box\n */\n\nimport { defineMessages } from 'react-intl';\n\nconst messages = defineMessages({\n    menuButtonArialLabel: {\n        id: 'boxui.media.menuButtonArialLabel',\n        defaultMessage: 'Options',\n        description: 'Label for comment options menu',\n    },\n});\n\nexport default messages;\n","// @flow\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { List } from 'immutable';\nimport noop from 'lodash/noop';\n\nimport parseCSV from '../../utils/parseCSV';\nimport Label from '../label';\nimport SelectorDropdown from '../selector-dropdown';\n\nimport PillSelector from './PillSelector';\nimport type { contactType as Contact } from '../../features/unified-share-modal/flowTypes';\nimport type { SelectOptionProp } from '../select-field/props';\nimport type { Option, OptionValue, SelectedOptions, SuggestedPillsFilter } from './flowTypes';\n\nimport './PillSelectorDropdown.scss';\n\ntype Props = {\n    /** If true, user can add pills not included in selector options */\n    allowCustomPills: boolean,\n    /** If true, pills with errors are parsed as pills also */\n    allowInvalidPills: boolean,\n    /** `DatalistItem` components for dropdown options to select */\n    children: React.Node,\n    /** CSS class for the component */\n    className?: string,\n    /** If true, the input control is disabled so no more input can be made */\n    disabled: boolean,\n    /** Index at which to insert a divider */\n    dividerIndex?: number,\n    /** A CSS selector matching the element to use as a boundary when auto-scrolling dropdown elements into view. When not provided, boundary will be determined by scrollIntoView utility function */\n    dropdownScrollBoundarySelector?: string,\n    /** Error message */\n    error?: React.Node,\n    /** Called on pill render to get a specific class name to use for a particular option. Note: Only has effect when showRoundedPills is true. */\n    getPillClassName?: (option: Option) => string,\n    /** Function to retrieve the image URL associated with a pill */\n    getPillImageUrl?: (data: { id: string, [key: string]: any }) => string | Promise<?string>,\n    /** Passed in by `SelectorDropdown` for accessibility */\n    inputProps: Object,\n    /** Input label */\n    label: React.Node,\n    /** Called when pill selector input is blurred */\n    onBlur: (event: SyntheticInputEvent<HTMLInputElement>) => void,\n    /** Should update selectorOptions based on the given input value */\n    onInput: Function,\n    /** Called when creating pills */\n    onPillCreate: (pills: Array<SelectOptionProp | Contact>) => void,\n    /** Should update selectedOptions given the option and index to remove */\n    onRemove: Function,\n    /** Should update selectedOptions given an array of pills and the event */\n    onSelect: Function,\n    /** Function adds a collaborator from suggested collabs to form */\n    onSuggestedPillAdd?: Function,\n    /** Optional title of the overlay */\n    overlayTitle?: string,\n    /** function to parse user input into an array of items to be validated and then added to pill selector. If this function is not passed, a default CSV parser is used. */\n    parseItems?: Function,\n    /** A placeholder to show in the input when there are no pills */\n    placeholder: string,\n    /** Array or Immutable list with data for the selected options shown as pills */\n    selectedOptions: SelectedOptions,\n    /** Array or Immutable list with data for the dropdown options to select */\n    selectorOptions: Array<Object> | List<Object>,\n    /** Determines whether or not input text is cleared automatically when it does not result in new pills being added */\n    shouldClearUnmatchedInput?: boolean,\n    /** Determines whether or not the first item is highlighted automatically when the dropdown opens */\n    shouldSetActiveItemOnOpen?: boolean,\n    /** show avatars (uses showRoundedPills) */\n    showAvatars?: boolean,\n    /** Use rounded style for pills */\n    showRoundedPills?: boolean,\n    /** Array of suggested collaborators */\n    suggestedPillsData?: Array<Object>,\n    /** String decribes the datapoint to filter by so that items in the form are not shown in suggestions. */\n    suggestedPillsFilter?: SuggestedPillsFilter,\n    /** String describes the suggested pills */\n    suggestedPillsTitle?: string,\n    /** Validate the given input value, and update `error` prop if necessary */\n    validateForError?: Function,\n    /** Called to check if pill item data is valid. The `item` is passed in. */\n    validator: (option: Option | OptionValue) => boolean,\n};\n\ntype State = {\n    inputValue: string,\n    isInCompositionMode: boolean,\n};\n\nclass PillSelectorDropdown extends React.Component<Props, State> {\n    static defaultProps = {\n        allowCustomPills: false,\n        allowInvalidPills: false,\n        disabled: false,\n        error: '',\n        inputProps: {},\n        label: '',\n        onBlur: noop,\n        onPillCreate: noop,\n        placeholder: '',\n        selectedOptions: [],\n        selectorOptions: [],\n        shouldClearUnmatchedInput: false,\n        shouldSetActiveItemOnOpen: false,\n        validator: () => true,\n    };\n\n    state = { inputValue: '', isInCompositionMode: false };\n\n    parsePills = (inputValue: string) => {\n        const { allowInvalidPills, parseItems, validator } = this.props;\n        let pills = parseItems ? parseItems(inputValue) : parseCSV(inputValue);\n\n        if (!pills) {\n            return [];\n        }\n\n        if (!allowInvalidPills) {\n            pills = pills.filter(pill => validator(pill));\n        }\n\n        const normalizedPills = pills.map(pill =>\n            typeof pill === 'string'\n                ? {\n                      displayText: pill,\n                      text: pill, // deprecated, left for backwards compatibility\n                      value: pill,\n                  }\n                : pill,\n        );\n        return normalizedPills;\n    };\n\n    addPillsFromInput = (inputValue: string) => {\n        const {\n            allowCustomPills,\n            onPillCreate,\n            onSelect,\n            selectedOptions,\n            shouldClearUnmatchedInput,\n            validateForError,\n        } = this.props;\n\n        // Do nothing if custom pills are not allowed\n        if (!allowCustomPills) {\n            return;\n        }\n\n        // Parse pills from input\n        const pills = this.parsePills(inputValue);\n\n        // \"Select\" the pills\n        if (pills.length > 0) {\n            onSelect(pills);\n            onPillCreate(pills);\n\n            this.resetInputValue();\n        } else {\n            if (validateForError && (inputValue !== '' || selectedOptions.length === 0)) {\n                /**\n                 * If no pills were added, but an inputValue exists or\n                 * there are no pills selected, check for errors\n                 */\n                validateForError(inputValue);\n            }\n            if (shouldClearUnmatchedInput) {\n                this.resetInputValue();\n            }\n        }\n    };\n\n    handleBlur = (event: SyntheticInputEvent<HTMLInputElement>) => {\n        const { onBlur } = this.props;\n        const { inputValue } = this.state;\n        this.addPillsFromInput(inputValue);\n        onBlur(event);\n    };\n\n    handleInput = (event: SyntheticInputEvent<HTMLInputElement> | { target: HTMLInputElement | Object }) => {\n        const { target } = event;\n        const { value } = target;\n        this.setState({ inputValue: value });\n        this.props.onInput(value, event);\n    };\n\n    handleEnter = (event: SyntheticEvent<>) => {\n        const { isInCompositionMode, inputValue } = this.state;\n        if (!isInCompositionMode) {\n            event.preventDefault();\n            this.addPillsFromInput(inputValue);\n        }\n    };\n\n    handlePaste = (event: SyntheticClipboardEvent<HTMLInputElement>) => {\n        event.preventDefault();\n\n        const inputValue: string = event.clipboardData.getData('text');\n        this.setState({ inputValue });\n        this.props.onInput(inputValue, event);\n        this.addPillsFromInput(inputValue);\n    };\n\n    handleSelect = (index: number, event: SyntheticEvent<>) => {\n        const { onPillCreate, onSelect, selectorOptions } = this.props;\n        const selectedOption =\n            // $FlowFixMe\n            typeof selectorOptions.get === 'function' ? selectorOptions.get(index) : selectorOptions[index];\n\n        onSelect([selectedOption], event);\n        onPillCreate([selectedOption]);\n\n        this.handleInput({ target: { value: '' } });\n    };\n\n    handleCompositionStart = () => {\n        this.setState({ isInCompositionMode: true });\n    };\n\n    handleCompositionEnd = () => {\n        this.setState({ isInCompositionMode: false });\n    };\n\n    resetInputValue = () => {\n        const { onInput } = this.props;\n\n        this.setState({ inputValue: '' });\n        onInput('');\n    };\n\n    render() {\n        const {\n            allowInvalidPills,\n            children,\n            className,\n            disabled,\n            dividerIndex,\n            dropdownScrollBoundarySelector,\n            error,\n            getPillClassName,\n            getPillImageUrl,\n            inputProps,\n            label,\n            onRemove,\n            onSuggestedPillAdd,\n            overlayTitle,\n            placeholder,\n            selectedOptions,\n            showAvatars,\n            showRoundedPills,\n            suggestedPillsData,\n            suggestedPillsFilter,\n            suggestedPillsTitle,\n            shouldSetActiveItemOnOpen,\n            validator,\n        } = this.props;\n\n        const selectorDropdownElement = (\n            <SelectorDropdown\n                className={classNames('bdl-PillSelectorDropdown', 'pill-selector-wrapper', className)}\n                dividerIndex={dividerIndex}\n                onEnter={this.handleEnter}\n                onSelect={this.handleSelect}\n                overlayTitle={overlayTitle}\n                scrollBoundarySelector={dropdownScrollBoundarySelector}\n                shouldSetActiveItemOnOpen={shouldSetActiveItemOnOpen}\n                selector={\n                    <PillSelector\n                        onChange={noop} // fix console error\n                        onCompositionEnd={this.handleCompositionEnd}\n                        onCompositionStart={this.handleCompositionStart}\n                        {...inputProps}\n                        allowInvalidPills={allowInvalidPills}\n                        disabled={disabled}\n                        error={error}\n                        getPillClassName={getPillClassName}\n                        getPillImageUrl={getPillImageUrl}\n                        onBlur={this.handleBlur}\n                        onInput={this.handleInput}\n                        onPaste={this.handlePaste}\n                        onRemove={onRemove}\n                        onSuggestedPillAdd={onSuggestedPillAdd}\n                        placeholder={placeholder}\n                        selectedOptions={selectedOptions}\n                        showRoundedPills={showRoundedPills}\n                        showAvatars={showAvatars && showRoundedPills}\n                        suggestedPillsData={suggestedPillsData}\n                        suggestedPillsFilter={suggestedPillsFilter}\n                        suggestedPillsTitle={suggestedPillsTitle}\n                        validator={validator}\n                        value={this.state.inputValue}\n                    />\n                }\n            >\n                {children}\n            </SelectorDropdown>\n        );\n\n        return label ? <Label text={label}>{selectorDropdownElement}</Label> : selectorDropdownElement;\n    }\n}\n\nexport default PillSelectorDropdown;\n","// extracted by mini-css-extract-plugin","// @flow\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport uniqueId from 'lodash/uniqueId';\n\nimport Label from '../label';\nimport Tooltip from '../tooltip';\nimport type { Position } from '../tooltip';\n\nimport './TextArea.scss';\n\ntype Props = {\n    className?: string,\n    description?: React.Node,\n    error?: React.Node,\n    /** Renders error tooltip at the specified position (positions are those from Tooltip) */\n    errorTooltipPosition?: Position,\n    /** Hides the label */\n    hideLabel?: boolean,\n    /** Hides (optional) text from the label */\n    hideOptionalLabel?: boolean,\n    /** Makes the text area value required */\n    isRequired?: boolean,\n    /** Is text area resizable */\n    isResizable?: boolean,\n    /** Label displayed for the text area */\n    label: React.Node,\n    textareaRef?: Function, // @TODO: eventually rename to innerRef for consistancy across all form elements\n    /** A CSS class for the tooltip's tether element component */\n    tooltipTetherClassName?: string,\n};\n\nconst TextArea = ({\n    className = '',\n    description,\n    error,\n    errorTooltipPosition,\n    hideLabel,\n    hideOptionalLabel,\n    isRequired,\n    isResizable,\n    label,\n    textareaRef,\n    tooltipTetherClassName,\n    ...rest\n}: Props) => {\n    const hasError = !!error;\n    const classes = classNames(className, 'text-area-container', {\n        'show-error': hasError,\n    });\n\n    const errorMessageID = React.useRef(uniqueId('errorMessage')).current;\n    const descriptionID = React.useRef(uniqueId('description')).current;\n\n    const ariaAttrs = {\n        'aria-invalid': hasError,\n        'aria-required': isRequired,\n        'aria-errormessage': errorMessageID,\n        'aria-describedby': description ? descriptionID : undefined,\n    };\n\n    return (\n        <div className={classes}>\n            <Label hideLabel={hideLabel} showOptionalText={!hideOptionalLabel && !isRequired} text={label}>\n                {!!description && (\n                    <div id={descriptionID} className=\"text-area-description\">\n                        {description}\n                    </div>\n                )}\n                <Tooltip\n                    isShown={hasError}\n                    position={errorTooltipPosition || 'bottom-left'}\n                    tetherElementClassName={tooltipTetherClassName}\n                    text={error || ''}\n                    theme=\"error\"\n                >\n                    <textarea\n                        ref={textareaRef}\n                        required={isRequired}\n                        style={{ resize: isResizable ? '' : 'none' }}\n                        {...ariaAttrs}\n                        {...rest}\n                    />\n                </Tooltip>\n                <span id={errorMessageID} className=\"accessibility-hidden\" role=\"alert\">\n                    {error}\n                </span>\n            </Label>\n        </div>\n    );\n};\n\nTextArea.displayName = 'TextArea';\n\nexport type TextAreaProps = Props;\nexport default TextArea;\n","// extracted by mini-css-extract-plugin","// @flow\n\nimport * as React from 'react';\nimport getProp from 'lodash/get';\nimport type { FieldProps } from 'formik';\n\nimport TextAreaPrimitive from './TextArea';\nimport type { TextAreaProps } from './TextArea';\n\ntype Props = TextAreaProps & FieldProps & { innerRef?: (instance: any) => void };\n\nconst TextAreaField = ({ field, form, innerRef, isRequired, ...rest }: Props) => {\n    const { name } = field;\n    const { errors, touched } = form;\n    const isTouched = getProp(touched, name);\n    const error = isTouched ? getProp(errors, name) : null;\n    return (\n        <TextAreaPrimitive {...field} {...rest} textareaRef={innerRef} error={error} hideOptionalLabel={isRequired} />\n    );\n};\n\nexport default TextAreaField;\n","// @flow\nexport { default } from './TextArea';\nexport { default as TextAreaField } from './TextAreaField';\n","/**\n * @flow\n * @file Activity feed sidebar component\n * @author Box\n */\n\nimport * as React from 'react';\nimport debounce from 'lodash/debounce';\nimport flow from 'lodash/flow';\nimport getProp from 'lodash/get';\nimport noop from 'lodash/noop';\nimport { FormattedMessage } from 'react-intl';\nimport { type ContextRouter } from 'react-router-dom';\nimport ActivityFeed from './activity-feed';\nimport AddTaskButton from './AddTaskButton';\nimport API from '../../api';\nimport messages from '../common/messages';\nimport SidebarContent from './SidebarContent';\nimport { WithAnnotatorContextProps, withAnnotatorContext } from '../common/annotator-context';\nimport { EVENT_DATA_READY, EVENT_JS_READY } from '../common/logger/constants';\nimport { getBadUserError, getBadItemError } from '../../utils/error';\nimport { mark } from '../../utils/performance';\nimport { withAPIContext } from '../common/api-context';\nimport { withErrorBoundary } from '../common/error-boundary';\nimport { withFeatureConsumer, isFeatureEnabled } from '../common/feature-checking';\nimport { withLogger } from '../common/logger';\nimport { withRouterAndRef } from '../common/routing';\nimport ActivitySidebarFilter from './ActivitySidebarFilter';\nimport {\n    DEFAULT_COLLAB_DEBOUNCE,\n    ERROR_CODE_FETCH_ACTIVITY,\n    ORIGIN_ACTIVITY_SIDEBAR,\n    SIDEBAR_VIEW_ACTIVITY,\n    TASK_COMPLETION_RULE_ALL,\n} from '../../constants';\nimport type {\n    TaskCompletionRule,\n    TaskType,\n    TaskNew,\n    TaskUpdatePayload,\n    TaskCollabStatus,\n} from '../../common/types/tasks';\nimport type {\n    Annotation,\n    AnnotationPermission,\n    BoxCommentPermission,\n    CommentFeedItemType,\n    FocusableFeedItemType,\n    FeedItems,\n    FeedItemStatus,\n} from '../../common/types/feed';\nimport type { ElementsErrorCallback, ErrorContextProps, ElementsXhrError } from '../../common/types/api';\nimport type { WithLoggerProps } from '../../common/types/logging';\nimport type { SelectorItems, User, UserMini, GroupMini, BoxItem } from '../../common/types/core';\nimport type { GetProfileUrlCallback } from '../common/flowTypes';\nimport type { Translations, Collaborators, Errors } from './flowTypes';\nimport type { FeatureConfig } from '../common/feature-checking';\nimport './ActivitySidebar.scss';\n\ntype ExternalProps = {\n    activeFeedEntryId?: string,\n    activeFeedEntryType?: FocusableFeedItemType,\n    currentUser?: User,\n    getUserProfileUrl?: GetProfileUrlCallback,\n    hasReplies?: boolean,\n    hasTasks?: boolean,\n    hasVersions?: boolean,\n    onCommentCreate: Function,\n    onCommentDelete: (comment: Comment) => any,\n    onCommentUpdate: () => any,\n    onTaskAssignmentUpdate: Function,\n    onTaskCreate: Function,\n    onTaskDelete: (id: string) => any,\n    onTaskUpdate: () => any,\n    onTaskView: (id: string, isCreator: boolean) => any,\n} & ErrorContextProps &\n    WithAnnotatorContextProps;\n\ntype PropsWithoutContext = {\n    elementId: string,\n    file: BoxItem,\n    hasSidebarInitialized?: boolean,\n    isDisabled: boolean,\n    onAnnotationSelect: Function,\n    onVersionChange: Function,\n    onVersionHistoryClick?: Function,\n    translations?: Translations,\n} & ExternalProps &\n    WithLoggerProps &\n    ContextRouter;\n\ntype Props = {\n    api: API,\n    features: FeatureConfig,\n} & PropsWithoutContext;\n\ntype State = {\n    activityFeedError?: Errors,\n    approverSelectorContacts: SelectorItems<UserMini | GroupMini>,\n    contactsLoaded?: boolean,\n    currentUser?: User,\n    currentUserError?: Errors,\n    feedItems?: FeedItems,\n    feedItemsStatusFilter?: FeedItemStatus,\n    mentionSelectorContacts?: SelectorItems<UserMini>,\n};\n\nexport const activityFeedInlineError: Errors = {\n    inlineError: {\n        title: messages.errorOccured,\n        content: messages.activityFeedItemApiError,\n    },\n};\n\nconst MARK_NAME_DATA_LOADING = `${ORIGIN_ACTIVITY_SIDEBAR}_data_loading`;\nconst MARK_NAME_DATA_READY = `${ORIGIN_ACTIVITY_SIDEBAR}_${EVENT_DATA_READY}`;\nconst MARK_NAME_JS_READY = `${ORIGIN_ACTIVITY_SIDEBAR}_${EVENT_JS_READY}`;\n\nmark(MARK_NAME_JS_READY);\n\nclass ActivitySidebar extends React.PureComponent<Props, State> {\n    static defaultProps = {\n        annotatorState: {},\n        emitAnnotatorActiveChangeEvent: noop,\n        getAnnotationsMatchPath: noop,\n        getAnnotationsPath: noop,\n        hasReplies: false,\n        hasTasks: true,\n        hasVersions: true,\n        isDisabled: false,\n        onAnnotationSelect: noop,\n        onCommentCreate: noop,\n        onCommentDelete: noop,\n        onCommentUpdate: noop,\n        onTaskAssignmentUpdate: noop,\n        onTaskCreate: noop,\n        onTaskDelete: noop,\n        onTaskUpdate: noop,\n        onVersionChange: noop,\n        onVersionHistoryClick: noop,\n    };\n\n    constructor(props: Props) {\n        super(props);\n        // eslint-disable-next-line react/prop-types\n        const { logger } = this.props;\n\n        mark(MARK_NAME_DATA_LOADING);\n\n        logger.onReadyMetric({\n            endMarkName: MARK_NAME_JS_READY,\n        });\n        this.state = {};\n    }\n\n    componentDidMount() {\n        const { currentUser } = this.props;\n\n        this.fetchFeedItems(true);\n        this.fetchCurrentUser(currentUser);\n    }\n\n    handleAnnotationDelete = ({ id, permissions }: { id: string, permissions: AnnotationPermission }) => {\n        const { api, file } = this.props;\n\n        api.getFeedAPI(false).deleteAnnotation(\n            file,\n            id,\n            permissions,\n            this.deleteAnnotationSuccess.bind(this, id),\n            this.feedErrorCallback,\n        );\n\n        this.fetchFeedItems();\n    };\n\n    handleAnnotationEdit = (id: string, text: string, permissions: AnnotationPermission) => {\n        const { api, file } = this.props;\n\n        api.getFeedAPI(false).updateAnnotation(\n            file,\n            id,\n            text,\n            undefined,\n            permissions,\n            this.feedSuccessCallback,\n            this.feedErrorCallback,\n        );\n\n        this.fetchFeedItems();\n    };\n\n    handleAnnotationStatusChange = (id: string, status: FeedItemStatus, permissions: AnnotationPermission) => {\n        const { api, file } = this.props;\n\n        api.getFeedAPI(false).updateAnnotation(\n            file,\n            id,\n            undefined,\n            status,\n            permissions,\n            this.feedSuccessCallback,\n            this.feedErrorCallback,\n        );\n\n        this.fetchFeedItems();\n    };\n\n    deleteAnnotationSuccess(id: string) {\n        const { emitRemoveEvent } = this.props;\n\n        this.feedSuccessCallback();\n        emitRemoveEvent(id);\n    }\n\n    /**\n     * Fetches a Users info\n     *\n     * @private\n     * @param {User} [user] - Box User. If missing, gets user that the current token was generated for.\n     * @param {boolean} shouldDestroy\n     * @return {void}\n     */\n    fetchCurrentUser(user?: User, shouldDestroy: boolean = false): void {\n        const { api, file } = this.props;\n\n        if (!file) {\n            throw getBadItemError();\n        }\n\n        if (typeof user === 'undefined') {\n            api.getUsersAPI(shouldDestroy).getUser(\n                file.id,\n                this.fetchCurrentUserSuccessCallback,\n                this.fetchCurrentUserErrorCallback,\n            );\n        } else {\n            this.setState({ currentUser: user, currentUserError: undefined });\n        }\n    }\n\n    /**\n     * Success callback for fetching feed items\n     */\n    feedSuccessCallback = (): void => {\n        this.fetchFeedItems();\n    };\n\n    /**\n     * Error callback for fetching feed items\n     *\n     * @param {Error} e - the error which occured\n     * @param {Error} code - the code for the error\n     * @param {Object} contextInfo - the context info for the error\n     */\n    feedErrorCallback = (e: ElementsXhrError, code: string, contextInfo?: Object) => {\n        this.errorCallback(e, code, contextInfo);\n        this.fetchFeedItems();\n    };\n\n    createTask = (\n        message: string,\n        assignees: SelectorItems<>,\n        taskType: TaskType,\n        dueAt: ?string,\n        completionRule: TaskCompletionRule,\n        onSuccess: ?Function,\n        onError: ?Function,\n    ): void => {\n        const { currentUser } = this.state;\n        const { file, api } = this.props;\n\n        if (!currentUser) {\n            throw getBadUserError();\n        }\n        const errorCallback = (e, code, contextInfo) => {\n            if (onError) {\n                onError(e, code, contextInfo);\n            }\n            this.feedErrorCallback(e, code, contextInfo);\n        };\n        const successCallback = () => {\n            if (onSuccess) {\n                onSuccess();\n            }\n            this.feedSuccessCallback();\n        };\n\n        api.getFeedAPI(false).createTaskNew(\n            file,\n            currentUser,\n            message,\n            assignees,\n            taskType,\n            dueAt,\n            completionRule,\n            successCallback,\n            errorCallback,\n        );\n\n        // need to load the pending item\n        this.fetchFeedItems();\n    };\n\n    deleteTask = (task: TaskNew): void => {\n        const { file, api, onTaskDelete } = this.props;\n        api.getFeedAPI(false).deleteTaskNew(\n            file,\n            task,\n            (taskId: string) => {\n                this.feedSuccessCallback();\n                onTaskDelete(taskId);\n            },\n            this.feedErrorCallback,\n        );\n\n        // need to load the pending item\n        this.fetchFeedItems();\n    };\n\n    updateTask = (task: TaskUpdatePayload, onSuccess: ?Function, onError: ?Function): void => {\n        const { file, api, onTaskUpdate } = this.props;\n        const errorCallback = (e, code) => {\n            if (onError) {\n                onError(e, code);\n            }\n            this.feedErrorCallback(e, code);\n        };\n        const successCallback = () => {\n            this.feedSuccessCallback();\n\n            if (onSuccess) {\n                onSuccess();\n            }\n\n            onTaskUpdate();\n        };\n\n        api.getFeedAPI(false).updateTaskNew(file, task, successCallback, errorCallback);\n\n        // need to load the pending item\n        this.fetchFeedItems();\n    };\n\n    updateTaskAssignment = (taskId: string, taskAssignmentId: string, status: TaskCollabStatus): void => {\n        const { file, api, onTaskAssignmentUpdate } = this.props;\n        const { currentUser = {} } = this.state;\n\n        const successCallback = () => {\n            this.feedSuccessCallback();\n            onTaskAssignmentUpdate(taskId, taskAssignmentId, status, currentUser.id);\n        };\n\n        api.getFeedAPI(false).updateTaskCollaborator(\n            file,\n            taskId,\n            taskAssignmentId,\n            status,\n            successCallback,\n            this.feedErrorCallback,\n        );\n\n        // need to load the pending item\n        this.fetchFeedItems();\n    };\n\n    /**\n     * Deletes a comment via the API.\n     *\n     * @param {Object} args - A subset of the comment\n     * @return void\n     */\n    deleteComment = ({ id, permissions }: { id: string, permissions: BoxCommentPermission }): void => {\n        const { file, api, hasReplies, onCommentDelete } = this.props;\n\n        const successCallback = (comment: Comment) => {\n            this.feedSuccessCallback();\n            onCommentDelete(comment);\n        };\n\n        if (hasReplies) {\n            api.getFeedAPI(false).deleteThreadedComment(file, id, permissions, successCallback, this.feedErrorCallback);\n        } else {\n            api.getFeedAPI(false).deleteComment(file, id, permissions, successCallback, this.feedErrorCallback);\n        }\n\n        // need to load the pending item\n        this.fetchFeedItems();\n    };\n\n    updateComment = (\n        id: string,\n        text?: string,\n        status?: FeedItemStatus,\n        hasMention: boolean,\n        permissions: BoxCommentPermission,\n        onSuccess: ?Function,\n        onError: ?Function,\n    ): void => {\n        const { api, file, hasReplies, onCommentUpdate } = this.props;\n\n        const errorCallback = (e, code) => {\n            if (onError) {\n                onError(e, code);\n            }\n            this.feedErrorCallback(e, code);\n        };\n\n        const successCallback = () => {\n            this.feedSuccessCallback();\n            if (onSuccess) {\n                onSuccess();\n            }\n            onCommentUpdate();\n        };\n\n        if (hasReplies) {\n            api.getFeedAPI(false).updateThreadedComment(\n                file,\n                id,\n                text,\n                status,\n                hasMention,\n                permissions,\n                successCallback,\n                errorCallback,\n            );\n        } else {\n            api.getFeedAPI(false).updateComment(\n                file,\n                id,\n                text || '',\n                hasMention,\n                permissions,\n                successCallback,\n                errorCallback,\n            );\n        }\n\n        // need to load the pending item\n        this.fetchFeedItems();\n    };\n\n    /**\n     * Posts a new comment to the API\n     *\n     * @param {string} text - The comment's text\n     * @param {boolean} hasMention - The comment's text\n     * @return {void}\n     */\n    createComment = (text: string, hasMention: boolean): void => {\n        const { file, api, hasReplies, onCommentCreate } = this.props;\n        const { currentUser } = this.state;\n\n        if (!currentUser) {\n            throw getBadUserError();\n        }\n\n        const successCallback = (comment: Comment) => {\n            onCommentCreate(comment);\n            this.feedSuccessCallback();\n        };\n\n        if (hasReplies) {\n            api.getFeedAPI(false).createThreadedComment(\n                file,\n                currentUser,\n                text,\n                hasMention,\n                successCallback,\n                this.feedErrorCallback,\n            );\n        } else {\n            api.getFeedAPI(false).createComment(\n                file,\n                currentUser,\n                text,\n                hasMention,\n                successCallback,\n                this.feedErrorCallback,\n            );\n        }\n\n        // need to load the pending item\n        this.fetchFeedItems();\n    };\n\n    /**\n     * Posts a new reply to the API\n     *\n     * @param {string} parentId - The id of the parent item\n     * @param {CommentFeedItemType} parentType - The type of the parent item\n     * @param {string} text - The text of reply\n     * @param {boolean} hasMention - Indicator of using mention feature\n     * @return {void}\n     */\n    createReply = (parentId: string, parentType: CommentFeedItemType, text: string, hasMention: boolean): void => {\n        const { file, api } = this.props;\n        const { currentUser } = this.state;\n\n        if (!currentUser) {\n            throw getBadUserError();\n        }\n\n        api.getFeedAPI(false).createReply(\n            file,\n            currentUser,\n            parentId,\n            parentType,\n            text,\n            hasMention,\n            this.feedSuccessCallback,\n            this.feedErrorCallback,\n        );\n\n        // need to load the pending item\n        this.fetchFeedItems();\n    };\n\n    /**\n     * Deletes an app activity item via the API.\n     *\n     * @param {Object} args - A subset of the app activity\n     * @return void\n     */\n    deleteAppActivity = ({ id }: { id: string }): void => {\n        const { file, api } = this.props;\n\n        api.getFeedAPI(false).deleteAppActivity(file, id, this.feedSuccessCallback, this.feedErrorCallback);\n\n        // need to load the pending item\n        this.fetchFeedItems();\n    };\n\n    /**\n     * Fetches the feed items for the sidebar\n     *\n     * @param {boolean} shouldRefreshCache true if the cache should be refreshed\n     * @param {boolean} shouldDestroy true if the api factory should be destroyed\n     */\n    fetchFeedItems(shouldRefreshCache: boolean = false, shouldDestroy: boolean = false) {\n        const {\n            file,\n            api,\n            features,\n            hasReplies: shouldShowReplies,\n            hasTasks: shouldShowTasks,\n            hasVersions: shouldShowVersions,\n        } = this.props;\n        const shouldShowAppActivity = isFeatureEnabled(features, 'activityFeed.appActivity.enabled');\n        const shouldShowAnnotations = isFeatureEnabled(features, 'activityFeed.annotations.enabled');\n\n        api.getFeedAPI(shouldDestroy).feedItems(\n            file,\n            shouldRefreshCache,\n            this.fetchFeedItemsSuccessCallback,\n            this.fetchFeedItemsErrorCallback,\n            this.errorCallback,\n            { shouldShowAnnotations, shouldShowAppActivity, shouldShowReplies, shouldShowTasks, shouldShowVersions },\n        );\n    }\n\n    /**\n     * Handles a successful feed API fetch\n     *\n     * @private\n     * @param {Array} feedItems - the feed items\n     * @return {void}\n     */\n    fetchFeedItemsSuccessCallback = (feedItems: FeedItems): void => {\n        const {\n            file: { id: fileId },\n            logger,\n        } = this.props;\n\n        mark(MARK_NAME_DATA_READY);\n\n        // Only emit metric if has >1 activity feed items (there should always at least be the current version)\n        if (feedItems.length > 1) {\n            logger.onDataReadyMetric(\n                {\n                    endMarkName: MARK_NAME_DATA_READY,\n                    startMarkName: MARK_NAME_DATA_LOADING,\n                },\n                fileId,\n            );\n        }\n\n        this.setState({ feedItems, activityFeedError: undefined });\n    };\n\n    /**\n     * Handles a failed feed item fetch\n     *\n     * @private\n     * @param {Error} e - API error\n     * @return {void}\n     */\n    fetchFeedItemsErrorCallback = (feedItems: FeedItems, errors: ElementsXhrError[]): void => {\n        const { onError } = this.props;\n\n        this.setState({\n            feedItems,\n            activityFeedError: activityFeedInlineError,\n        });\n\n        if (Array.isArray(errors) && errors.length) {\n            onError(new Error('Fetch feed items error'), ERROR_CODE_FETCH_ACTIVITY, {\n                showNotification: true,\n                errors: errors.map(({ code }) => code),\n            });\n        }\n    };\n\n    /**\n     * Network error callback\n     *\n     * @private\n     * @param {Error} error - Error object\n     * @param {Error} code - the code for the error\n     * @param {Object} contextInfo - the context info for the error\n     * @return {void}\n     */\n    errorCallback = (error: ElementsXhrError, code: string, contextInfo: Object = {}): void => {\n        /* eslint-disable no-console */\n        console.error(error);\n        /* eslint-enable no-console */\n\n        // eslint-disable-next-line react/prop-types\n        this.props.onError(error, code, contextInfo);\n    };\n\n    /**\n     * User fetch success callback\n     *\n     * @private\n     * @param {Object} currentUser - User info object\n     * @return {void}\n     */\n    fetchCurrentUserSuccessCallback = (currentUser: User): void => {\n        this.setState({ currentUser, currentUserError: undefined });\n    };\n\n    /**\n     * File approver contacts fetch success callback\n     *\n     * @private\n     * @param {BoxItemCollection} collaborators - Collaborators response data\n     * @return {void}\n     */\n    getApproverContactsSuccessCallback = (collaborators: { entries: SelectorItems<> }): void => {\n        const { entries } = collaborators;\n        this.setState({ approverSelectorContacts: entries });\n    };\n\n    /**\n     * File @mention contacts fetch success callback\n     *\n     * @private\n     * @param {BoxItemCollection} collaborators - Collaborators response data\n     * @return {void}\n     */\n    getMentionContactsSuccessCallback = (collaborators: { entries: SelectorItems<> }): void => {\n        const { entries } = collaborators;\n        this.setState({ contactsLoaded: false }, () =>\n            this.setState({\n                contactsLoaded: true,\n                mentionSelectorContacts: entries,\n            }),\n        );\n    };\n\n    /**\n     * File @mention contacts fetch success callback\n     *\n     * @private\n     * @param {string} searchStr - Search string to filter file collaborators by\n     * @return {void}\n     */\n    getApproverWithQuery = debounce(\n        (searchStr: string) =>\n            this.getCollaborators(this.getApproverContactsSuccessCallback, this.errorCallback, searchStr, {\n                includeGroups: true,\n            }),\n        DEFAULT_COLLAB_DEBOUNCE,\n    );\n\n    /**\n     * Fetches file @mention's\n     *\n     * @private\n     * @param {string} searchStr - Search string to filter file collaborators by\n     * @return {void}\n     */\n    getMentionWithQuery = debounce(\n        (searchStr: string) =>\n            this.getCollaborators(this.getMentionContactsSuccessCallback, this.errorCallback, searchStr),\n        DEFAULT_COLLAB_DEBOUNCE,\n    );\n\n    /**\n     * Fetches file collaborators\n     *\n     * @param {Function} successCallback - the success callback\n     * @param {Function} errorCallback - the error callback\n     * @param {string} searchStr - the search string\n     * @param {Object} [options]\n     * @param {boolean} [options.includeGroups] - return groups as well as users\n     * @return {void}\n     */\n    getCollaborators(\n        successCallback: Collaborators => void,\n        errorCallback: ElementsErrorCallback,\n        searchStr: string,\n        { includeGroups = false }: { includeGroups: boolean } = {},\n    ): void {\n        // Do not fetch without filter\n        const { file, api } = this.props;\n        if (!searchStr || searchStr.trim() === '') {\n            return;\n        }\n\n        api.getFileCollaboratorsAPI(true).getFileCollaborators(file.id, successCallback, errorCallback, {\n            filter_term: searchStr,\n            include_groups: includeGroups,\n            include_uploader_collabs: false,\n        });\n    }\n\n    /**\n     * Handles a failed file user info fetch\n     *\n     * @private\n     * @param {ElementsXhrError} e - API error\n     * @return {void}\n     */\n    fetchCurrentUserErrorCallback = (e: ElementsXhrError, code: string) => {\n        this.setState({\n            currentUser: undefined,\n            currentUserError: {\n                maskError: {\n                    errorHeader: messages.currentUserErrorHeaderMessage,\n                    errorSubHeader: messages.defaultErrorMaskSubHeaderMessage,\n                },\n            },\n        });\n\n        this.errorCallback(e, code, {\n            error: e,\n        });\n    };\n\n    /**\n     * Gets the user avatar URL\n     *\n     * @param {string} userId the user id\n     * @param {string} fileId the file id\n     * @return the user avatar URL string for a given user with access token attached\n     */\n    getAvatarUrl = async (userId: string): Promise<?string> => {\n        const { file, api } = this.props;\n\n        return api.getUsersAPI(false).getAvatarUrlWithAccessToken(userId, file.id);\n    };\n\n    handleAnnotationSelect = (annotation: Annotation): void => {\n        const { file_version, id: nextActiveAnnotationId } = annotation;\n        const {\n            emitAnnotatorActiveChangeEvent,\n            file,\n            getAnnotationsMatchPath,\n            getAnnotationsPath,\n            history,\n            location,\n            onAnnotationSelect,\n        } = this.props;\n        const annotationFileVersionId = getProp(file_version, 'id');\n        const currentFileVersionId = getProp(file, 'file_version.id');\n        const match = getAnnotationsMatchPath(location);\n        const selectedFileVersionId = getProp(match, 'params.fileVersionId', currentFileVersionId);\n\n        emitAnnotatorActiveChangeEvent(nextActiveAnnotationId);\n\n        if (annotationFileVersionId && annotationFileVersionId !== selectedFileVersionId) {\n            history.push(getAnnotationsPath(annotationFileVersionId, nextActiveAnnotationId));\n        }\n\n        onAnnotationSelect(annotation);\n    };\n\n    handleItemsFiltered = (status?: FeedItemStatus) => {\n        this.setState({ feedItemsStatusFilter: status });\n    };\n\n    getFilteredFeedItems = (): FeedItems | typeof undefined => {\n        const { feedItems, feedItemsStatusFilter } = this.state;\n        if (!feedItems || !feedItemsStatusFilter) {\n            return feedItems;\n        }\n        return feedItems.filter(item => {\n            return item.status === feedItemsStatusFilter || item.type === 'file_version';\n        });\n    };\n\n    onTaskModalClose = () => {\n        this.setState({\n            approverSelectorContacts: [],\n        });\n    };\n\n    refresh(shouldRefreshCache: boolean = true): void {\n        this.fetchFeedItems(shouldRefreshCache);\n    }\n\n    renderAddTaskButton = () => {\n        const { isDisabled, hasTasks } = this.props;\n        const { approverSelectorContacts } = this.state;\n        const { getApproverWithQuery, getAvatarUrl, createTask, onTaskModalClose } = this;\n\n        if (!hasTasks) {\n            return null;\n        }\n\n        return (\n            <AddTaskButton\n                isDisabled={isDisabled}\n                onTaskModalClose={onTaskModalClose}\n                taskFormProps={{\n                    approvers: [],\n                    approverSelectorContacts,\n                    completionRule: TASK_COMPLETION_RULE_ALL,\n                    createTask,\n                    getApproverWithQuery,\n                    getAvatarUrl,\n                    id: '',\n                    message: '',\n                }}\n            />\n        );\n    };\n\n    renderActivitySidebarFilter = () => {\n        const { features } = this.props;\n        const { feedItemsStatusFilter } = this.state;\n        const shouldShowActivityFeedFilter = isFeatureEnabled(features, 'activityFeed.filter.enabled');\n\n        if (!shouldShowActivityFeedFilter) {\n            return null;\n        }\n        return (\n            <ActivitySidebarFilter\n                feedItemStatus={feedItemsStatusFilter}\n                onFeedItemStatusClick={selectedStatus => {\n                    this.handleItemsFiltered(selectedStatus);\n                }}\n            />\n        );\n    };\n\n    renderActions = () => (\n        <>\n            {this.renderActivitySidebarFilter()}\n            {this.renderAddTaskButton()}\n        </>\n    );\n\n    renderTitle = () => {\n        const { features } = this.props;\n        if (isFeatureEnabled(features, 'activityFeed.filter.enabled')) {\n            return undefined;\n        }\n        return <FormattedMessage {...messages.sidebarActivityTitle} />;\n    };\n\n    render() {\n        const {\n            elementId,\n            file,\n            isDisabled = false,\n            onVersionHistoryClick,\n            getUserProfileUrl,\n            activeFeedEntryId,\n            activeFeedEntryType,\n            onTaskView,\n        } = this.props;\n        const {\n            currentUser,\n            approverSelectorContacts,\n            mentionSelectorContacts,\n            contactsLoaded,\n            activityFeedError,\n            currentUserError,\n        } = this.state;\n\n        return (\n            <SidebarContent\n                actions={this.renderActions()}\n                className=\"bcs-activity\"\n                elementId={elementId}\n                sidebarView={SIDEBAR_VIEW_ACTIVITY}\n                title={this.renderTitle()}\n            >\n                <ActivityFeed\n                    activeFeedEntryId={activeFeedEntryId}\n                    activeFeedEntryType={activeFeedEntryType}\n                    activityFeedError={activityFeedError}\n                    approverSelectorContacts={approverSelectorContacts}\n                    currentUser={currentUser}\n                    currentUserError={currentUserError}\n                    feedItems={this.getFilteredFeedItems()}\n                    file={file}\n                    getApproverWithQuery={this.getApproverWithQuery}\n                    getAvatarUrl={this.getAvatarUrl}\n                    getMentionWithQuery={this.getMentionWithQuery}\n                    getUserProfileUrl={getUserProfileUrl}\n                    isDisabled={isDisabled}\n                    mentionSelectorContacts={mentionSelectorContacts}\n                    contactsLoaded={contactsLoaded}\n                    onAnnotationDelete={this.handleAnnotationDelete}\n                    onAnnotationEdit={this.handleAnnotationEdit}\n                    onAnnotationSelect={this.handleAnnotationSelect}\n                    onAnnotationStatusChange={this.handleAnnotationStatusChange}\n                    onAppActivityDelete={this.deleteAppActivity}\n                    onCommentCreate={this.createComment}\n                    onCommentDelete={this.deleteComment}\n                    onCommentUpdate={this.updateComment}\n                    onReplyCreate={this.createReply}\n                    onTaskAssignmentUpdate={this.updateTaskAssignment}\n                    onTaskCreate={this.createTask}\n                    onTaskDelete={this.deleteTask}\n                    onTaskModalClose={this.onTaskModalClose}\n                    onTaskUpdate={this.updateTask}\n                    onTaskView={onTaskView}\n                    onVersionHistoryClick={onVersionHistoryClick}\n                />\n            </SidebarContent>\n        );\n    }\n}\n\nexport type ActivitySidebarProps = ExternalProps;\nexport { ActivitySidebar as ActivitySidebarComponent };\nexport default flow([\n    withLogger(ORIGIN_ACTIVITY_SIDEBAR),\n    withErrorBoundary(ORIGIN_ACTIVITY_SIDEBAR),\n    withAPIContext,\n    withFeatureConsumer,\n    withAnnotatorContext,\n    withRouterAndRef,\n])(ActivitySidebar);\n","// extracted by mini-css-extract-plugin","/**\n * @flow\n * @file Activity feed sidebar filter component\n * @author Box\n */\n\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport DropdownMenu, { MenuToggle } from '../../components/dropdown-menu';\nimport PlainButton from '../../components/plain-button';\nimport messages from './messages';\nimport { COMMENT_STATUS_OPEN, COMMENT_STATUS_RESOLVED } from '../../constants';\nimport { Menu, SelectMenuItem } from '../../components/menu';\nimport type { FeedItemStatus } from '../../common/types/feed';\nimport './ActivitySidebarFilter.scss';\n\ntype ActivitySidebarFilterProps = {\n    feedItemStatus?: FeedItemStatus,\n    onFeedItemStatusClick: (status?: FeedItemStatus) => void,\n};\n\nconst ACTIVITY_FEED_ITEM_ALL = 'all';\nconst ACTIVITY_FEED_ITEM_OPEN = COMMENT_STATUS_OPEN;\nconst ACTIVITY_FEED_ITEM_RESOLVED = COMMENT_STATUS_RESOLVED;\n\nconst statuses = [ACTIVITY_FEED_ITEM_ALL, ACTIVITY_FEED_ITEM_OPEN, ACTIVITY_FEED_ITEM_RESOLVED];\nconst statusMap = {\n    [ACTIVITY_FEED_ITEM_ALL]: { msg: messages.activitySidebarFilterOptionAll, val: undefined },\n    [ACTIVITY_FEED_ITEM_OPEN]: { msg: messages.activitySidebarFilterOptionOpen, val: COMMENT_STATUS_OPEN },\n    [ACTIVITY_FEED_ITEM_RESOLVED]: { msg: messages.activitySidebarFilterOptionResolved, val: COMMENT_STATUS_RESOLVED },\n};\n\nfunction ActivitySidebarFilter({\n    feedItemStatus = ACTIVITY_FEED_ITEM_ALL,\n    onFeedItemStatusClick,\n}: ActivitySidebarFilterProps) {\n    return (\n        <div className=\"bcs-ActivitySidebarFilter\">\n            <DropdownMenu className=\"bcs-ActivitySidebarFilter-dropdownMenu\" constrainToWindow>\n                <PlainButton type=\"button\">\n                    <MenuToggle>\n                        <FormattedMessage {...statusMap[feedItemStatus].msg} />\n                    </MenuToggle>\n                </PlainButton>\n                <Menu>\n                    {statuses.map(status => (\n                        <SelectMenuItem\n                            key={status}\n                            isSelected={status === feedItemStatus}\n                            onClick={() => onFeedItemStatusClick(statusMap[status].val)}\n                        >\n                            <FormattedMessage {...statusMap[status].msg} />\n                        </SelectMenuItem>\n                    ))}\n                </Menu>\n            </DropdownMenu>\n        </div>\n    );\n}\n\nexport default ActivitySidebarFilter;\n","// extracted by mini-css-extract-plugin","// @flow\nimport * as React from 'react';\nimport { withRouter, type RouterHistory } from 'react-router-dom';\nimport AddTaskMenu from './AddTaskMenu';\nimport TaskModal from './TaskModal';\nimport { TASK_TYPE_APPROVAL } from '../../constants';\nimport type { TaskFormProps } from './activity-feed/task-form/TaskForm';\nimport type { TaskType } from '../../common/types/tasks';\nimport type { ElementsXhrError } from '../../common/types/api';\n\ntype Props = {|\n    history: RouterHistory,\n    isDisabled: boolean,\n    onTaskModalClose: () => void,\n    taskFormProps: TaskFormProps,\n|};\n\ntype State = {\n    error: ?ElementsXhrError,\n    isTaskFormOpen: boolean,\n    taskType: TaskType,\n};\n\nclass AddTaskButton extends React.Component<Props, State> {\n    buttonRef = React.createRef<HTMLButtonElement>();\n\n    state = {\n        error: null,\n        isTaskFormOpen: false,\n        taskType: TASK_TYPE_APPROVAL,\n    };\n\n    static defaultProps = {\n        isDisabled: false,\n    };\n\n    /*\n    1. Pushing the open state into history keeps the sidebar open upon resize and refresh\n    2. Preventing the sidebar from closing keeps the task modal open upon edit and resize\n    */\n    handleClickMenuItem = (taskType: TaskType) => {\n        this.props.history.replace({ state: { open: true } });\n        this.setState({ isTaskFormOpen: true, taskType });\n    };\n\n    handleModalClose = () => {\n        const { onTaskModalClose } = this.props;\n        this.setState({ isTaskFormOpen: false, error: null });\n        if (this.buttonRef.current) {\n            this.buttonRef.current.focus();\n        }\n        onTaskModalClose();\n    };\n\n    handleSubmitError = (e: ElementsXhrError) => this.setState({ error: e });\n\n    setAddTaskButtonRef = (element: HTMLButtonElement) => {\n        this.buttonRef.current = element;\n    };\n\n    render() {\n        const { isDisabled, taskFormProps } = this.props;\n        const { isTaskFormOpen, taskType, error } = this.state;\n\n        return (\n            <>\n                <AddTaskMenu\n                    isDisabled={isDisabled}\n                    onMenuItemClick={this.handleClickMenuItem}\n                    setAddTaskButtonRef={this.setAddTaskButtonRef}\n                />\n                <TaskModal\n                    error={error}\n                    onSubmitError={this.handleSubmitError}\n                    onSubmitSuccess={this.handleModalClose}\n                    onModalClose={this.handleModalClose}\n                    isTaskFormOpen={isTaskFormOpen}\n                    taskFormProps={taskFormProps}\n                    taskType={taskType}\n                />\n            </>\n        );\n    }\n}\n\nexport { AddTaskButton as AddTaskButtonComponent };\nexport default withRouter(AddTaskButton);\n","// @flow\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Button from '../../components/button';\nimport DropdownMenu from '../../components/dropdown-menu';\nimport MenuToggle from '../../components/dropdown-menu/MenuToggle';\nimport { Menu, MenuItem } from '../../components/menu';\nimport IconTaskApproval from '../../icons/two-toned/IconTaskApproval';\nimport IconTaskGeneral from '../../icons/two-toned/IconTaskGeneral';\nimport messages from './messages';\nimport { TASK_TYPE_APPROVAL, TASK_TYPE_GENERAL } from '../../constants';\nimport type { TaskType } from '../../common/types/tasks';\n\nimport './AddTaskMenu.scss';\n\ntype Props = {\n    isDisabled: boolean,\n    onMenuItemClick: (taskType: TaskType) => void,\n    setAddTaskButtonRef?: (element: HTMLButtonElement) => void,\n};\n\nconst AddTaskMenu = (props: Props) => (\n    <DropdownMenu constrainToScrollParent isRightAligned>\n        <Button isDisabled={props.isDisabled} type=\"button\" setRef={props.setAddTaskButtonRef}>\n            <MenuToggle>\n                <FormattedMessage {...messages.tasksAddTask} />\n            </MenuToggle>\n        </Button>\n        <Menu className=\"bcs-AddTaskMenu\">\n            <MenuItem className=\"bcs-AddTaskMenu-menuItem\" onClick={() => props.onMenuItemClick(TASK_TYPE_GENERAL)}>\n                <div className=\"bcs-AddTaskMenu-icon\">\n                    <IconTaskGeneral width={30} height={30} />\n                </div>\n                <div>\n                    <div className=\"bcs-AddTaskMenu-title\">\n                        <FormattedMessage {...messages.taskAddTaskGeneral} />\n                    </div>\n                    <div className=\"bcs-AddTaskMenu-description\">\n                        <FormattedMessage {...messages.taskAddTaskGeneralDescription} />\n                    </div>\n                </div>\n            </MenuItem>\n            <MenuItem className=\"bcs-AddTaskMenu-menuItem\" onClick={() => props.onMenuItemClick(TASK_TYPE_APPROVAL)}>\n                <div className=\"bcs-AddTaskMenu-icon\">\n                    <IconTaskApproval width={30} height={30} />\n                </div>\n                <div>\n                    <div className=\"bcs-AddTaskMenu-title\">\n                        <FormattedMessage {...messages.taskAddTaskApproval} />\n                    </div>\n                    <div className=\"bcs-AddTaskMenu-description\">\n                        <FormattedMessage {...messages.taskAddTaskApprovalDescription} />\n                    </div>\n                </div>\n            </MenuItem>\n        </Menu>\n    </DropdownMenu>\n);\n\nexport default AddTaskMenu;\n","// extracted by mini-css-extract-plugin","// @flow\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport type { MessageDescriptor } from 'react-intl';\nimport Modal from '../../components/modal/Modal';\nimport TaskForm from './activity-feed/task-form';\nimport messages from './messages';\nimport { TASK_EDIT_MODE_CREATE, TASK_TYPE_APPROVAL, TASK_TYPE_GENERAL } from '../../constants';\nimport type { TaskFormProps } from './activity-feed/task-form/TaskForm';\nimport type { TaskType, TaskEditMode } from '../../common/types/tasks';\nimport type { ElementsXhrError } from '../../common/types/api';\n\ntype TaskModalProps = {\n    editMode?: TaskEditMode,\n    error: ?ElementsXhrError,\n    isTaskFormOpen: boolean,\n    onModalClose: () => void,\n    onSubmitError: (e: ElementsXhrError) => void,\n    onSubmitSuccess: () => any,\n    taskFormProps: TaskFormProps,\n    taskType: TaskType,\n};\n\nfunction getMessageForModalTitle(taskType: TaskType, mode: TaskEditMode): MessageDescriptor {\n    switch (taskType) {\n        case TASK_TYPE_GENERAL:\n            return mode === TASK_EDIT_MODE_CREATE\n                ? messages.tasksCreateGeneralTaskFormTitle\n                : messages.tasksEditGeneralTaskFormTitle;\n        case TASK_TYPE_APPROVAL:\n        default:\n            return mode === TASK_EDIT_MODE_CREATE\n                ? messages.tasksCreateApprovalTaskFormTitle\n                : messages.tasksEditApprovalTaskFormTitle;\n    }\n}\n\nconst focusTargetSelector: string = '.task-modal textarea, .task-modal input';\n\nconst TaskModal = (props: TaskModalProps) => {\n    const {\n        editMode = TASK_EDIT_MODE_CREATE,\n        error,\n        onSubmitError,\n        onSubmitSuccess,\n        onModalClose,\n        taskType,\n        isTaskFormOpen,\n        taskFormProps,\n    } = props;\n    // Note: Modal throws an error if this fails to find an element!\n    return (\n        <Modal\n            className=\"be-modal task-modal\"\n            data-testid=\"create-task-modal\"\n            focusElementSelector={focusTargetSelector}\n            isOpen={isTaskFormOpen}\n            onRequestClose={onModalClose}\n            title={<FormattedMessage {...getMessageForModalTitle(taskType, editMode)} />}\n        >\n            <div className=\"be\">\n                <TaskForm\n                    editMode={editMode}\n                    // $FlowFixMe\n                    error={error}\n                    onCancel={onModalClose}\n                    onSubmitError={onSubmitError}\n                    onSubmitSuccess={onSubmitSuccess}\n                    taskType={taskType}\n                    {...taskFormProps}\n                />\n            </div>\n        </Modal>\n    );\n};\n\nexport default TaskModal;\n","// extracted by mini-css-extract-plugin","import * as React from 'react';\nimport classNames from 'classnames';\nimport './ActivityCard.scss';\n\nexport type Props = React.HTMLAttributes<HTMLDivElement>;\n\nconst ActivityCard = (props: Props, ref: React.Ref<HTMLDivElement>): JSX.Element => {\n    const { children, className, ...rest } = props;\n    return (\n        <div ref={ref} className={classNames('bcs-ActivityCard', className)} {...rest}>\n            {children}\n        </div>\n    );\n};\n\nexport default React.forwardRef(ActivityCard);\n","/**\n * @flow\n * @file avatar component\n * @author Box\n */\nimport * as React from 'react';\nimport AvatarComponent from '../../../components/avatar';\nimport type { GetAvatarUrlCallback } from '../../common/flowTypes';\nimport type { User } from '../../../common/types/core';\n\ntype Props = {\n    className?: string,\n    getAvatarUrl?: GetAvatarUrlCallback,\n    user: User,\n};\n\ntype State = {\n    avatarUrl?: ?string,\n};\n\nclass Avatar extends React.PureComponent<Props, State> {\n    state = {\n        avatarUrl: null,\n    };\n\n    isMounted: boolean = false;\n\n    /**\n     * Success handler for getting avatar url\n     *\n     * @param {string} avatarUrl the user avatar url\n     */\n    getAvatarUrlHandler = (avatarUrl: ?string) => {\n        if (this.isMounted) {\n            this.setState({\n                avatarUrl,\n            });\n        }\n    };\n\n    /**\n     * Gets the avatar URL for the user from the getAvatarUrl prop\n     *\n     * @return {Promise<?string>} Promise which resolve with the avatar url string\n     */\n    getAvatarUrl(): Promise<?string> {\n        const { user = {}, getAvatarUrl }: Props = this.props;\n        const { avatar_url = null, id } = user;\n\n        const avatarPromise = id && getAvatarUrl ? getAvatarUrl(`${id}`) : Promise.resolve(avatar_url);\n        return avatarPromise.then(this.getAvatarUrlHandler);\n    }\n\n    componentDidMount() {\n        this.isMounted = true;\n        this.getAvatarUrl();\n    }\n\n    componentWillUnmount() {\n        this.isMounted = false;\n    }\n\n    render() {\n        const { user, className }: Props = this.props;\n        const { avatarUrl }: State = this.state;\n        const { id, name } = user;\n\n        return <AvatarComponent avatarUrl={avatarUrl} className={className} id={id} name={name} />;\n    }\n}\n\nexport default Avatar;\n","// extracted by mini-css-extract-plugin","import * as React from 'react';\nimport classNames from 'classnames';\nimport ActivityCard, { Props as ActivityCardProps } from './ActivityCard';\n// @ts-ignore flow import\nimport { decode } from '../../../utils/keys';\nimport './SelectableActivityCard.scss';\n\nexport type Props = {\n    isDisabled?: boolean;\n    onSelect: () => void;\n} & ActivityCardProps;\n\nconst ALLOWABLE_NODENAMES = ['A', 'BUTTON'];\n\nfunction isAllowableNode({ target }: React.SyntheticEvent<HTMLDivElement>) {\n    return target instanceof HTMLElement && ALLOWABLE_NODENAMES.includes(target.nodeName);\n}\n\nconst SelectableActivityCard = ({ children, className, isDisabled = false, onSelect, ...rest }: Props): JSX.Element => {\n    const ref = React.useRef<HTMLDivElement | null>(null);\n\n    const handleClick = (event: React.SyntheticEvent<HTMLDivElement>): void => {\n        if (isDisabled || isAllowableNode(event)) {\n            return;\n        }\n\n        event.preventDefault();\n        event.stopPropagation();\n        event.currentTarget.focus(); // Buttons do not receive focus in Firefox and Safari on MacOS\n\n        onSelect();\n    };\n\n    const handleKeyDown = (event: React.KeyboardEvent<HTMLDivElement>): void => {\n        if (isDisabled || isAllowableNode(event)) {\n            return;\n        }\n\n        const key = decode(event);\n\n        if (key === 'Space' || key === 'Enter') {\n            onSelect();\n        }\n    };\n\n    return (\n        <ActivityCard\n            ref={ref}\n            aria-disabled={isDisabled}\n            className={classNames('bcs-SelectableActivityCard', className)}\n            onClick={handleClick}\n            onKeyDown={handleKeyDown}\n            role=\"button\"\n            tabIndex={0}\n            {...rest}\n        >\n            {children}\n        </ActivityCard>\n    );\n};\n\nexport default SelectableActivityCard;\n","/**\n * @flow\n * @file Active state component for Activity Feed\n */\nimport * as React from 'react';\nimport getProp from 'lodash/get';\nimport ActivityThread from './ActivityThread';\nimport ActivityItem from './ActivityItem';\nimport AppActivity from '../app-activity';\nimport AnnotationActivity from '../annotations';\nimport Comment from '../comment';\nimport TaskNew from '../task-new';\nimport Version, { CollapsedVersion } from '../version';\nimport withErrorHandling from '../../withErrorHandling';\nimport type {\n    Annotation,\n    AnnotationPermission,\n    BoxCommentPermission,\n    CommentFeedItemType,\n    FeedItem,\n    FeedItems,\n    FeedItemStatus,\n    FocusableFeedItemType,\n} from '../../../../common/types/feed';\nimport type { SelectorItems, User } from '../../../../common/types/core';\nimport type { GetAvatarUrlCallback, GetProfileUrlCallback } from '../../../common/flowTypes';\nimport type { Translations } from '../../flowTypes';\n\ntype Props = {\n    activeFeedEntryId?: string,\n    activeFeedEntryType?: FocusableFeedItemType,\n    activeFeedItemRef: { current: null | HTMLElement },\n    approverSelectorContacts?: SelectorItems<>,\n    currentFileVersionId: string,\n    currentUser?: User,\n    getApproverWithQuery?: Function,\n    getAvatarUrl: GetAvatarUrlCallback,\n    getMentionWithQuery?: Function,\n    getUserProfileUrl?: GetProfileUrlCallback,\n    hasReplies?: boolean,\n    items: FeedItems,\n    mentionSelectorContacts?: SelectorItems<>,\n    onAnnotationDelete?: ({ id: string, permissions: AnnotationPermission }) => void,\n    onAnnotationEdit?: (id: string, text: string, permissions: AnnotationPermission) => void,\n    onAnnotationSelect?: (annotation: Annotation) => void,\n    onAnnotationStatusChange?: (id: string, status: FeedItemStatus, permissions: AnnotationPermission) => void,\n    onAppActivityDelete?: Function,\n    onCommentDelete?: Function,\n    onCommentEdit?: (\n        id: string,\n        text?: string,\n        status?: FeedItemStatus,\n        hasMention: boolean,\n        permissions: BoxCommentPermission,\n        onSuccess: ?Function,\n        onError: ?Function,\n    ) => void,\n    onReplyCreate?: (parentId: string, parentType: CommentFeedItemType, text: string, hasMention: boolean) => void,\n    onTaskAssignmentUpdate?: Function,\n    onTaskDelete?: Function,\n    onTaskEdit?: Function,\n    onTaskModalClose?: Function,\n    onTaskView?: Function,\n    onVersionInfo?: Function,\n    translations?: Translations,\n};\n\nconst ActiveState = ({\n    activeFeedEntryId,\n    activeFeedEntryType,\n    activeFeedItemRef,\n    approverSelectorContacts,\n    currentFileVersionId,\n    currentUser,\n    hasReplies = false,\n    items,\n    mentionSelectorContacts,\n    getMentionWithQuery,\n    onAnnotationDelete,\n    onAnnotationEdit,\n    onAnnotationSelect,\n    onAnnotationStatusChange,\n    onAppActivityDelete,\n    onCommentDelete,\n    onCommentEdit,\n    onTaskDelete,\n    onTaskEdit,\n    onTaskView,\n    onTaskAssignmentUpdate,\n    onTaskModalClose,\n    onVersionInfo,\n    translations,\n    getApproverWithQuery,\n    getAvatarUrl,\n    getUserProfileUrl,\n}: Props): React.Node => {\n    const activeEntry = items.find(({ id, type }) => id === activeFeedEntryId && type === activeFeedEntryType);\n\n    return (\n        <ul className=\"bcs-activity-feed-active-state\">\n            {items.map((item: FeedItem) => {\n                const isFocused = item === activeEntry;\n                const refValue = isFocused ? activeFeedItemRef : undefined;\n                const itemFileVersionId = getProp(item, 'file_version.id');\n\n                switch (item.type) {\n                    case 'comment':\n                        return (\n                            <ActivityItem\n                                key={item.type + item.id}\n                                data-testid=\"comment\"\n                                isFocused={isFocused}\n                                ref={refValue}\n                            >\n                                <ActivityThread\n                                    data-testid=\"activity-thread\"\n                                    onReplyDelete={onCommentDelete}\n                                    onReplyEdit={onCommentEdit}\n                                    currentUser={currentUser}\n                                    getAvatarUrl={getAvatarUrl}\n                                    hasReplies={hasReplies}\n                                    getMentionWithQuery={getMentionWithQuery}\n                                    getUserProfileUrl={getUserProfileUrl}\n                                    mentionSelectorContacts={mentionSelectorContacts}\n                                    repliesTotalCount={item.total_reply_count}\n                                    replies={item.replies}\n                                    translations={translations}\n                                >\n                                    <Comment\n                                        {...item}\n                                        currentUser={currentUser}\n                                        getAvatarUrl={getAvatarUrl}\n                                        getMentionWithQuery={getMentionWithQuery}\n                                        getUserProfileUrl={getUserProfileUrl}\n                                        mentionSelectorContacts={mentionSelectorContacts}\n                                        onDelete={onCommentDelete}\n                                        onEdit={onCommentEdit}\n                                        permissions={{\n                                            can_delete: getProp(item.permissions, 'can_delete', false),\n                                            can_edit: getProp(item.permissions, 'can_edit', false),\n                                            can_reply: getProp(item.permissions, 'can_reply', false),\n                                            can_resolve: getProp(item.permissions, 'can_resolve', false),\n                                        }}\n                                        translations={translations}\n                                    />\n                                </ActivityThread>\n                            </ActivityItem>\n                        );\n                    case 'task':\n                        return (\n                            <ActivityItem\n                                key={item.type + item.id}\n                                className=\"bcs-activity-feed-task-new\"\n                                data-testid=\"task\"\n                                isFocused={isFocused}\n                                ref={refValue}\n                            >\n                                <TaskNew\n                                    {...item}\n                                    approverSelectorContacts={approverSelectorContacts}\n                                    currentUser={currentUser}\n                                    getApproverWithQuery={getApproverWithQuery}\n                                    getAvatarUrl={getAvatarUrl}\n                                    getUserProfileUrl={getUserProfileUrl}\n                                    onAssignmentUpdate={onTaskAssignmentUpdate}\n                                    onDelete={onTaskDelete}\n                                    onEdit={onTaskEdit}\n                                    onView={onTaskView}\n                                    onModalClose={onTaskModalClose}\n                                    translations={translations}\n                                />\n                            </ActivityItem>\n                        );\n                    case 'file_version':\n                        return (\n                            <ActivityItem key={item.type + item.id} className=\"bcs-version-item\" data-testid=\"version\">\n                                {item.versions ? (\n                                    // $FlowFixMe\n                                    <CollapsedVersion {...item} onInfo={onVersionInfo} />\n                                ) : (\n                                    // $FlowFixMe\n                                    <Version {...item} onInfo={onVersionInfo} />\n                                )}\n                            </ActivityItem>\n                        );\n                    case 'app_activity':\n                        return (\n                            <ActivityItem\n                                key={item.type + item.id}\n                                className=\"bcs-activity-feed-app-activity\"\n                                data-testid=\"app-activity\"\n                            >\n                                <AppActivity currentUser={currentUser} onDelete={onAppActivityDelete} {...item} />\n                            </ActivityItem>\n                        );\n                    case 'annotation':\n                        return (\n                            <ActivityItem\n                                key={item.type + item.id}\n                                className=\"bcs-activity-feed-annotation-activity\"\n                                data-testid=\"annotation-activity\"\n                                isFocused={isFocused}\n                                ref={refValue}\n                            >\n                                <ActivityThread\n                                    data-testid=\"activity-thread\"\n                                    onReplyDelete={onCommentDelete}\n                                    onReplyEdit={onCommentEdit}\n                                    currentUser={currentUser}\n                                    getAvatarUrl={getAvatarUrl}\n                                    getMentionWithQuery={getMentionWithQuery}\n                                    getUserProfileUrl={getUserProfileUrl}\n                                    hasReplies={hasReplies}\n                                    mentionSelectorContacts={mentionSelectorContacts}\n                                    repliesTotalCount={item.total_reply_count}\n                                    replies={item.replies}\n                                    translations={translations}\n                                >\n                                    <AnnotationActivity\n                                        currentUser={currentUser}\n                                        getAvatarUrl={getAvatarUrl}\n                                        getUserProfileUrl={getUserProfileUrl}\n                                        getMentionWithQuery={getMentionWithQuery}\n                                        isCurrentVersion={currentFileVersionId === itemFileVersionId}\n                                        item={item}\n                                        mentionSelectorContacts={mentionSelectorContacts}\n                                        onEdit={onAnnotationEdit}\n                                        onDelete={onAnnotationDelete}\n                                        onSelect={onAnnotationSelect}\n                                        onStatusChange={onAnnotationStatusChange}\n                                    />\n                                </ActivityThread>\n                            </ActivityItem>\n                        );\n                    default:\n                        return null;\n                }\n            })}\n        </ul>\n    );\n};\n\nexport { ActiveState as ActiveStateComponent };\nexport default withErrorHandling(ActiveState);\n","/**\n * @flow\n * @file Component for Activity feed\n */\n\nimport * as React from 'react';\nimport getProp from 'lodash/get';\nimport noop from 'lodash/noop';\nimport { FormattedMessage } from 'react-intl';\nimport classNames from 'classnames';\nimport ActiveState from './ActiveState';\nimport CommentForm from '../comment-form';\nimport EmptyState from './EmptyState';\nimport InlineError from '../../../../components/inline-error/InlineError';\nimport LoadingIndicator from '../../../../components/loading-indicator/LoadingIndicator';\nimport messages from './messages';\nimport { collapseFeedState, ItemTypes } from './activityFeedUtils';\nimport { PERMISSION_CAN_CREATE_ANNOTATIONS } from '../../../../constants';\nimport { scrollIntoView } from '../../../../utils/dom';\nimport type {\n    Annotation,\n    AnnotationPermission,\n    BoxCommentPermission,\n    CommentFeedItemType,\n    FocusableFeedItemType,\n    FeedItems,\n    FeedItemStatus,\n} from '../../../../common/types/feed';\nimport type { SelectorItems, User, GroupMini, BoxItem } from '../../../../common/types/core';\nimport type { GetAvatarUrlCallback, GetProfileUrlCallback } from '../../../common/flowTypes';\nimport type { Translations, Errors } from '../../flowTypes';\nimport './ActivityFeed.scss';\n\ntype Props = {\n    activeFeedEntryId?: string,\n    activeFeedEntryType?: FocusableFeedItemType,\n    activityFeedError: ?Errors,\n    approverSelectorContacts?: SelectorItems<User | GroupMini>,\n    contactsLoaded?: boolean,\n    currentUser?: User,\n    feedItems?: FeedItems,\n    file: BoxItem,\n    getApproverWithQuery?: Function,\n    getAvatarUrl: GetAvatarUrlCallback,\n    getMentionWithQuery?: Function,\n    getUserProfileUrl?: GetProfileUrlCallback,\n    isDisabled?: boolean,\n    mentionSelectorContacts?: SelectorItems<User>,\n    onAnnotationDelete?: ({ id: string, permissions: AnnotationPermission }) => void,\n    onAnnotationEdit?: (id: string, text: string, permissions: AnnotationPermission) => void,\n    onAnnotationSelect?: (annotation: Annotation) => void,\n    onAnnotationStatusChange?: (id: string, status: FeedItemStatus, permissions: AnnotationPermission) => void,\n    onAppActivityDelete?: Function,\n    onCommentCreate?: Function,\n    onCommentDelete?: Function,\n    onCommentUpdate?: (\n        id: string,\n        text?: string,\n        status?: FeedItemStatus,\n        hasMention: boolean,\n        permissions: BoxCommentPermission,\n        onSuccess: ?Function,\n        onError: ?Function,\n    ) => void,\n    onReplyCreate?: (parentId: string, parentType: CommentFeedItemType, text: string, hasMention: boolean) => void,\n    onTaskAssignmentUpdate?: Function,\n    onTaskCreate?: Function,\n    onTaskDelete?: Function,\n    onTaskModalClose?: Function,\n    onTaskUpdate?: Function,\n    onTaskView?: Function,\n    onVersionHistoryClick?: Function,\n    translations?: Translations,\n};\n\ntype State = {\n    isInputOpen: boolean,\n};\n\nclass ActivityFeed extends React.Component<Props, State> {\n    state = {\n        isInputOpen: false,\n    };\n\n    activeFeedItemRef = React.createRef<null | HTMLElement>();\n\n    feedContainer: null | HTMLElement;\n\n    componentDidMount() {\n        this.resetFeedScroll();\n    }\n\n    componentDidUpdate(prevProps: Props, prevState: State) {\n        const {\n            activeFeedEntryId: prevActiveFeedEntryId,\n            currentUser: prevCurrentUser,\n            feedItems: prevFeedItems,\n        } = prevProps;\n        const { feedItems: currFeedItems, activeFeedEntryId } = this.props;\n        const { isInputOpen: prevIsInputOpen } = prevState;\n        const { isInputOpen: currIsInputOpen } = this.state;\n\n        const hasLoaded = this.hasLoaded(prevCurrentUser, prevFeedItems);\n        const hasMoreItems = prevFeedItems && currFeedItems && prevFeedItems.length < currFeedItems.length;\n        const didLoadFeedItems = prevFeedItems === undefined && currFeedItems !== undefined;\n        const hasInputOpened = currIsInputOpen !== prevIsInputOpen;\n        const hasActiveFeedEntryIdChanged = activeFeedEntryId !== prevActiveFeedEntryId;\n\n        if ((hasLoaded || hasMoreItems || didLoadFeedItems || hasInputOpened) && activeFeedEntryId === undefined) {\n            this.resetFeedScroll();\n        }\n\n        if (didLoadFeedItems || hasActiveFeedEntryIdChanged) {\n            this.scrollToActiveFeedItemOrErrorMessage();\n        }\n    }\n\n    scrollToActiveFeedItemOrErrorMessage() {\n        const { current: activeFeedItemRef } = this.activeFeedItemRef;\n        const { activeFeedEntryId } = this.props;\n\n        // if there is no active item, do not scroll\n        if (!activeFeedEntryId) {\n            return;\n        }\n\n        // if there was supposed to be an active feed item but the feed item does not exist\n        // scroll to the bottom to show the inline error message\n        if (activeFeedItemRef === null) {\n            this.resetFeedScroll();\n            return;\n        }\n\n        scrollIntoView(activeFeedItemRef);\n    }\n\n    /**\n     * Detects whether or not the empty state should be shown.\n     * @param {object} currentUser - The user that is logged into the account\n     * @param {object} feedItems - Items in the activity feed\n     */\n    isEmpty = ({ feedItems }: Props = this.props): boolean => {\n        if (feedItems === undefined) {\n            return false;\n        }\n        return feedItems.length === 0 || (feedItems.length === 1 && feedItems[0].type === ItemTypes.fileVersion);\n    };\n\n    /**\n     * Determines whether currentUser and feedItems have loaded.\n     * @param prevCurrentUser - The previous value of the currentUser prop\n     * @param prevFeedItems - The previous value of the feedItems prop\n     * @returns {boolean}\n     */\n    hasLoaded = (prevCurrentUser?: User, prevFeedItems?: FeedItems): boolean => {\n        const { currentUser, feedItems } = this.props;\n        return currentUser !== undefined && feedItems !== undefined && (!prevCurrentUser || !prevFeedItems);\n    };\n\n    /**\n     * Scrolls the container to the bottom\n     */\n    resetFeedScroll = () => {\n        if (this.feedContainer) {\n            this.feedContainer.scrollTop = this.feedContainer.scrollHeight;\n        }\n    };\n\n    onKeyDown = (event: SyntheticKeyboardEvent<>): void => {\n        const { nativeEvent } = event;\n        nativeEvent.stopImmediatePropagation();\n    };\n\n    commentFormFocusHandler = (): void => {\n        this.resetFeedScroll();\n        this.setState({ isInputOpen: true });\n    };\n\n    commentFormCancelHandler = (): void => this.setState({ isInputOpen: false });\n\n    commentFormSubmitHandler = (): void => this.setState({ isInputOpen: false });\n\n    onCommentCreate = ({ text, hasMention }: { hasMention: boolean, text: string }) => {\n        const { onCommentCreate = noop } = this.props;\n        onCommentCreate(text, hasMention);\n        this.commentFormSubmitHandler();\n    };\n\n    /**\n     * Creates a task.\n     *\n     * @param {string} text - Task text\n     * @param {Array} assignees - List of assignees\n     * @param {number} dueAt - Task's due date\n     * @return {void}\n     */\n    onTaskCreate = ({ text, assignees, dueAt }: { assignees: SelectorItems<>, dueAt: string, text: string }): void => {\n        const { onTaskCreate = noop } = this.props;\n        onTaskCreate(text, assignees, dueAt);\n        this.commentFormSubmitHandler();\n    };\n\n    /**\n     * Invokes version history popup handler.\n     *\n     * @param {Object} data - Version history data\n     * @return {void}\n     */\n    openVersionHistoryPopup = (data: any): void => {\n        const versionInfoHandler = this.props.onVersionHistoryClick || noop;\n        versionInfoHandler(data);\n    };\n\n    render(): React.Node {\n        const {\n            activeFeedEntryId,\n            activeFeedEntryType,\n            activityFeedError,\n            approverSelectorContacts,\n            currentUser,\n            feedItems,\n            file,\n            getApproverWithQuery,\n            getAvatarUrl,\n            getMentionWithQuery,\n            getUserProfileUrl,\n            isDisabled,\n            mentionSelectorContacts,\n            contactsLoaded,\n            onAnnotationDelete,\n            onAnnotationEdit,\n            onAnnotationSelect,\n            onAnnotationStatusChange,\n            onAppActivityDelete,\n            onCommentCreate,\n            onCommentDelete,\n            onCommentUpdate,\n            onReplyCreate,\n            onTaskAssignmentUpdate,\n            onTaskDelete,\n            onTaskModalClose,\n            onTaskUpdate,\n            onTaskView,\n            onVersionHistoryClick,\n            translations,\n        } = this.props;\n        const { isInputOpen } = this.state;\n        const hasAnnotationCreatePermission = getProp(file, ['permissions', PERMISSION_CAN_CREATE_ANNOTATIONS], false);\n        const hasCommentPermission = getProp(file, 'permissions.can_comment', false);\n        const showCommentForm = !!(currentUser && hasCommentPermission && onCommentCreate && feedItems);\n\n        const isEmpty = this.isEmpty(this.props);\n        const isLoading = !this.hasLoaded();\n\n        const activeEntry =\n            Array.isArray(feedItems) &&\n            feedItems.find(({ id, type }) => id === activeFeedEntryId && type === activeFeedEntryType);\n\n        const errorMessageByEntryType = {\n            annotation: messages.annotationMissingError,\n            comment: messages.commentMissingError,\n            task: messages.taskMissingError,\n        };\n\n        const inlineFeedItemErrorMessage = activeFeedEntryType\n            ? errorMessageByEntryType[activeFeedEntryType]\n            : undefined;\n\n        const isInlineFeedItemErrorVisible = !isLoading && activeFeedEntryType && !activeEntry;\n        const currentFileVersionId = getProp(file, 'file_version.id');\n\n        return (\n            // eslint-disable-next-line\n            <div className=\"bcs-activity-feed\" data-testid=\"activityfeed\" onKeyDown={this.onKeyDown}>\n                <div\n                    ref={ref => {\n                        this.feedContainer = ref;\n                    }}\n                    className=\"bcs-activity-feed-items-container\"\n                >\n                    {isLoading && (\n                        <div className=\"bcs-activity-feed-loading-state\">\n                            <LoadingIndicator />\n                        </div>\n                    )}\n\n                    {isEmpty && !isLoading && (\n                        <EmptyState\n                            showAnnotationMessage={hasAnnotationCreatePermission}\n                            showCommentMessage={showCommentForm}\n                        />\n                    )}\n                    {!isEmpty && !isLoading && (\n                        <ActiveState\n                            {...activityFeedError}\n                            items={collapseFeedState(feedItems)}\n                            isDisabled={isDisabled}\n                            currentUser={currentUser}\n                            currentFileVersionId={currentFileVersionId}\n                            onTaskAssignmentUpdate={onTaskAssignmentUpdate}\n                            onAnnotationDelete={onAnnotationDelete}\n                            onAnnotationEdit={onAnnotationEdit}\n                            onAnnotationSelect={onAnnotationSelect}\n                            onAnnotationStatusChange={onAnnotationStatusChange}\n                            onAppActivityDelete={onAppActivityDelete}\n                            onCommentDelete={hasCommentPermission ? onCommentDelete : noop}\n                            onCommentEdit={hasCommentPermission ? onCommentUpdate : noop}\n                            onReplyCreate={hasCommentPermission ? onReplyCreate : noop}\n                            onTaskDelete={onTaskDelete}\n                            onTaskEdit={onTaskUpdate}\n                            onTaskView={onTaskView}\n                            onTaskModalClose={onTaskModalClose}\n                            onVersionInfo={onVersionHistoryClick ? this.openVersionHistoryPopup : null}\n                            translations={translations}\n                            getAvatarUrl={getAvatarUrl}\n                            getUserProfileUrl={getUserProfileUrl}\n                            mentionSelectorContacts={mentionSelectorContacts}\n                            getMentionWithQuery={getMentionWithQuery}\n                            approverSelectorContacts={approverSelectorContacts}\n                            getApproverWithQuery={getApproverWithQuery}\n                            activeFeedEntryId={activeFeedEntryId}\n                            activeFeedEntryType={activeFeedEntryType}\n                            activeFeedItemRef={this.activeFeedItemRef}\n                        />\n                    )}\n                    {isInlineFeedItemErrorVisible && inlineFeedItemErrorMessage && (\n                        <InlineError\n                            title={<FormattedMessage {...messages.feedInlineErrorTitle} />}\n                            className=\"bcs-feedItemInlineError\"\n                        >\n                            <FormattedMessage {...inlineFeedItemErrorMessage} />\n                        </InlineError>\n                    )}\n                </div>\n\n                {showCommentForm ? (\n                    <CommentForm\n                        onSubmit={this.resetFeedScroll}\n                        isDisabled={isDisabled}\n                        mentionSelectorContacts={mentionSelectorContacts}\n                        contactsLoaded={contactsLoaded}\n                        className={classNames('bcs-activity-feed-comment-input', {\n                            'bcs-is-disabled': isDisabled,\n                        })}\n                        createComment={hasCommentPermission ? this.onCommentCreate : noop}\n                        getMentionWithQuery={getMentionWithQuery}\n                        isOpen={isInputOpen}\n                        // $FlowFixMe\n                        user={currentUser}\n                        onCancel={this.commentFormCancelHandler}\n                        onFocus={this.commentFormFocusHandler}\n                        getAvatarUrl={getAvatarUrl}\n                    />\n                ) : null}\n            </div>\n        );\n    }\n}\n\nexport default ActivityFeed;\n","// extracted by mini-css-extract-plugin","import * as React from 'react';\nimport classNames from 'classnames';\n\ntype Props = {\n    children: React.ReactNode;\n    className?: string;\n    isFocused?: boolean;\n};\n\nfunction ActivityItem({ children, className, isFocused, ...rest }: Props, ref: React.Ref<HTMLLIElement>) {\n    return (\n        <li className={classNames('bcs-ActivityItem', className, { 'bcs-is-focused': isFocused })} ref={ref} {...rest}>\n            {children}\n        </li>\n    );\n}\n\nexport default React.forwardRef(ActivityItem);\n","// @flow\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport noop from 'lodash/noop';\n\nimport LoadingIndicator from '../../../../components/loading-indicator';\nimport PlainButton from '../../../../components/plain-button';\nimport ActivityThreadReplies from './ActivityThreadReplies';\n\nimport type { GetAvatarUrlCallback, GetProfileUrlCallback } from '../../../common/flowTypes';\nimport type { Translations } from '../../flowTypes';\nimport type { SelectorItems, User } from '../../../../common/types/core';\nimport type { Comment as CommentType, CommentFeedItemType } from '../../../../common/types/feed';\n\nimport messages from './messages';\nimport './ActivityThread.scss';\n\ntype Props = {\n    children: React.Node,\n    currentUser?: User,\n    getAvatarUrl: GetAvatarUrlCallback,\n    getMentionWithQuery?: Function,\n    getUserProfileUrl?: GetProfileUrlCallback,\n    hasReplies: boolean,\n    isRepliesLoading?: boolean,\n    mentionSelectorContacts?: SelectorItems<>,\n    onGetReplies?: () => void,\n    onReplyCreate?: (parentId: string, parentType: CommentFeedItemType, text: string, hasMention: boolean) => void,\n    onReplyDelete?: Function,\n    onReplyEdit?: Function,\n    replies?: Array<CommentType>,\n    repliesTotalCount?: number,\n    translations?: Translations,\n};\n\nconst ActivityThread = ({\n    children,\n    currentUser,\n    getAvatarUrl,\n    getMentionWithQuery,\n    getUserProfileUrl,\n    hasReplies,\n    isRepliesLoading,\n    mentionSelectorContacts,\n    onGetReplies = noop,\n    onReplyDelete = noop,\n    onReplyEdit = noop,\n    replies = [],\n    repliesTotalCount = 0,\n    translations,\n}: Props) => {\n    const [isExpanded, setIsExpanded] = React.useState(false);\n\n    const toggleButtonLabel = isExpanded ? messages.hideReplies : messages.showReplies;\n    const repliesToLoadCount = Math.max(repliesTotalCount - 1, 0);\n\n    const toggleReplies = () => {\n        if (!isExpanded) {\n            onGetReplies();\n        }\n        setIsExpanded(previousState => !previousState);\n    };\n\n    if (!hasReplies) {\n        return children;\n    }\n    return (\n        <div className=\"bcs-ActivityThread\" data-testid=\"activity-thread\">\n            {children}\n\n            {isRepliesLoading && (\n                <div className=\"bcs-ActivityThread-loading\" data-testid=\"activity-thread-loading\">\n                    <LoadingIndicator />\n                </div>\n            )}\n            {!isRepliesLoading && repliesTotalCount > 1 && (\n                <PlainButton\n                    className=\"bcs-ActivityThread-toggle\"\n                    onClick={toggleReplies}\n                    type=\"button\"\n                    data-testid=\"activity-thread-button\"\n                >\n                    <FormattedMessage values={{ repliesToLoadCount }} {...toggleButtonLabel} />\n                </PlainButton>\n            )}\n\n            {!isRepliesLoading && repliesTotalCount > 0 && replies.length && (\n                <ActivityThreadReplies\n                    currentUser={currentUser}\n                    getAvatarUrl={getAvatarUrl}\n                    getMentionWithQuery={getMentionWithQuery}\n                    getUserProfileUrl={getUserProfileUrl}\n                    isExpanded={isExpanded}\n                    mentionSelectorContacts={mentionSelectorContacts}\n                    onDelete={onReplyDelete}\n                    onEdit={onReplyEdit}\n                    replies={replies}\n                    translations={translations}\n                />\n            )}\n        </div>\n    );\n};\n\nexport default ActivityThread;\n","// extracted by mini-css-extract-plugin","// @flow\nimport React from 'react';\nimport Comment from '../comment';\n\nimport type { GetAvatarUrlCallback, GetProfileUrlCallback } from '../../../common/flowTypes';\nimport type { Translations } from '../../flowTypes';\nimport type { SelectorItems, User } from '../../../../common/types/core';\nimport type { BoxCommentPermission, Comment as CommentType } from '../../../../common/types/feed';\n\nimport './ActivityThreadReplies.scss';\n\ntype Props = {\n    currentUser?: User,\n    getAvatarUrl: GetAvatarUrlCallback,\n    getMentionWithQuery?: Function,\n    getUserProfileUrl?: GetProfileUrlCallback,\n    isExpanded: boolean,\n    mentionSelectorContacts?: SelectorItems<>,\n    onDelete?: Function,\n    onEdit?: Function,\n    replies: Array<CommentType>,\n    translations?: Translations,\n};\n\nconst ActivityThreadReplies = ({\n    currentUser,\n    getAvatarUrl,\n    getMentionWithQuery,\n    getUserProfileUrl,\n    isExpanded,\n    mentionSelectorContacts,\n    onDelete,\n    onEdit,\n    replies,\n    translations,\n}: Props) => {\n    const lastReply = replies[replies.length - 1];\n\n    const getReplyPermissions = (reply: CommentType): BoxCommentPermission => {\n        const {\n            permissions: { can_delete = false, can_edit = false, can_resolve = false },\n        } = reply;\n        return {\n            can_delete,\n            can_edit,\n            can_resolve,\n        };\n    };\n\n    return (\n        <div className=\"bcs-ActivityThreadReplies\" data-testid=\"activity-thread-replies\">\n            {!isExpanded ? (\n                <Comment\n                    key={lastReply.type + lastReply.id}\n                    {...lastReply}\n                    currentUser={currentUser}\n                    getAvatarUrl={getAvatarUrl}\n                    getMentionWithQuery={getMentionWithQuery}\n                    getUserProfileUrl={getUserProfileUrl}\n                    mentionSelectorContacts={mentionSelectorContacts}\n                    onDelete={onDelete}\n                    onEdit={onEdit}\n                    permissions={getReplyPermissions(lastReply)}\n                    translations={translations}\n                />\n            ) : (\n                replies.map((reply: CommentType) => (\n                    <Comment\n                        key={reply.type + reply.id}\n                        {...reply}\n                        currentUser={currentUser}\n                        getAvatarUrl={getAvatarUrl}\n                        getMentionWithQuery={getMentionWithQuery}\n                        getUserProfileUrl={getUserProfileUrl}\n                        mentionSelectorContacts={mentionSelectorContacts}\n                        onDelete={onDelete}\n                        onEdit={onEdit}\n                        permissions={getReplyPermissions(reply)}\n                        translations={translations}\n                    />\n                ))\n            )}\n        </div>\n    );\n};\n\nexport default ActivityThreadReplies;\n","// extracted by mini-css-extract-plugin","/**\n * @flow\n * @file Component for Activity feed empty state\n */\n\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport ActivityFeedEmptyStateIllustration from '../illustrations/ActivityFeedEmptyStateIllustration';\nimport EmptyStatePreviewActivity140 from '../../../../illustration/EmptyStatePreviewActivity140';\nimport messages from '../../../common/messages';\nimport './EmptyState.scss';\n\ntype Props = {\n    showAnnotationMessage?: boolean,\n    showCommentMessage?: boolean,\n};\n\nconst EmptyState = ({ showAnnotationMessage, showCommentMessage }: Props): React.Node => {\n    const showActionMessage = showAnnotationMessage || showCommentMessage;\n    const actionMessage = showAnnotationMessage\n        ? messages.noActivityAnnotationPrompt\n        : messages.noActivityCommentPrompt;\n\n    return (\n        <div className=\"bcs-EmptyState\">\n            <div className=\"bcs-EmptyState-illustration\">\n                {showAnnotationMessage ? <ActivityFeedEmptyStateIllustration /> : <EmptyStatePreviewActivity140 />}\n            </div>\n            <div className=\"bcs-EmptyState-cta\">\n                <FormattedMessage {...messages.noActivity}>\n                    {(text: string) => <span className=\"bcs-EmptyState-cta-detail\">{text}</span>}\n                </FormattedMessage>\n                {showActionMessage && (\n                    <aside className=\"bcs-EmptyState-cta-message\">\n                        <FormattedMessage {...actionMessage} />\n                    </aside>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default EmptyState;\n","// extracted by mini-css-extract-plugin","/**\n * @flow\n * @file Activity feed utility methods\n */\n\nimport selectors from '../../../common/selectors/version';\nimport { PLACEHOLDER_USER, VERSION_UPLOAD_ACTION } from '../../../../constants';\nimport type { FeedItems } from '../../../../common/types/feed';\n\nexport const ItemTypes = {\n    fileVersion: 'file_version',\n};\n\nexport function collapseFeedState(feedState: ?FeedItems): FeedItems {\n    if (!feedState) {\n        return [];\n    }\n\n    return feedState.reduce((collapsedFeedState, feedItem) => {\n        const previousFeedItem = collapsedFeedState.pop();\n\n        if (!previousFeedItem) {\n            return collapsedFeedState.concat([feedItem]);\n        }\n\n        if (\n            feedItem.type === ItemTypes.fileVersion &&\n            previousFeedItem.type === ItemTypes.fileVersion &&\n            selectors.getVersionAction(feedItem) === VERSION_UPLOAD_ACTION &&\n            selectors.getVersionAction(previousFeedItem) === VERSION_UPLOAD_ACTION\n        ) {\n            const {\n                modified_by: tmpModifiedBy,\n                versions = [previousFeedItem],\n                version_start = parseInt(previousFeedItem.version_number, 10),\n                version_end = parseInt(previousFeedItem.version_number, 10),\n            } = previousFeedItem;\n\n            const prevModifiedBy = tmpModifiedBy || PLACEHOLDER_USER;\n\n            const { modified_by: tmpCurModifiedBy, created_at, trashed_at, id, version_number } = feedItem;\n            const parsedVersionNumber = parseInt(version_number, 10);\n            const collaborators = previousFeedItem.collaborators || {\n                [prevModifiedBy.id]: { ...prevModifiedBy },\n            };\n\n            const modifiedBy = tmpCurModifiedBy || PLACEHOLDER_USER;\n\n            // add collaborators\n            // $FlowFixMe\n            collaborators[modifiedBy.id] = { ...modifiedBy };\n\n            return collapsedFeedState.concat([\n                {\n                    collaborators,\n                    created_at,\n                    modified_by: modifiedBy,\n                    trashed_at,\n                    id,\n                    type: ItemTypes.fileVersion,\n                    version_number,\n                    versions: versions.concat([feedItem]),\n                    version_start: Math.min(version_start, parsedVersionNumber),\n                    version_end: Math.max(version_end, parsedVersionNumber),\n                },\n            ]);\n        }\n\n        return collapsedFeedState.concat([previousFeedItem, feedItem]);\n    }, []);\n}\n","// @flow\nexport { default } from './ActivityFeed';\n","/**\n * @flow\n * @file i18n messages\n * @author Box\n */\n\nimport { defineMessages } from 'react-intl';\n\nconst messages = defineMessages({\n    annotationMissingError: {\n        id: 'be.activitySidebar.activityFeed.annotationMissingError',\n        defaultMessage: 'This comment no longer exists',\n        description: 'Text to show when an annotation activity no longer exists',\n    },\n    feedInlineErrorTitle: {\n        id: 'be.activitySidebar.activityFeed.feedInlineErrorTitle',\n        defaultMessage: 'Error',\n        description: 'Error title',\n    },\n    taskMissingError: {\n        id: 'be.activitySidebar.activityFeed.taskMissingError',\n        defaultMessage: 'This task no longer exists',\n        description: 'Text to show when a task no longer exists',\n    },\n    commentMissingError: {\n        id: 'be.activitySidebar.activityFeed.commentMissingError',\n        defaultMessage: 'This comment no longer exists',\n        description: 'Text to show when comment no longer exists',\n    },\n    showReplies: {\n        id: 'be.activitySidebar.activityFeed.showReplies',\n        defaultMessage: 'See {repliesToLoadCount, plural, one {# reply} other {# replies}}',\n        description: 'Text to show to get more replies of comment or annotation',\n    },\n    hideReplies: {\n        id: 'be.activitySidebar.activityFeed.hideReplies',\n        defaultMessage: 'Hide replies',\n        description: 'Text to show to hide more replies of comment or annotation',\n    },\n});\n\nexport default messages;\n","// @flow\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport getProp from 'lodash/get';\nimport noop from 'lodash/noop';\nimport TetherComponent from 'react-tether';\nimport ActivityError from '../common/activity-error';\nimport ActivityMessage from '../common/activity-message';\nimport ActivityTimestamp from '../common/activity-timestamp';\nimport AnnotationActivityLink from './AnnotationActivityLink';\nimport AnnotationActivityMenu from './AnnotationActivityMenu';\nimport Avatar from '../Avatar';\nimport CommentForm from '../comment-form/CommentForm';\nimport DeleteConfirmation from '../common/delete-confirmation';\nimport Media from '../../../../components/media';\nimport messages from './messages';\nimport SelectableActivityCard from '../SelectableActivityCard';\nimport UserLink from '../common/user-link';\nimport { ACTIVITY_TARGETS } from '../../../common/interactionTargets';\nimport { PLACEHOLDER_USER } from '../../../../constants';\nimport type { Annotation, AnnotationPermission, FeedItemStatus } from '../../../../common/types/feed';\nimport type { GetAvatarUrlCallback, GetProfileUrlCallback } from '../../../common/flowTypes';\nimport type { SelectorItems, User } from '../../../../common/types/core';\n\nimport './AnnotationActivity.scss';\n\ntype Props = {\n    currentUser?: User,\n    getAvatarUrl: GetAvatarUrlCallback,\n    getMentionWithQuery?: (searchStr: string) => void,\n    getUserProfileUrl?: GetProfileUrlCallback,\n    isCurrentVersion: boolean,\n    item: Annotation,\n    mentionSelectorContacts?: SelectorItems<User>,\n    onDelete?: ({ id: string, permissions: AnnotationPermission }) => any,\n    onEdit?: (id: string, text: string, permissions: AnnotationPermission) => void,\n    onSelect?: (annotation: Annotation) => any,\n    onStatusChange?: (id: string, status: FeedItemStatus, permissions: AnnotationPermission) => void,\n};\n\nconst AnnotationActivity = ({\n    currentUser,\n    item,\n    getAvatarUrl,\n    getMentionWithQuery,\n    getUserProfileUrl,\n    isCurrentVersion,\n    mentionSelectorContacts,\n    onDelete = noop,\n    onEdit = noop,\n    onSelect = noop,\n    onStatusChange = noop,\n}: Props) => {\n    const [isConfirmingDelete, setIsConfirmingDelete] = React.useState(false);\n    const [isEditing, setIsEditing] = React.useState(false);\n    const [isMenuOpen, setIsMenuOpen] = React.useState(false);\n    const {\n        created_at,\n        created_by,\n        description,\n        error,\n        file_version,\n        id,\n        isPending,\n        permissions = {},\n        status,\n        target,\n    } = item;\n    const { can_delete: canDelete, can_edit: canEdit, can_resolve: canResolve } = permissions;\n    const isFileVersionUnavailable = file_version === null;\n    const isCardDisabled = !!error || isConfirmingDelete || isMenuOpen || isEditing || isFileVersionUnavailable;\n    const isMenuVisible = (canDelete || canEdit || canResolve) && !isPending;\n\n    const handleDelete = (): void => setIsConfirmingDelete(true);\n    const handleDeleteCancel = (): void => setIsConfirmingDelete(false);\n    const handleDeleteConfirm = (): void => {\n        setIsConfirmingDelete(false);\n        onDelete({ id, permissions });\n    };\n    const handleEdit = (): void => setIsEditing(true);\n    const handleFormCancel = (): void => setIsEditing(false);\n    const handleFormSubmit = ({ text }): void => {\n        setIsEditing(false);\n        onEdit(id, text, permissions);\n    };\n    const handleMenuClose = (): void => setIsMenuOpen(false);\n    const handleMenuOpen = (): void => setIsMenuOpen(true);\n    const handleMouseDown = (event: MouseEvent) => {\n        if (isCardDisabled) {\n            return;\n        }\n\n        // Prevents document event handlers from executing because box-annotations relies on\n        // detecting mouse events on the document outside of annotation targets to determine when to\n        // deselect annotations\n        event.stopPropagation();\n    };\n    const handleSelect = () => onSelect(item);\n\n    const handleStatusChange = (newStatus: FeedItemStatus) => onStatusChange(id, newStatus, permissions);\n\n    const createdAtTimestamp = new Date(created_at).getTime();\n    const createdByUser = created_by || PLACEHOLDER_USER;\n    const linkMessage = isCurrentVersion ? messages.annotationActivityPageItem : messages.annotationActivityVersionLink;\n    const linkValue = isCurrentVersion ? target.location.value : getProp(file_version, 'version_number');\n    const message = (description && description.message) || '';\n    const activityLinkMessage = isFileVersionUnavailable\n        ? messages.annotationActivityVersionUnavailable\n        : { ...linkMessage, values: { number: linkValue } };\n    const tetherProps = {\n        attachment: 'top right',\n        className: 'bcs-AnnotationActivity-deleteConfirmationModal',\n        constraints: [{ to: 'scrollParent', attachment: 'together' }],\n        targetAttachment: 'bottom right',\n    };\n\n    return (\n        <>\n            <SelectableActivityCard\n                className=\"bcs-AnnotationActivity\"\n                data-resin-feature=\"annotations\"\n                data-resin-iscurrent={isCurrentVersion}\n                data-resin-itemid={id}\n                data-resin-target=\"annotationButton\"\n                isDisabled={isCardDisabled}\n                onMouseDown={handleMouseDown}\n                onSelect={handleSelect}\n            >\n                <Media\n                    className={classNames('bcs-AnnotationActivity-media', {\n                        'bcs-is-pending': isPending || error,\n                    })}\n                >\n                    <Media.Figure>\n                        <Avatar getAvatarUrl={getAvatarUrl} user={createdByUser} />\n                    </Media.Figure>\n                    <Media.Body>\n                        <div className=\"bcs-AnnotationActivity-headline\">\n                            <UserLink\n                                data-resin-target={ACTIVITY_TARGETS.PROFILE}\n                                getUserProfileUrl={getUserProfileUrl}\n                                id={createdByUser.id}\n                                name={createdByUser.name}\n                            />\n                        </div>\n                        <div className=\"bcs-AnnotationActivity-timestamp\">\n                            <ActivityTimestamp date={createdAtTimestamp} />\n                            <AnnotationActivityLink\n                                className=\"bcs-AnnotationActivity-link\"\n                                data-resin-target=\"annotationLink\"\n                                id={id}\n                                isDisabled={isFileVersionUnavailable}\n                                message={activityLinkMessage}\n                                onClick={handleSelect}\n                            />\n                        </div>\n                        {isEditing && currentUser ? (\n                            <CommentForm\n                                className=\"bcs-AnnotationActivity-editor\"\n                                entityId={id}\n                                getAvatarUrl={getAvatarUrl}\n                                getMentionWithQuery={getMentionWithQuery}\n                                isEditing={isEditing}\n                                isOpen={isEditing}\n                                mentionSelectorContacts={mentionSelectorContacts}\n                                onCancel={handleFormCancel}\n                                updateComment={handleFormSubmit}\n                                user={currentUser}\n                                tagged_message={message}\n                            />\n                        ) : (\n                            <ActivityMessage id={id} tagged_message={message} getUserProfileUrl={getUserProfileUrl} />\n                        )}\n                    </Media.Body>\n                </Media>\n                {/* $FlowFixMe */}\n                {error ? <ActivityError {...error} /> : null}\n            </SelectableActivityCard>\n            <TetherComponent {...tetherProps}>\n                {isMenuVisible && (\n                    <AnnotationActivityMenu\n                        canDelete={canDelete}\n                        canEdit={canEdit}\n                        canResolve={canResolve}\n                        className=\"bcs-AnnotationActivity-menu\"\n                        id={id}\n                        isDisabled={isConfirmingDelete}\n                        status={status}\n                        onDelete={handleDelete}\n                        onEdit={handleEdit}\n                        onMenuClose={handleMenuClose}\n                        onMenuOpen={handleMenuOpen}\n                        onStatusChange={handleStatusChange}\n                    />\n                )}\n                {isConfirmingDelete && (\n                    <DeleteConfirmation\n                        data-resin-component={ACTIVITY_TARGETS.ANNOTATION_OPTIONS}\n                        isOpen={isConfirmingDelete}\n                        message={messages.annotationActivityDeletePrompt}\n                        onDeleteCancel={handleDeleteCancel}\n                        onDeleteConfirm={handleDeleteConfirm}\n                    />\n                )}\n            </TetherComponent>\n        </>\n    );\n};\n\nexport default AnnotationActivity;\n","// extracted by mini-css-extract-plugin","// extracted by mini-css-extract-plugin","import * as React from 'react';\nimport classNames from 'classnames';\nimport noop from 'lodash/noop';\nimport { injectIntl, MessageDescriptor, WrappedComponentProps } from 'react-intl';\nimport PlainButton from '../../../../components/plain-button';\nimport { ButtonType } from '../../../../components/button';\nimport './AnnotationActivityLink.scss';\n\ntype MessageDescriptorWithValues = {\n    values?: Record<string, number>;\n} & MessageDescriptor;\nexport interface AnnotationActivityLinkProps extends WrappedComponentProps {\n    className?: string;\n    id: string;\n    isDisabled: boolean;\n    message: MessageDescriptorWithValues;\n    onClick: (id: string) => void;\n}\n\nconst AnnotationActivityLink = ({\n    className,\n    id,\n    intl,\n    isDisabled = false,\n    message,\n    onClick = noop,\n    ...rest\n}: AnnotationActivityLinkProps): JSX.Element => {\n    const { values, ...messageDescriptor } = message;\n    const translatedMessage = intl.formatMessage(messageDescriptor, values);\n\n    const handleClick = (event: React.SyntheticEvent<HTMLButtonElement>) => {\n        event.preventDefault();\n        event.stopPropagation();\n        event.currentTarget.focus(); // Buttons do not receive focus in Firefox and Safari on MacOS\n\n        onClick(id);\n    };\n\n    const handleMouseDown = (event: React.MouseEvent<HTMLButtonElement>) => {\n        if (isDisabled) {\n            return;\n        }\n\n        // Prevents document event handlers from executing because box-annotations relies on\n        // detecting mouse events on the document outside of annotation targets to determine when to\n        // deselect annotations. This link also may represent that annotation target in the sidebar.\n        event.nativeEvent.stopImmediatePropagation();\n    };\n\n    return (\n        <PlainButton\n            className={classNames('bcs-AnnotationActivityLink', className)}\n            data-testid=\"bcs-AnnotationActivity-link\"\n            isDisabled={isDisabled}\n            onClick={handleClick}\n            onMouseDown={handleMouseDown}\n            title={translatedMessage}\n            type={ButtonType.BUTTON}\n            {...rest}\n        >\n            <span className=\"bcs-AnnotationActivityLink-message\">{translatedMessage}</span>\n        </PlainButton>\n    );\n};\n\nexport { AnnotationActivityLink as AnnotationActivityLinkBase };\n\nexport default injectIntl(AnnotationActivityLink);\n","// @flow\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { FormattedMessage } from 'react-intl';\nimport DropdownMenu from '../../../../components/dropdown-menu';\nimport Checkmark16 from '../../../../icon/fill/Checkmark16';\nimport IconEllipsis from '../../../../icons/general/IconEllipsis';\nimport Pencil16 from '../../../../icon/line/Pencil16';\nimport PlainButton from '../../../../components/plain-button';\nimport Trash16 from '../../../../icon/fill/Trash16';\nimport X16 from '../../../../icon/fill/X16';\nimport { Menu, MenuItem } from '../../../../components/menu';\nimport { ACTIVITY_TARGETS } from '../../../common/interactionTargets';\nimport { COMMENT_STATUS_OPEN, COMMENT_STATUS_RESOLVED } from '../../../../constants';\nimport { bdlGray50 } from '../../../../styles/variables';\nimport type { FeedItemStatus } from '../../../../common/types/feed';\nimport messages from './messages';\n\ntype AnnotationActivityMenuProps = {\n    canDelete?: boolean,\n    canEdit?: boolean,\n    canResolve?: boolean,\n    className?: string,\n    id: string,\n    isDisabled?: boolean,\n    onDelete: () => void,\n    onEdit: () => void,\n    onMenuClose: () => void,\n    onMenuOpen: () => void,\n    onStatusChange: (newStatus: FeedItemStatus) => void,\n    status?: FeedItemStatus,\n};\n\nconst AnnotationActivityMenu = ({\n    canDelete,\n    canEdit,\n    canResolve,\n    className,\n    id,\n    isDisabled,\n    onDelete,\n    onEdit,\n    onMenuClose,\n    onMenuOpen,\n    onStatusChange,\n    status,\n}: AnnotationActivityMenuProps) => {\n    const menuProps = {\n        'data-resin-component': 'preview',\n        'data-resin-feature': 'annotations',\n    };\n    const isResolved = status === COMMENT_STATUS_RESOLVED;\n\n    return (\n        <DropdownMenu constrainToScrollParent isRightAligned onMenuClose={onMenuClose} onMenuOpen={onMenuOpen}>\n            <PlainButton\n                className={classNames('bcs-AnnotationActivityMenu', className)}\n                isDisabled={isDisabled}\n                data-testid=\"annotation-activity-actions-menu\"\n                type=\"button\"\n            >\n                <IconEllipsis color={bdlGray50} height={16} width={16} />\n            </PlainButton>\n            <Menu {...menuProps}>\n                {canResolve && isResolved && (\n                    <MenuItem\n                        data-resin-itemid={id}\n                        data-resin-target={ACTIVITY_TARGETS.ANNOTATION_OPTIONS_UNRESOLVE}\n                        data-testid=\"unresolve-annotation-activity\"\n                        onClick={() => onStatusChange(COMMENT_STATUS_OPEN)}\n                    >\n                        <X16 />\n                        <FormattedMessage {...messages.annotationActivityUnresolveMenuItem} />\n                    </MenuItem>\n                )}\n                {canResolve && !isResolved && (\n                    <MenuItem\n                        data-resin-itemid={id}\n                        data-resin-target={ACTIVITY_TARGETS.ANNOTATION_OPTIONS_RESOLVE}\n                        data-testid=\"resolve-annotation-activity\"\n                        onClick={() => onStatusChange(COMMENT_STATUS_RESOLVED)}\n                    >\n                        <Checkmark16 />\n                        <FormattedMessage {...messages.annotationActivityResolveMenuItem} />\n                    </MenuItem>\n                )}\n\n                {canEdit && (\n                    <MenuItem\n                        data-resin-itemid={id}\n                        data-resin-target={ACTIVITY_TARGETS.ANNOTATION_OPTIONS_EDIT}\n                        data-testid=\"edit-annotation-activity\"\n                        onClick={onEdit}\n                    >\n                        <Pencil16 />\n                        <FormattedMessage {...messages.annotationActivityEditMenuItem} />\n                    </MenuItem>\n                )}\n                {canDelete && (\n                    <MenuItem\n                        data-resin-itemid={id}\n                        data-resin-target={ACTIVITY_TARGETS.ANNOTATION_OPTIONS_DELETE}\n                        data-testid=\"delete-annotation-activity\"\n                        onClick={onDelete}\n                    >\n                        <Trash16 />\n                        <FormattedMessage {...messages.annotationActivityDeleteMenuItem} />\n                    </MenuItem>\n                )}\n            </Menu>\n        </DropdownMenu>\n    );\n};\n\nexport default AnnotationActivityMenu;\n","// @flow\nexport { default } from './AnnotationActivity';\n","import { defineMessages } from 'react-intl';\n\nconst messages = defineMessages({\n    annotationActivityDeleteMenuItem: {\n        id: 'be.contentSidebar.activityFeed.annotationActivity.annotationActivityDeleteMenuItem',\n        defaultMessage: 'Delete',\n        description: 'Text to show on menu item to delete the annotation comment',\n    },\n    annotationActivityDeletePrompt: {\n        id: 'be.contentSidebar.activityFeed.annotationActivity.annotationActivityDeletePrompt',\n        defaultMessage: 'Are you sure you want to permanently delete this comment?',\n        description: 'Confirmation prompt text to delete the annotation comment',\n    },\n    annotationActivityEditMenuItem: {\n        id: 'be.contentSidebar.activityFeed.annotationActivity.annotationActivityEditMenuItem',\n        defaultMessage: 'Modify',\n        description: 'Text to show on menu item to edit the annotation comment',\n    },\n    annotationActivityPostedFullDateTime: {\n        id: 'be.contentSidebar.activityFeed.annotationActivity.annotationActivityPostedFullDateTime',\n        defaultMessage: '{time, date, full} at {time, time, short}',\n        description: 'Full data and time for annotation title',\n    },\n    annotationActivityPageItem: {\n        id: 'be.contentSidebar.activityFeed.annotationActivityPageItem',\n        defaultMessage: 'Page {number}',\n        description: 'Annotation activity item link shown on annotation activity',\n    },\n    annotationActivityResolveMenuItem: {\n        id: 'be.contentSidebar.activityFeed.annotationActivity.annotationActivityResolveMenuItem',\n        defaultMessage: 'Resolve',\n        description: 'Text to show on menu item to resolve the annotation comment',\n    },\n    annotationActivityVersionLink: {\n        id: 'be.contentSidebar.activityFeed.annotationActivityVersionLink',\n        defaultMessage: 'Version {number}',\n        description: 'Annotation activity item link shown on annotation activity for previous file version',\n    },\n    annotationActivityVersionUnavailable: {\n        id: 'be.contentSidebar.activityFeed.annotationActivityVersionUnavailable',\n        defaultMessage: 'Version Unavailable',\n        description:\n            'Annotation activity item link shown on annotation activity for previous file version that is unavailable',\n    },\n    annotationActivityUnresolveMenuItem: {\n        id: 'be.contentSidebar.activityFeed.annotationActivity.annotationActivityUnresolveMenuItem',\n        defaultMessage: 'Unresolve',\n        description: 'Text to show on menu item to unresolve the annotation comment',\n    },\n});\n\nexport default messages;\n","/**\n * @flow\n * @file AppActivity component\n */\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport getProp from 'lodash/get';\nimport noop from 'lodash/noop';\nimport TetherComponent from 'react-tether';\nimport { FormattedMessage, injectIntl } from 'react-intl';\n\nimport ActivityCard from '../ActivityCard';\nimport ActivityTimestamp from '../common/activity-timestamp';\nimport DeleteConfirmation from '../common/delete-confirmation';\nimport IconTrash from '../../../../icons/general/IconTrash';\nimport Media from '../../../../components/media';\nimport messages from './messages';\nimport { bdlGray80 } from '../../../../styles/variables';\nimport { Link } from '../../../../components/link';\nimport { MenuItem } from '../../../../components/menu';\nimport type { AppItem, ActivityTemplateItem, ActionItemError } from '../../../../common/types/feed';\nimport type { User, BoxItemPermission } from '../../../../common/types/core';\nimport './AppActivity.scss';\n\ntype Props = {\n    activity_template: ActivityTemplateItem,\n    app: AppItem,\n    created_at: string,\n    created_by: User,\n    currentUser?: User,\n    error?: ActionItemError,\n    id: string,\n    intl: any,\n    isPending?: boolean,\n    onDelete: ({ id: string, permissions?: {} }) => void,\n    permissions?: BoxItemPermission,\n    rendered_text: string,\n};\n\ntype State = {\n    isConfirmingDelete: boolean,\n};\n\nfunction mapActivityNodes(node: HTMLLinkElement): React.Node {\n    const { dataset = {}, href = '#', tagName, textContent } = node;\n\n    switch (tagName) {\n        case 'A':\n            return (\n                <Link\n                    href={href}\n                    data-resin-target={dataset.resinTarget}\n                    data-resin-action={dataset.resinAction}\n                    key={`app_actvity_link_${href}`}\n                    rel=\"roreferrer noopener\"\n                    className=\"bcs-AppActivity-link\"\n                    target=\"_blank\"\n                >\n                    {textContent}\n                </Link>\n            );\n        default:\n            return textContent;\n    }\n}\n\nclass AppActivity extends React.PureComponent<Props, State> {\n    static defaultProps = {\n        onDelete: noop,\n        permissions: {},\n    };\n\n    parser = new DOMParser();\n\n    state: State = {\n        isConfirmingDelete: false,\n    };\n\n    handleDeleteCancel = (): void => {\n        this.setState({ isConfirmingDelete: false });\n    };\n\n    handleDeleteClick = () => {\n        this.setState({ isConfirmingDelete: true });\n    };\n\n    handleDeleteConfirm = (): void => {\n        const { id, onDelete, permissions } = this.props;\n\n        onDelete({ id, permissions });\n    };\n\n    parseActivity = (): Array<HTMLLinkElement> => {\n        const { rendered_text: renderedText } = this.props;\n        const doc: Document = this.parser.parseFromString(renderedText, 'text/html');\n        if (!doc) {\n            return [];\n        }\n\n        const childNodes = getProp(doc, 'body.childNodes', []);\n        return Array.from(childNodes);\n    };\n\n    render() {\n        const {\n            activity_template: { id: templateId },\n            app: { name, icon_url },\n            created_at: createdAt,\n            created_by: createdBy,\n            currentUser,\n            error,\n            intl,\n            isPending,\n            permissions,\n        } = this.props;\n\n        const canDelete = getProp(permissions, 'can_delete', false) || (currentUser && currentUser.id === createdBy.id);\n        const createdAtTimestamp = new Date(createdAt).getTime();\n        const isMenuVisible = canDelete && !isPending;\n        const { isConfirmingDelete } = this.state;\n\n        return (\n            <ActivityCard\n                className=\"bcs-AppActivity\"\n                data-resin-target=\"loaded\"\n                data-resin-feature={`appActivityCard${templateId}`}\n            >\n                <Media\n                    className={classNames({\n                        'bcs-is-pending': isPending || error,\n                    })}\n                >\n                    <Media.Figure>\n                        <img\n                            className=\"bcs-AppActivity-icon\"\n                            alt={intl.formatMessage(messages.appActivityAltIcon, { appActivityName: name })}\n                            src={icon_url}\n                        />\n                    </Media.Figure>\n\n                    <Media.Body className=\"bcs-AppActivity-body\">\n                        {isMenuVisible && (\n                            <TetherComponent\n                                attachment=\"top right\"\n                                className=\"bcs-AppActivity-confirm\"\n                                constraints={[{ to: 'scrollParent', attachment: 'together' }]}\n                                targetAttachment=\"bottom right\"\n                            >\n                                <Media.Menu isDisabled={isConfirmingDelete}>\n                                    <MenuItem onClick={this.handleDeleteClick}>\n                                        <IconTrash color={bdlGray80} />\n                                        <FormattedMessage {...messages.appActivityDeleteMenuItem} />\n                                    </MenuItem>\n                                </Media.Menu>\n\n                                {isConfirmingDelete && (\n                                    <DeleteConfirmation\n                                        isOpen={isConfirmingDelete}\n                                        message={messages.appActivityDeletePrompt}\n                                        onDeleteCancel={this.handleDeleteCancel}\n                                        onDeleteConfirm={this.handleDeleteConfirm}\n                                    />\n                                )}\n                            </TetherComponent>\n                        )}\n\n                        <figcaption className=\"bcs-AppActivity-headline\">{name}</figcaption>\n\n                        <div>\n                            <ActivityTimestamp date={createdAtTimestamp} />\n                        </div>\n\n                        {this.parseActivity().map(mapActivityNodes)}\n                    </Media.Body>\n                </Media>\n            </ActivityCard>\n        );\n    }\n}\n\nexport default injectIntl(AppActivity);\n","// extracted by mini-css-extract-plugin","// @flow\nexport { default } from './AppActivity';\n","/**\n * @flow\n * @file i18n messages\n * @author Box\n */\n\nimport { defineMessages } from 'react-intl';\n\nconst messages = defineMessages({\n    appActivityDeleteMenuItem: {\n        id: 'be.appActivity.deleteMenuItem',\n        defaultMessage: 'Delete',\n        description: 'Text to display in the delete app activity submit button',\n    },\n    appActivityDeletePrompt: {\n        id: 'be.appActivity.deletePrompt',\n        defaultMessage: 'Are you sure you want to permanently delete this app activity?',\n        description: 'Confirmation prompt text to delete app activity',\n    },\n    appActivityAltIcon: {\n        id: 'be.appActivity.altIcon',\n        defaultMessage: '{appActivityName} Icon',\n        description: 'Alt message if app activity icon is missing or cannot load',\n    },\n});\n\nexport default messages;\n","/**\n * @flow\n * @file Component for Approval comment form\n */\n\nimport * as React from 'react';\nimport noop from 'lodash/noop';\nimport classNames from 'classnames';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport type { InjectIntlProvidedProps } from 'react-intl';\nimport Avatar from '../Avatar';\nimport CommentFormControls from './CommentFormControls';\nimport DraftJSMentionSelector, {\n    createMentionSelectorState,\n    getFormattedCommentText,\n} from '../../../../components/form-elements/draft-js-mention-selector';\nimport Form from '../../../../components/form-elements/form/Form';\nimport Media from '../../../../components/media';\nimport messages from './messages';\nimport type { GetAvatarUrlCallback } from '../../../common/flowTypes';\nimport type { SelectorItems, User } from '../../../../common/types/core';\n\nimport './CommentForm.scss';\n\ntype Props = {\n    className: string,\n    contactsLoaded?: boolean,\n    createComment?: Function,\n    entityId?: string,\n    getAvatarUrl: GetAvatarUrlCallback,\n    getMentionWithQuery?: Function,\n    isDisabled?: boolean,\n    isEditing?: boolean,\n    isOpen: boolean,\n    mentionSelectorContacts?: SelectorItems<>,\n    onCancel: Function,\n    onFocus?: Function,\n    onSubmit?: Function,\n    showTip?: boolean,\n    tagged_message?: string,\n    updateComment?: Function,\n    user: User,\n} & InjectIntlProvidedProps;\n\ntype State = {\n    commentEditorState: any,\n};\n\nclass CommentForm extends React.Component<Props, State> {\n    static defaultProps = {\n        isOpen: false,\n    };\n\n    state = {\n        commentEditorState: createMentionSelectorState(this.props.tagged_message),\n    };\n\n    componentDidUpdate({ isOpen: prevIsOpen }: Props): void {\n        const { isOpen } = this.props;\n\n        if (isOpen !== prevIsOpen && !isOpen) {\n            this.setState({\n                commentEditorState: createMentionSelectorState(),\n            });\n        }\n    }\n\n    onFormValidSubmitHandler = (): void => {\n        const { createComment = noop, updateComment = noop, onSubmit, entityId } = this.props;\n\n        const { text, hasMention } = this.getFormattedCommentText();\n\n        if (!text) {\n            return;\n        }\n\n        if (entityId) {\n            updateComment({ id: entityId, text, hasMention });\n        } else {\n            createComment({ text, hasMention });\n        }\n\n        if (onSubmit) {\n            onSubmit();\n        }\n\n        this.setState({\n            commentEditorState: createMentionSelectorState(),\n        });\n    };\n\n    onMentionSelectorChangeHandler = (nextEditorState: any): void =>\n        this.setState({ commentEditorState: nextEditorState });\n\n    /**\n     * Formats the comment editor's text such that it will be accepted by the server.\n     *\n     * @returns {Object}\n     */\n    getFormattedCommentText = (): { hasMention: boolean, text: string } => {\n        const { commentEditorState } = this.state;\n\n        return getFormattedCommentText(commentEditorState);\n    };\n\n    render(): React.Node {\n        const {\n            className,\n            getMentionWithQuery,\n            intl: { formatMessage },\n            isDisabled,\n            isOpen,\n            mentionSelectorContacts = [],\n            contactsLoaded,\n            onCancel,\n            onFocus,\n            user,\n            isEditing,\n            tagged_message,\n            getAvatarUrl,\n            showTip = true,\n        } = this.props;\n        const { commentEditorState } = this.state;\n        const inputContainerClassNames = classNames('bcs-CommentForm', className, {\n            'bcs-is-open': isOpen,\n        });\n\n        return (\n            <Media className={inputContainerClassNames}>\n                {!isEditing && (\n                    <Media.Figure className=\"bcs-CommentForm-avatar\">\n                        <Avatar getAvatarUrl={getAvatarUrl} user={user} />\n                    </Media.Figure>\n                )}\n\n                <Media.Body className=\"bcs-CommentForm-body\" data-testid=\"bcs-CommentForm-body\">\n                    <Form onValidSubmit={this.onFormValidSubmitHandler}>\n                        <DraftJSMentionSelector\n                            className=\"bcs-CommentForm-input\"\n                            contacts={isOpen ? mentionSelectorContacts : []}\n                            contactsLoaded={contactsLoaded}\n                            editorState={commentEditorState}\n                            hideLabel\n                            isDisabled={isDisabled}\n                            isRequired={isOpen}\n                            name=\"commentText\"\n                            label={formatMessage(messages.commentLabel)}\n                            description={formatMessage(messages.atMentionTipDescription)}\n                            onChange={this.onMentionSelectorChangeHandler}\n                            onFocus={onFocus}\n                            onMention={getMentionWithQuery}\n                            placeholder={tagged_message ? undefined : formatMessage(messages.commentWrite)}\n                            validateOnBlur={false}\n                        />\n                        {showTip && (\n                            <div className=\"bcs-CommentForm-tip\">\n                                <FormattedMessage {...messages.atMentionTip} />\n                            </div>\n                        )}\n\n                        {isOpen && <CommentFormControls onCancel={onCancel} />}\n                    </Form>\n                </Media.Body>\n            </Media>\n        );\n    }\n}\n\n// For testing only\nexport { CommentForm as CommentFormUnwrapped };\nexport default injectIntl(CommentForm);\n","// extracted by mini-css-extract-plugin","/**\n * @flow\n * @file Comment Input Controls components for CommentForm\n */\n\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Button from '../../../../components/button/Button';\nimport PrimaryButton from '../../../../components/primary-button/PrimaryButton';\n\nimport messages from './messages';\nimport { ACTIVITY_TARGETS } from '../../../common/interactionTargets';\n\ntype Props = {\n    onCancel: Function,\n};\n\nconst CommentInputControls = ({ onCancel }: Props): React.Node => (\n    <div className=\"bcs-CommentFormControls\">\n        <Button data-resin-target={ACTIVITY_TARGETS.APPROVAL_FORM_CANCEL} onClick={onCancel} type=\"button\">\n            <FormattedMessage {...messages.commentCancel} />\n        </Button>\n        <PrimaryButton data-resin-target={ACTIVITY_TARGETS.APPROVAL_FORM_POST}>\n            <FormattedMessage {...messages.commentPost} />\n        </PrimaryButton>\n    </div>\n);\n\nexport default CommentInputControls;\n","// @flow\nexport { default } from './CommentForm';\n","/**\n * @flow\n * @file i18n messages\n * @author Box\n */\n\nimport { defineMessages } from 'react-intl';\n\nconst messages = defineMessages({\n    commentCancel: {\n        id: 'be.contentSidebar.activityFeed.commentForm.commentCancel',\n        defaultMessage: 'Cancel',\n        description: 'Text for cancel button',\n    },\n    commentLabel: {\n        id: 'be.contentSidebar.activityFeed.commentForm.commentLabel',\n        defaultMessage: 'Write a comment',\n        description: 'Accessible label for comment input field',\n    },\n    commentPost: {\n        id: 'be.contentSidebar.activityFeed.commentForm.commentPost',\n        defaultMessage: 'Post',\n        description: 'Text for post button',\n    },\n    commentWrite: {\n        id: 'be.contentSidebar.activityFeed.commentForm.commentWrite',\n        defaultMessage: 'Write a comment',\n        description: 'Placeholder for comment input',\n    },\n    approvalAddAssignee: {\n        id: 'be.contentSidebar.activityFeed.commentForm.approvalAddAssignee',\n        defaultMessage: 'Add an assignee',\n        description: 'Placeholder for approvers input',\n    },\n    approvalAddTask: {\n        id: 'be.contentSidebar.activityFeed.commentForm.approvalAddTask',\n        defaultMessage: 'Add Task',\n        description: 'Label for checkbox to add approvers to a comment',\n    },\n    approvalAddTaskTooltip: {\n        id: 'be.contentSidebar.activityFeed.commentForm.approvalAddTaskTooltip',\n        defaultMessage:\n            'Assigning a task to someone will send them a notification with the message in the comment box and allow them to approve or deny.',\n        description: 'Tooltip text for checkbox to add approvers to a comment',\n    },\n    approvalAssignees: {\n        id: 'be.contentSidebar.activityFeed.commentForm.approvalAssignees',\n        defaultMessage: 'Assignees',\n        description: 'Title for assignees input',\n    },\n    approvalDueDate: {\n        id: 'be.contentSidebar.activityFeed.commentForm.approvalDueDate',\n        defaultMessage: 'Due Date',\n        description: 'Title for approvers due date input',\n    },\n    approvalSelectDate: {\n        id: 'be.contentSidebar.activityFeed.commentForm.approvalSelectDate',\n        defaultMessage: 'Select a date',\n        description: 'Placeholder for due date input',\n    },\n    atMentionTip: {\n        id: 'be.contentSidebar.activityFeed.commentForm.atMentionTip',\n        defaultMessage: '@mention users to notify them.',\n        description: 'Mentioning call to action displayed below the comment input',\n    },\n    atMentionTipDescription: {\n        id: 'be.contentSidebar.activityFeed.commentForm.atMentionTipDescription',\n        defaultMessage:\n            'Use the @ symbol to mention users and use the up and down arrow keys to scroll through autocomplete suggestions.',\n        description: 'Mentioning call to action detailed description for screen reader users',\n    },\n});\n\nexport default messages;\n","// @flow\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport noop from 'lodash/noop';\nimport { FormattedMessage } from 'react-intl';\nimport TetherComponent from 'react-tether';\nimport Trash16 from '../../../../icon/line/Trash16';\nimport Pencil16 from '../../../../icon/line/Pencil16';\nimport Avatar from '../Avatar';\nimport Media from '../../../../components/media';\nimport { MenuItem } from '../../../../components/menu';\nimport { ACTIVITY_TARGETS } from '../../../common/interactionTargets';\nimport DeleteConfirmation from '../common/delete-confirmation';\nimport ActivityTimestamp from '../common/activity-timestamp';\nimport UserLink from '../common/user-link';\nimport ActivityCard from '../ActivityCard';\nimport ActivityError from '../common/activity-error';\nimport ActivityMessage from '../common/activity-message';\nimport CommentForm from '../comment-form';\nimport { PLACEHOLDER_USER } from '../../../../constants';\nimport messages from './messages';\nimport type { GetAvatarUrlCallback, GetProfileUrlCallback } from '../../../common/flowTypes';\nimport type { Translations } from '../../flowTypes';\nimport type { SelectorItems, User } from '../../../../common/types/core';\nimport type { ActionItemError, BoxCommentPermission, FeedItemStatus } from '../../../../common/types/feed';\nimport './Comment.scss';\n\ntype Props = {\n    created_at: string | number,\n    created_by: User,\n    currentUser?: User,\n    error?: ActionItemError,\n    getAvatarUrl: GetAvatarUrlCallback,\n    getMentionWithQuery?: Function,\n    getUserProfileUrl?: GetProfileUrlCallback,\n    id: string,\n    isDisabled?: boolean,\n    isPending?: boolean,\n    mentionSelectorContacts?: SelectorItems<>,\n    modified_at?: string | number,\n    onDelete: ({ id: string, permissions?: BoxCommentPermission }) => any,\n    onEdit: (\n        id: string,\n        text?: string,\n        status?: FeedItemStatus,\n        hasMention: boolean,\n        permissions: BoxCommentPermission,\n        onSuccess: ?Function,\n        onError: ?Function,\n    ) => void,\n    permissions: BoxCommentPermission,\n    tagged_message: string,\n    translatedTaggedMessage?: string,\n    translations?: Translations,\n};\n\ntype State = {\n    isConfirmingDelete: boolean,\n    isEditing: boolean,\n    isInputOpen: boolean,\n};\n\nclass Comment extends React.Component<Props, State> {\n    static defaultProps = {\n        onDelete: noop,\n        onEdit: noop,\n    };\n\n    state = {\n        isConfirmingDelete: false,\n        isEditing: false,\n        isInputOpen: false,\n    };\n\n    handleDeleteConfirm = (): void => {\n        const { id, onDelete, permissions } = this.props;\n        onDelete({ id, permissions });\n    };\n\n    handleDeleteCancel = (): void => {\n        this.setState({ isConfirmingDelete: false });\n    };\n\n    handleDeleteClick = () => {\n        this.setState({ isConfirmingDelete: true });\n    };\n\n    handleEditClick = (): void => {\n        this.setState({ isEditing: true, isInputOpen: true });\n    };\n\n    commentFormFocusHandler = (): void => this.setState({ isInputOpen: true });\n\n    commentFormCancelHandler = (): void => this.setState({ isInputOpen: false, isEditing: false });\n\n    commentFormSubmitHandler = (): void => this.setState({ isInputOpen: false, isEditing: false });\n\n    handleMessageUpdate = ({ id, text, hasMention }: { hasMention: boolean, id: string, text: string }): void => {\n        const { onEdit, permissions } = this.props;\n        onEdit(id, text, undefined, hasMention, permissions);\n        this.commentFormSubmitHandler();\n    };\n\n    render(): React.Node {\n        const {\n            created_by,\n            created_at,\n            permissions = {},\n            id,\n            isPending,\n            error,\n            tagged_message = '',\n            translatedTaggedMessage,\n            translations,\n            currentUser,\n            isDisabled,\n            getAvatarUrl,\n            getUserProfileUrl,\n            getMentionWithQuery,\n            mentionSelectorContacts,\n            onEdit,\n        } = this.props;\n        const { isConfirmingDelete, isEditing, isInputOpen } = this.state;\n        const createdAtTimestamp = new Date(created_at).getTime();\n        const createdByUser = created_by || PLACEHOLDER_USER;\n        const canEdit = onEdit !== noop && permissions.can_edit;\n        const canDelete = permissions.can_delete;\n        const isMenuVisible = (canDelete || canEdit) && !isPending;\n\n        return (\n            <ActivityCard className=\"bcs-Comment\">\n                <Media\n                    className={classNames('bcs-Comment-media', {\n                        'bcs-is-pending': isPending || error,\n                    })}\n                >\n                    <Media.Figure>\n                        <Avatar getAvatarUrl={getAvatarUrl} user={createdByUser} />\n                    </Media.Figure>\n                    <Media.Body>\n                        {isMenuVisible && (\n                            <TetherComponent\n                                attachment=\"top right\"\n                                className=\"bcs-Comment-deleteConfirmationModal\"\n                                constraints={[{ to: 'scrollParent', attachment: 'together' }]}\n                                targetAttachment=\"bottom right\"\n                            >\n                                <Media.Menu\n                                    isDisabled={isConfirmingDelete}\n                                    data-testid=\"comment-actions-menu\"\n                                    menuProps={{\n                                        'data-resin-component': ACTIVITY_TARGETS.COMMENT_OPTIONS,\n                                    }}\n                                >\n                                    {canEdit && (\n                                        <MenuItem\n                                            data-resin-target={ACTIVITY_TARGETS.COMMENT_OPTIONS_EDIT}\n                                            data-testid=\"edit-comment\"\n                                            onClick={this.handleEditClick}\n                                        >\n                                            <Pencil16 />\n                                            <FormattedMessage {...messages.commentEditMenuItem} />\n                                        </MenuItem>\n                                    )}\n                                    {canDelete && (\n                                        <MenuItem\n                                            data-resin-target={ACTIVITY_TARGETS.COMMENT_OPTIONS_DELETE}\n                                            data-testid=\"delete-comment\"\n                                            onClick={this.handleDeleteClick}\n                                        >\n                                            <Trash16 />\n                                            <FormattedMessage {...messages.commentDeleteMenuItem} />\n                                        </MenuItem>\n                                    )}\n                                </Media.Menu>\n                                {isConfirmingDelete && (\n                                    <DeleteConfirmation\n                                        data-resin-component={ACTIVITY_TARGETS.COMMENT_OPTIONS}\n                                        isOpen={isConfirmingDelete}\n                                        message={messages.commentDeletePrompt}\n                                        onDeleteCancel={this.handleDeleteCancel}\n                                        onDeleteConfirm={this.handleDeleteConfirm}\n                                    />\n                                )}\n                            </TetherComponent>\n                        )}\n                        <div className=\"bcs-Comment-headline\">\n                            <UserLink\n                                data-resin-target={ACTIVITY_TARGETS.PROFILE}\n                                id={createdByUser.id}\n                                name={createdByUser.name}\n                                getUserProfileUrl={getUserProfileUrl}\n                            />\n                        </div>\n                        <div>\n                            <ActivityTimestamp date={createdAtTimestamp} />\n                        </div>\n                        {isEditing ? (\n                            <CommentForm\n                                isDisabled={isDisabled}\n                                className={classNames('bcs-Comment-editor', {\n                                    'bcs-is-disabled': isDisabled,\n                                })}\n                                updateComment={this.handleMessageUpdate}\n                                isOpen={isInputOpen}\n                                // $FlowFixMe\n                                user={currentUser}\n                                onCancel={this.commentFormCancelHandler}\n                                onFocus={this.commentFormFocusHandler}\n                                isEditing={isEditing}\n                                entityId={id}\n                                tagged_message={tagged_message}\n                                getAvatarUrl={getAvatarUrl}\n                                mentionSelectorContacts={mentionSelectorContacts}\n                                getMentionWithQuery={getMentionWithQuery}\n                            />\n                        ) : (\n                            <ActivityMessage\n                                id={id}\n                                tagged_message={tagged_message}\n                                translatedTaggedMessage={translatedTaggedMessage}\n                                {...translations}\n                                translationFailed={error ? true : null}\n                                getUserProfileUrl={getUserProfileUrl}\n                            />\n                        )}\n                    </Media.Body>\n                </Media>\n                {/* $FlowFixMe */}\n                {error ? <ActivityError {...error} /> : null}\n            </ActivityCard>\n        );\n    }\n}\n\nexport default Comment;\n","// extracted by mini-css-extract-plugin","// @flow\nexport { default } from './Comment';\n","/**\n * @flow\n * @file i18n messages\n * @author Box\n */\n\nimport { defineMessages } from 'react-intl';\n\nconst messages = defineMessages({\n    commentDeleteMenuItem: {\n        id: 'be.contentSidebar.activityFeed.comment.commentDeleteMenuItem',\n        defaultMessage: 'Delete',\n        description: 'Text to show on menu item to delete comment',\n    },\n    commentDeletePrompt: {\n        id: 'be.contentSidebar.activityFeed.comment.commentDeletePrompt',\n        defaultMessage: 'Are you sure you want to permanently delete this comment?',\n        description: 'Confirmation prompt text to delete comment',\n    },\n    commentEditMenuItem: {\n        id: 'be.contentSidebar.activityFeed.comment.commentEditMenuItem',\n        defaultMessage: 'Modify',\n        description: 'Text to show on menu item to edit comment',\n    },\n    commentPostedFullDateTime: {\n        id: 'be.contentSidebar.activityFeed.comment.commentPostedFullDateTime',\n        defaultMessage: '{time, date, full} at {time, time, short}',\n        description: 'Comment posted full date time for title',\n    },\n});\n\nexport default messages;\n","import * as React from 'react';\nimport { IntlConfig } from 'react-intl';\n// @ts-ignore flow import\nimport ReadableTime from '../../../../../components/time/ReadableTime';\n\nexport const MILLISECONDS_PER_YEAR = 365 * 24 * 60 * 60 * 1000; // 365 days * 24 hours * 60 minutes * 60 seconds * 1000 milliseconds\n\n// TODO: duplicated ReadableTime props until it migrates to typescript\ntype ReadableTimeProps = {\n    allowFutureTimestamps?: boolean;\n    alwaysShowTime?: boolean;\n    intl: IntlConfig;\n    relativeThreshold?: number;\n    showWeekday?: boolean;\n    timestamp: number;\n    uppercase?: boolean;\n};\n\nexport type Props = {\n    date: string | Date | number;\n} & Partial<ReadableTimeProps>;\n\nconst ActivityDatestamp = ({ date, ...rest }: Props) => {\n    const now = new Date().getTime();\n    const dateInMs = new Date(date).getTime();\n    // Only show time if activity time is within the last year\n    const showTime = now - dateInMs < MILLISECONDS_PER_YEAR;\n    return <ReadableTime timestamp={dateInMs} alwaysShowTime={showTime} relativeThreshold={0} {...rest} />;\n};\n\nexport default ActivityDatestamp;\n","export { default } from './ActivityDatestamp';\n","// @flow\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport type { MessageDescriptor } from 'react-intl';\nimport classnames from 'classnames';\nimport InlineError from '../../../../../components/inline-error';\nimport PlainButton from '../../../../../components/plain-button';\nimport './ActivityError.scss';\n\ntype Props = {\n    action?: {\n        onAction: Function,\n        text: string,\n    },\n    className?: string,\n    message: MessageDescriptor,\n    title: MessageDescriptor,\n};\n\nconst ActivityError = ({ action, message, title, className, ...rest }: Props): React.Node => (\n    <InlineError\n        className={classnames('bcs-ActivityError', className)}\n        title={<FormattedMessage {...title} {...rest} />}\n    >\n        <div>\n            <FormattedMessage {...message} />\n        </div>\n        {action ? (\n            <PlainButton className=\"bcs-ActivityError-action lnk\" onClick={action.onAction} type=\"button\">\n                {action.text}\n            </PlainButton>\n        ) : null}\n    </InlineError>\n);\n\nexport default ActivityError;\n","// extracted by mini-css-extract-plugin","// @flow\nexport { default } from './ActivityError';\n","// @flow\nimport * as React from 'react';\nimport noop from 'lodash/noop';\nimport LoadingIndicator from '../../../../../components/loading-indicator';\nimport formatTaggedMessage from '../../utils/formatTaggedMessage';\nimport ShowOriginalButton from './ShowOriginalButton';\nimport TranslateButton from './TranslateButton';\nimport type { GetProfileUrlCallback } from '../../../../common/flowTypes';\nimport './ActivityMessage.scss';\n\ntype Props = {\n    getUserProfileUrl?: GetProfileUrlCallback,\n    id: string,\n    onTranslate?: Function,\n    tagged_message: string,\n    translatedTaggedMessage?: string,\n    translationEnabled?: boolean,\n    translationFailed?: ?boolean,\n};\n\ntype State = {\n    isLoading?: boolean,\n    isTranslation?: boolean,\n};\n\nclass ActivityMessage extends React.Component<Props, State> {\n    static defaultProps = {\n        translationEnabled: false,\n    };\n\n    state = {\n        isLoading: false,\n        isTranslation: false,\n    };\n\n    componentDidUpdate(prevProps: Props): void {\n        const { translatedTaggedMessage, translationFailed } = this.props;\n        const { translatedTaggedMessage: prevTaggedMessage, translationFailed: prevTranslationFailed } = prevProps;\n\n        if (prevTaggedMessage === translatedTaggedMessage || prevTranslationFailed === translationFailed) {\n            return;\n        }\n\n        if (translatedTaggedMessage || translationFailed) {\n            this.setState({ isLoading: false });\n        }\n    }\n\n    getButton(isTranslation?: boolean): React.Node {\n        let button = null;\n        if (isTranslation) {\n            button = <ShowOriginalButton handleShowOriginal={this.handleShowOriginal} />;\n        } else {\n            button = <TranslateButton handleTranslate={this.handleTranslate} />;\n        }\n\n        return button;\n    }\n\n    handleTranslate = (event: SyntheticMouseEvent<>): void => {\n        const { id, tagged_message, onTranslate = noop, translatedTaggedMessage } = this.props;\n        if (!translatedTaggedMessage) {\n            this.setState({ isLoading: true });\n            onTranslate({ id, tagged_message });\n        }\n\n        this.setState({ isTranslation: true });\n        event.preventDefault();\n    };\n\n    handleShowOriginal = (event: SyntheticMouseEvent<>): void => {\n        this.setState({ isTranslation: false });\n        event.preventDefault();\n    };\n\n    render(): React.Node {\n        const { id, tagged_message, translatedTaggedMessage, translationEnabled, getUserProfileUrl } = this.props;\n        const { isLoading, isTranslation } = this.state;\n        const commentToDisplay =\n            translationEnabled && isTranslation && translatedTaggedMessage ? translatedTaggedMessage : tagged_message;\n        return isLoading ? (\n            <div className=\"bcs-ActivityMessageLoading\">\n                <LoadingIndicator size=\"small\" />\n            </div>\n        ) : (\n            <div className=\"bcs-ActivityMessage\">\n                {formatTaggedMessage(commentToDisplay, id, false, getUserProfileUrl)}\n                {translationEnabled ? this.getButton(isTranslation) : null}\n            </div>\n        );\n    }\n}\n\nexport default ActivityMessage;\n","// extracted by mini-css-extract-plugin","/**\n * @flow\n * @file Show Original button component used by Comment Text component\n */\n\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport PlainButton from '../../../../../components/plain-button';\n\nimport messages from './messages';\n\ntype Props = {\n    handleShowOriginal: Function,\n};\n\nconst ShowOriginalButton = ({ handleShowOriginal }: Props): React.Node => (\n    <PlainButton className=\"bcs-ActivityMessage-translate\" onClick={handleShowOriginal}>\n        <FormattedMessage {...messages.activityMessageShowOriginal} />\n    </PlainButton>\n);\n\nexport default ShowOriginalButton;\n","/**\n * @flow\n * @file Translate button component used by Comment Text component\n */\n\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport PlainButton from '../../../../../components/plain-button';\n\nimport messages from './messages';\n\ntype Props = {\n    handleTranslate: Function,\n};\n\nconst TranslateButton = ({ handleTranslate }: Props): React.Node => (\n    <PlainButton className=\"bcs-ActivityMessage-translate\" onClick={handleTranslate}>\n        <FormattedMessage {...messages.activityMessageTranslate} />\n    </PlainButton>\n);\n\nexport default TranslateButton;\n","// @flow\nexport { default } from './ActivityMessage';\n","// @flow\nimport { defineMessages } from 'react-intl';\n\nconst messages = defineMessages({\n    activityMessageShowOriginal: {\n        id: 'be.contentSidebar.activityFeed.commmon.showOriginalMessage',\n        defaultMessage: 'Show Original',\n        description: 'Show original button for showing original comment',\n    },\n    activityMessageTranslate: {\n        id: 'be.contentSidebar.activityFeed.common.translateMessage',\n        defaultMessage: 'Translate',\n        description: 'Translate button for translating comment',\n    },\n});\n\nexport default messages;\n","// @flow\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport ActivityDatestamp from '../activity-datestamp';\nimport Tooltip from '../../../../../components/tooltip';\nimport messages from './messages';\nimport './ActivityTimestamp.scss';\n\ntype Props = {\n    date: number, // unix epoch timestamp (new Date().getTime())\n};\n\nconst ActivityTimestamp = ({ date }: Props) => (\n    <Tooltip text={<FormattedMessage {...messages.fullDateTime} values={{ time: date }} />}>\n        <small className=\"bcs-ActivityTimestamp\">\n            <ActivityDatestamp date={date} />\n        </small>\n    </Tooltip>\n);\n\nexport default ActivityTimestamp;\n","// extracted by mini-css-extract-plugin","// @flow\nexport { default } from './ActivityTimestamp';\n","// @flow\nimport { defineMessages } from 'react-intl';\n\nconst messages = defineMessages({\n    fullDateTime: {\n        id: 'be.activityFeed.fullDateTime',\n        defaultMessage: '{time, date, full} at {time, time, short}',\n        description: 'Full date time and time stamp',\n    },\n});\n\nexport default messages;\n","/**\n * @flow\n * @file Comment component\n */\n\nimport * as React from 'react';\nimport { FormattedMessage, type MessageDescriptor } from 'react-intl';\n\nimport Button from '../../../../../components/button';\nimport commonMessages from '../../../../common/messages';\nimport PrimaryButton from '../../../../../components/primary-button';\nimport { KEYS } from '../../../../../constants';\nimport { Overlay } from '../../../../../components/flyout';\nimport { ACTIVITY_TARGETS } from '../../../../common/interactionTargets';\nimport './DeleteConfirmation.scss';\n\ntype Props = {\n    isOpen: boolean,\n    message: MessageDescriptor,\n    onDeleteCancel: Function,\n    onDeleteConfirm: Function,\n};\n\nclass DeleteConfirmation extends React.Component<Props> {\n    onKeyDown = (event: SyntheticKeyboardEvent<>): void => {\n        const { nativeEvent } = event;\n        const { isOpen, onDeleteCancel } = this.props;\n\n        nativeEvent.stopImmediatePropagation();\n\n        switch (event.key) {\n            case KEYS.escape:\n                event.stopPropagation();\n                event.preventDefault();\n                if (isOpen) {\n                    onDeleteCancel();\n                }\n                break;\n            default:\n                break;\n        }\n    };\n\n    render() {\n        const { isOpen, message, onDeleteCancel, onDeleteConfirm, ...rest } = this.props;\n\n        return (\n            <Overlay\n                className=\"be-modal bcs-DeleteConfirmation\"\n                onKeyDown={this.onKeyDown}\n                role=\"dialog\"\n                shouldDefaultFocus\n                shouldOutlineFocus={false}\n                {...rest}\n            >\n                <div className=\"bcs-DeleteConfirmation-promptMessage\">\n                    <FormattedMessage {...message} />\n                </div>\n                <div>\n                    <Button\n                        className=\"bcs-DeleteConfirmation-cancel\"\n                        onClick={onDeleteCancel}\n                        type=\"button\"\n                        data-resin-target={ACTIVITY_TARGETS.INLINE_DELETE_CANCEL}\n                    >\n                        <FormattedMessage {...commonMessages.cancel} />\n                    </Button>\n                    <PrimaryButton\n                        className=\"bcs-DeleteConfirmation-delete\"\n                        onClick={onDeleteConfirm}\n                        type=\"button\"\n                        data-resin-target={ACTIVITY_TARGETS.INLINE_DELETE_CONFIRM}\n                    >\n                        <FormattedMessage {...commonMessages.delete} />\n                    </PrimaryButton>\n                </div>\n            </Overlay>\n        );\n    }\n}\n\nexport default DeleteConfirmation;\n","// extracted by mini-css-extract-plugin","// @flow\nexport { default } from './DeleteConfirmation';\n","// @flow\nimport * as React from 'react';\nimport classnames from 'classnames';\nimport { Link } from '../../../../../components/link';\nimport type { GetProfileUrlCallback } from '../../../../common/flowTypes';\nimport './UserLink.scss';\n\ntype Props = {\n    className?: string,\n    getUserProfileUrl?: GetProfileUrlCallback,\n    id: string,\n    name: string,\n};\n\ntype State = {\n    profileUrl?: string,\n};\n\nclass UserLink extends React.PureComponent<Props, State> {\n    state = {};\n\n    /**\n     * Success handler for getting profile url\n     *\n     * @param {string} profileUrl the user profile url\n     */\n    getProfileUrlHandler = (profileUrl?: string) => {\n        this.setState({\n            profileUrl,\n        });\n    };\n\n    /**\n     * Gets the profile URL for the user from the getUserProfileUrl prop\n     *\n     * @return {Promise} a promise which resolves with the profileUrl string\n     */\n    getUserProfileUrl() {\n        const { id, getUserProfileUrl }: Props = this.props;\n        if (!getUserProfileUrl) {\n            return Promise.resolve();\n        }\n\n        return getUserProfileUrl(id).then(this.getProfileUrlHandler);\n    }\n\n    componentDidMount() {\n        this.getUserProfileUrl();\n    }\n\n    render() {\n        const { name, getUserProfileUrl, className, ...rest }: Props = this.props;\n        const { profileUrl }: State = this.state;\n\n        return profileUrl ? (\n            <Link className={classnames('bcs-UserLink', className)} {...rest} href={profileUrl}>\n                {name}\n            </Link>\n        ) : (\n            <span {...rest}>{name}</span>\n        );\n    }\n}\n\nexport default UserLink;\n","// extracted by mini-css-extract-plugin","// @flow\nexport { default } from './UserLink';\n","import * as React from 'react';\n\nimport AccessibleSVG from '../../../../icons/accessible-svg';\n\ntype Props = {\n    className?: string;\n    height?: number;\n    width?: number;\n};\n\nconst ActivityFeedEmptyStateIllustration = ({ className = '', width = 140, height = 140 }: Props): JSX.Element => (\n    <AccessibleSVG\n        className={`bcs-ActivityFeedEmptyStateIllustration ${className}`}\n        height={height}\n        viewBox=\"0 0 140 140\"\n        width={width}\n    >\n        <path fill=\"#FFF\" d=\"M42 39h63c2.761 0 5 2.239 5 5v68H42c-2.761 0-5-2.239-5-5V44c0-2.761 2.239-5 5-5z\" />\n        <path\n            fill=\"#E5EFFA\"\n            d=\"M13.871 122c2.138 0 3.87 1.79 3.87 4s-1.732 4-3.87 4S10 128.21 10 126s1.733-4 3.871-4zM95 27c5.523 0 10 4.477 10 10v2H42c-2.689 0-4.882 2.122-4.995 4.783L37 44v63h-2c-5.523 0-10-4.477-10-10V37c0-5.523 4.477-10 10-10h60zm6 65c.552 0 1 .448 1 1s-.448 1-1 1H47c-.552 0-1-.448-1-1s.448-1 1-1zm-4-10c.552 0 1 .448 1 1s-.448 1-1 1H47c-.552 0-1-.448-1-1s.448-1 1-1zm-3-10c.552 0 1 .448 1 1s-.448 1-1 1H47c-.552 0-1-.448-1-1s.448-1 1-1zm-5-10c.552 0 1 .448 1 1s-.448 1-1 1H47c-.552 0-1-.448-1-1s.448-1 1-1zm-4-10c.552 0 1 .448 1 1s-.448 1-1 1H47c-.552 0-1-.448-1-1s.448-1 1-1zm37.258-42c4.276 0 7.742 3.582 7.742 8s-3.466 8-7.742 8-7.742-3.582-7.742-8 3.466-8 7.742-8z\"\n        />\n        <path\n            fill=\"#0061D5\"\n            d=\"M111 106c.552 0 1 .448 1 1v5h5c.552 0 1 .448 1 1s-.448 1-1 1h-5v5c0 .552-.448 1-1 1s-1-.448-1-1v-5h-5c-.552 0-1-.448-1-1s.448-1 1-1h5v-5c0-.552.448-1 1-1zm-60 6c.552 0 1 .448 1 1s-.448 1-1 1h-5c-.552 0-1-.448-1-1s.448-1 1-1h5zm10 0c.552 0 1 .448 1 1s-.448 1-1 1h-5c-.552 0-1-.448-1-1s.448-1 1-1h5zm10 0c.552 0 1 .448 1 1s-.448 1-1 1h-5c-.552 0-1-.448-1-1s.448-1 1-1h5zm10 0c.552 0 1 .448 1 1s-.448 1-1 1h-5c-.552 0-1-.448-1-1s.448-1 1-1h5zm10 0c.552 0 1 .448 1 1s-.448 1-1 1h-5c-.552 0-1-.448-1-1s.448-1 1-1h5zm-55-6c.552 0 1 .448 1 1 0 2.849 1.913 5 5 5 .552 0 1 .448 1 1s-.448 1-1 1c-4.248 0-7-3.095-7-7 0-.552.448-1 1-1zm83-3c.552 0 1 .448 1 1v3c0 .552-.448 1-1 1h-3c-.552 0-1-.448-1-1v-3c0-.552.448-1 1-1h3zM46 47c.513 0 .936.386.993.883L47 48v47c0 3.785 3.005 6.87 6.76 6.996L54 102h37c.552 0 1 .448 1 1 0 .513-.386.936-.883.993L91 104H54c-4.882 0-8.856-3.887-8.996-8.735L45 95V48c0-.552.448-1 1-1zM36 97c.552 0 1 .448 1 1v5c0 .552-.448 1-1 1s-1-.448-1-1v-5c0-.552.448-1 1-1zm58-30c2.21 0 4 1.79 4 4s-1.79 4-4 4c-.626 0-1.22-.144-1.747-.4l-6.61 6.744C85.871 81.85 86 82.41 86 83c0 2.21-1.79 4-4 4s-4-1.79-4-4c0-.593.13-1.156.36-1.663l-2.627-2.73C75.209 78.858 74.62 79 74 79c-.849 0-1.636-.264-2.284-.716L61.284 88.716c.452.648.716 1.435.716 2.284 0 2.21-1.79 4-4 4s-4-1.79-4-4 1.79-4 4-4c.632 0 1.23.147 1.762.408l10.646-10.646C70.147 76.23 70 75.632 70 75c0-2.21 1.79-4 4-4s4 1.79 4 4c0 .862-.272 1.66-.736 2.312l2.37 2.462C80.297 79.288 81.114 79 82 79c.889 0 1.71.29 2.374.78l6.353-6.48C90.269 72.65 90 71.856 90 71c0-2.21 1.79-4 4-4zm17 20c.552 0 1 .448 1 1v5c0 .552-.448 1-1 1s-1-.448-1-1v-5c0-.552.448-1 1-1zm-75 0c.552 0 1 .448 1 1v5c0 .552-.448 1-1 1s-1-.448-1-1v-5c0-.552.448-1 1-1zm22 2c-1.105 0-2 .895-2 2s.895 2 2 2 2-.895 2-2-.895-2-2-2zm24-8c-1.105 0-2 .895-2 2s.895 2 2 2 2-.895 2-2-.895-2-2-2zm29-4c.552 0 1 .448 1 1v5c0 .552-.448 1-1 1s-1-.448-1-1v-5c0-.552.448-1 1-1zm-75 0c.552 0 1 .448 1 1v5c0 .552-.448 1-1 1s-1-.448-1-1v-5c0-.552.448-1 1-1zm38-4c-1.105 0-2 .895-2 2s.895 2 2 2 2-.895 2-2-.895-2-2-2zm37-6c.552 0 1 .448 1 1v5c0 .552-.448 1-1 1s-1-.448-1-1v-5c0-.552.448-1 1-1zm-75 0c.552 0 1 .448 1 1v5c0 .552-.448 1-1 1s-1-.448-1-1v-5c0-.552.448-1 1-1zm58 2c-1.105 0-2 .895-2 2s.895 2 2 2 2-.895 2-2-.895-2-2-2zm17-12c.552 0 1 .448 1 1v5c0 .552-.448 1-1 1s-1-.448-1-1v-5c0-.552.448-1 1-1zm-75 0c.552 0 1 .448 1 1v5c0 .552-.448 1-1 1s-1-.448-1-1v-5c0-.552.448-1 1-1zm75-10c.552 0 1 .448 1 1v5c0 .552-.448 1-1 1s-1-.448-1-1v-5c0-.552.448-1 1-1zm-75 0c.552 0 1 .448 1 1v5c0 .552-.448 1-1 1s-1-.448-1-1v-5c0-.552.448-1 1-1zm6-10c.552 0 1 .448 1 1s-.448 1-1 1c-3.087 0-5 2.151-5 5 0 .552-.448 1-1 1s-1-.448-1-1c0-3.905 2.752-7 7-7zm63 0c4.248 0 7 3.095 7 7 0 .552-.448 1-1 1s-1-.448-1-1c0-2.849-1.913-5-5-5-.552 0-1-.448-1-1s.448-1 1-1zm-54 0c.552 0 1 .448 1 1s-.448 1-1 1h-5c-.552 0-1-.448-1-1s.448-1 1-1h5zm10 0c.552 0 1 .448 1 1s-.448 1-1 1h-5c-.552 0-1-.448-1-1s.448-1 1-1h5zm10 0c.552 0 1 .448 1 1s-.448 1-1 1h-5c-.552 0-1-.448-1-1s.448-1 1-1h5zm10 0c.552 0 1 .448 1 1s-.448 1-1 1h-5c-.552 0-1-.448-1-1s.448-1 1-1h5zm10 0c.552 0 1 .448 1 1s-.448 1-1 1h-5c-.552 0-1-.448-1-1s.448-1 1-1h5zm10 0c.552 0 1 .448 1 1s-.448 1-1 1h-5c-.552 0-1-.448-1-1s.448-1 1-1h5z\"\n        />\n        <path\n            fill=\"#E5EFFA\"\n            d=\"M58 89c1.105 0 2 .895 2 2s-.895 2-2 2-2-.895-2-2 .895-2 2-2zm24-8c1.105 0 2 .895 2 2s-.895 2-2 2-2-.895-2-2 .895-2 2-2zm-8-8c1.105 0 2 .895 2 2s-.895 2-2 2-2-.895-2-2 .895-2 2-2zm20-4c1.105 0 2 .895 2 2s-.895 2-2 2-2-.895-2-2 .895-2 2-2z\"\n        />\n    </AccessibleSVG>\n);\n\nexport default ActivityFeedEmptyStateIllustration;\n","// @flow\nexport { default } from './activity-feed';\n","/**\n * @flow\n * @file Component for in-modal error messages for tasks\n */\n\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport getProp from 'lodash/get';\n\nimport messages from './messages';\nimport apiMessages from '../../../../api/messages';\nimport { TASK_EDIT_MODE_EDIT, TASK_MAX_GROUP_ASSIGNEES, ERROR_CODE_GROUP_EXCEEDS_LIMIT } from '../../../../constants';\nimport InlineNotice from '../../../../components/inline-notice/InlineNotice';\n\nimport type { TaskType, TaskEditMode } from '../../../../common/types/tasks';\n\ntype Props = {\n    editMode?: TaskEditMode,\n    error?: { status: number }, // TODO: update to ElementXhrError once API supports it\n    taskType: TaskType,\n};\nconst TaskError = ({ editMode, error, taskType }: Props) => {\n    const isEditMode = editMode === TASK_EDIT_MODE_EDIT;\n    const isForbiddenErrorOnEdit = getProp(error, 'status') === 403 && isEditMode;\n    const taskGroupExceedsError = getProp(error, 'code') === ERROR_CODE_GROUP_EXCEEDS_LIMIT;\n\n    const errorTitle = isForbiddenErrorOnEdit ? messages.taskEditWarningTitle : messages.taskCreateErrorTitle;\n    let errorMessage = isEditMode ? messages.taskUpdateErrorMessage : apiMessages.taskCreateErrorMessage;\n    if (!error) {\n        return null;\n    }\n\n    // error message changes when a forbidden operation occurs while editing a task\n    if (isForbiddenErrorOnEdit) {\n        switch (taskType) {\n            case 'GENERAL':\n                errorMessage = messages.taskGeneralAssigneeRemovalWarningMessage;\n                break;\n            case 'APPROVAL':\n                errorMessage = messages.taskApprovalAssigneeRemovalWarningMessage;\n                break;\n            default:\n                return null;\n        }\n    }\n\n    return taskGroupExceedsError ? (\n        <InlineNotice type=\"warning\" title={<FormattedMessage {...messages.taskGroupExceedsLimitWarningTitle} />}>\n            <FormattedMessage\n                {...apiMessages.taskGroupExceedsLimitWarningMessage}\n                values={{ max: TASK_MAX_GROUP_ASSIGNEES }}\n            />\n        </InlineNotice>\n    ) : (\n        <InlineNotice type=\"error\" title={<FormattedMessage {...errorTitle} />}>\n            <FormattedMessage {...errorMessage} />\n        </InlineNotice>\n    );\n};\n\nexport default TaskError;\n","/**\n * @flow\n * @file Component for Approval comment form\n */\n\nimport * as React from 'react';\nimport noop from 'lodash/noop';\nimport getProp from 'lodash/get';\nimport isEmpty from 'lodash/isEmpty';\nimport classNames from 'classnames';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport type { InjectIntlProvidedProps } from 'react-intl';\nimport commonMessages from '../../../../common/messages';\nimport messages from './messages';\nimport commentFormMessages from '../comment-form/messages';\nimport Form from '../../../../components/form-elements/form/Form';\nimport ModalActions from '../../../../components/modal/ModalActions';\nimport ContactDatalistItem from '../../../../components/contact-datalist-item/ContactDatalistItem';\nimport TextArea from '../../../../components/text-area';\nimport DatePicker from '../../../../components/date-picker/DatePicker';\nimport Checkbox from '../../../../components/checkbox';\nimport PillSelectorDropdown from '../../../../components/pill-selector-dropdown/PillSelectorDropdown';\nimport Button from '../../../../components/button/Button';\nimport { FeatureFlag } from '../../../common/feature-checking';\nimport PrimaryButton from '../../../../components/primary-button/PrimaryButton';\nimport {\n    TASK_COMPLETION_RULE_ANY,\n    TASK_COMPLETION_RULE_ALL,\n    TASK_EDIT_MODE_CREATE,\n    TASK_EDIT_MODE_EDIT,\n} from '../../../../constants';\nimport { ACTIVITY_TARGETS, INTERACTION_TARGET } from '../../../common/interactionTargets';\nimport type {\n    TaskCompletionRule,\n    TaskCollabAssignee,\n    TaskType,\n    TaskEditMode,\n    TaskUpdatePayload,\n} from '../../../../common/types/tasks';\nimport TaskError from './TaskError';\nimport type { GetAvatarUrlCallback } from '../../../common/flowTypes';\nimport type { ElementsXhrError } from '../../../../common/types/api';\nimport type { SelectorItems, SelectorItem, UserMini, GroupMini } from '../../../../common/types/core';\n\nimport './TaskForm.scss';\n\ntype TaskFormProps = {|\n    error?: { status: number }, // TODO: update to ElementsXhrError once API supports it\n    isDisabled?: boolean,\n    onCancel: () => any,\n    onSubmitError: (e: ElementsXhrError) => any,\n    onSubmitSuccess: () => any,\n    taskType: TaskType,\n|};\n\ntype TaskFormFieldProps = {|\n    approvers: Array<TaskCollabAssignee>,\n    completionRule: TaskCompletionRule,\n    dueDate?: ?string,\n    id: string,\n    message: string,\n|};\n\ntype TaskFormConsumerProps = {|\n    ...TaskFormFieldProps,\n    approverSelectorContacts: SelectorItems<UserMini | GroupMini>,\n    className?: string,\n    createTask: (\n        text: string,\n        approvers: SelectorItems<>,\n        taskType: TaskType,\n        dueDate: ?string,\n        completionRule: TaskCompletionRule,\n        onSuccess: ?Function,\n        onError: ?Function,\n    ) => any,\n    editMode?: TaskEditMode,\n    editTask?: (task: TaskUpdatePayload, onSuccess: ?Function, onError: ?Function) => any,\n    getApproverWithQuery?: Function,\n    getAvatarUrl: GetAvatarUrlCallback,\n|};\n\ntype Props = TaskFormProps & TaskFormConsumerProps & InjectIntlProvidedProps;\n\ntype TaskFormFieldName = 'taskName' | 'taskAssignees' | 'taskDueDate';\n\ntype TaskFormInvalidSubmitState = { [key: TaskFormFieldName]: ?{ validityState: ?{ patternMismatch: boolean } } };\n\ntype State = {|\n    approverTextInput: string, // partial text input value for approver field before autocomplete/select\n    approvers: Array<TaskCollabAssignee>,\n    completionRule: TaskCompletionRule,\n    dueDate?: ?Date,\n    formValidityState: { [key: TaskFormFieldName]: ?{ code: string, message: string } },\n    id: string,\n    isLoading: boolean,\n    isValid: ?boolean,\n    message: string,\n|};\n\nfunction convertAssigneesToSelectorItems(approvers: Array<TaskCollabAssignee>): SelectorItems<> {\n    return approvers.map(({ target }) => {\n        const newSelectorItem: SelectorItem<UserMini | GroupMini> = {\n            id: target.id,\n            name: target.name,\n            item: target,\n            value: target.id,\n            text: target.name, // for PillSelectorDropdown SelectorOptions type\n        };\n\n        return newSelectorItem;\n    });\n}\n\nclass TaskForm extends React.Component<Props, State> {\n    static defaultProps = {\n        approvers: [],\n        approverSelectorContacts: [],\n        editMode: TASK_EDIT_MODE_CREATE,\n        id: '',\n        message: '',\n    };\n\n    state = this.getInitialFormState();\n\n    getInitialFormState() {\n        const { dueDate, id, message, approvers, completionRule } = this.props;\n        return {\n            id,\n            completionRule: completionRule || TASK_COMPLETION_RULE_ALL,\n            approvers,\n            approverTextInput: '',\n            dueDate: dueDate ? new Date(dueDate) : null,\n            formValidityState: {},\n            message,\n            isLoading: false,\n            isValid: null,\n        };\n    }\n\n    validateForm = (only?: TaskFormFieldName, invalidSubmitValidityState?: ?TaskFormInvalidSubmitState) => {\n        this.setState(state => {\n            const { intl } = this.props;\n            const { approvers, message, approverTextInput } = state;\n            const assigneeFieldMissingError = {\n                code: 'required',\n                message: intl.formatMessage(commonMessages.requiredFieldError),\n            };\n            const assigneeFieldInvalidError = {\n                code: 'invalid',\n                message: intl.formatMessage(commonMessages.invalidUserError),\n            };\n            const messageFieldError = {\n                code: 'required',\n                message: intl.formatMessage(commonMessages.requiredFieldError),\n            };\n            const taskDueDateError = {\n                code: 'invalid',\n                message: intl.formatMessage(commonMessages.invalidDateError),\n            };\n            const formValidityState = {\n                taskAssignees:\n                    (approverTextInput.length ? assigneeFieldInvalidError : null) ||\n                    (approvers.length ? null : assigneeFieldMissingError),\n                taskName: message ? null : messageFieldError,\n                taskDueDate: getProp(invalidSubmitValidityState, 'taskDueDate.validityState.patternMismatch')\n                    ? taskDueDateError\n                    : null,\n            };\n            const isValid = Object.values(formValidityState).every(val => val == null);\n            return {\n                isValid,\n                formValidityState: only\n                    ? { ...state.formValidityState, [only]: formValidityState[only] }\n                    : formValidityState,\n            };\n        });\n    };\n\n    getErrorByFieldname = (fieldName: TaskFormFieldName) => {\n        const { formValidityState } = this.state;\n        return formValidityState[fieldName] ? formValidityState[fieldName].message : null;\n    };\n\n    clearForm = () => this.setState(this.getInitialFormState());\n\n    handleInvalidSubmit = (invalidSubmitValidityState?: ?TaskFormInvalidSubmitState) => {\n        if (!isEmpty(invalidSubmitValidityState)) {\n            this.validateForm(undefined, invalidSubmitValidityState);\n        } else {\n            this.validateForm();\n        }\n    };\n\n    handleSubmitSuccess = () => {\n        const { onSubmitSuccess } = this.props;\n        if (onSubmitSuccess) {\n            onSubmitSuccess();\n        }\n\n        this.clearForm();\n        this.setState({ isLoading: false });\n    };\n\n    handleSubmitError = (e: ElementsXhrError) => {\n        const { onSubmitError } = this.props;\n        onSubmitError(e);\n        this.setState({ isLoading: false });\n    };\n\n    addResinInfo = (): Object => {\n        const { id, taskType, editMode } = this.props;\n        const { dueDate } = this.state;\n        const addedAssignees = this.getAddedAssignees();\n        const removedAssignees = this.getRemovedAssignees();\n\n        return {\n            'data-resin-taskid': id,\n            'data-resin-tasktype': taskType,\n            'data-resin-isediting': editMode === TASK_EDIT_MODE_EDIT,\n            'data-resin-numassigneesadded': addedAssignees.filter(assignee => assignee.target.type === 'user').length,\n            'data-resin-numgroupssadded': addedAssignees.filter(assignee => assignee.target.type === 'group').length,\n            'data-resin-numassigneesremoved': removedAssignees.length,\n            'data-resin-assigneesadded': addedAssignees.map(assignee => assignee.target.id),\n            'data-resin-assigneesremoved': removedAssignees.map(assignee => assignee.target.id),\n            'data-resin-duedate': dueDate && dueDate.getTime(),\n        };\n    };\n\n    getAddedAssignees = (): Array<TaskCollabAssignee> => {\n        // Added assignees are the ones in state that weren't in the prop\n        const { approvers } = this.props;\n        const { approvers: currentApprovers } = this.state;\n        const approverIds = approvers.map(approver => approver.id);\n        return currentApprovers.filter(currentApprover => approverIds.indexOf(currentApprover.id) === -1);\n    };\n\n    getRemovedAssignees = (): Array<TaskCollabAssignee> => {\n        // Assignees to remove are the ones in the prop that cannot be found in state\n        const { approvers } = this.props;\n        const { approvers: currentApprovers } = this.state;\n        const currentApproverIds = currentApprovers.map(currentApprover => currentApprover.id);\n        return approvers.filter(approver => currentApproverIds.indexOf(approver.id) === -1);\n    };\n\n    handleValidSubmit = (): void => {\n        const { id, createTask, editTask, editMode, taskType } = this.props;\n        const { message, approvers: currentApprovers, dueDate, completionRule, isValid } = this.state;\n        const dueDateString = dueDate && dueDate.toISOString();\n\n        if (!isValid) return;\n\n        this.setState({ isLoading: true });\n\n        if (editMode === TASK_EDIT_MODE_EDIT && editTask) {\n            editTask(\n                {\n                    id,\n                    completion_rule: completionRule,\n                    description: message,\n                    due_at: dueDateString,\n                    addedAssignees: convertAssigneesToSelectorItems(this.getAddedAssignees()),\n                    removedAssignees: this.getRemovedAssignees(),\n                },\n                this.handleSubmitSuccess,\n                this.handleSubmitError,\n            );\n        } else {\n            createTask(\n                message,\n                convertAssigneesToSelectorItems(currentApprovers),\n                taskType,\n                dueDateString,\n                completionRule,\n                this.handleSubmitSuccess,\n                this.handleSubmitError,\n            );\n        }\n    };\n\n    handleDueDateChange = (date: ?string): void => {\n        let dateValue = null;\n        if (date) {\n            dateValue = new Date(date);\n            // The date given to us is midnight of the date selected.\n            // Modify date to be the end of day (minus 1 millisecond) for the given due date\n            dateValue.setHours(23, 59, 59, 999);\n        }\n        this.setState({ dueDate: dateValue });\n        this.validateForm('taskDueDate');\n    };\n\n    handleCompletionRuleChange = (event: SyntheticInputEvent<HTMLInputElement>) => {\n        this.setState({ completionRule: event.target.checked ? TASK_COMPLETION_RULE_ANY : TASK_COMPLETION_RULE_ALL });\n    };\n\n    handleApproverSelectorInput = (value: any): void => {\n        const { getApproverWithQuery = noop } = this.props;\n        this.setState({ approverTextInput: value });\n        getApproverWithQuery(value);\n    };\n\n    handleApproverSelectorSelect = (pills: Array<any>): void => {\n        this.setState({\n            approvers: this.state.approvers.concat(\n                pills.map(pill => {\n                    return {\n                        id: '',\n                        target: pill.item,\n                        role: 'ASSIGNEE',\n                        type: 'task_collaborator',\n                        status: 'NOT_STARTED',\n                        permissions: { can_delete: false, can_update: false },\n                    };\n                }),\n            ),\n            approverTextInput: '',\n        });\n\n        this.validateForm('taskAssignees');\n    };\n\n    handleApproverSelectorRemove = (option: any, index: number): void => {\n        const approvers = [...this.state.approvers];\n        approvers.splice(index, 1);\n        this.setState({ approvers });\n        this.validateForm('taskAssignees');\n    };\n\n    handleChangeMessage = (e: SyntheticInputEvent<HTMLTextAreaElement>) => {\n        e.persist();\n        this.setState({ message: e.currentTarget.value });\n        this.validateForm('taskName');\n    };\n\n    handleCancelClick = () => {\n        this.props.onCancel();\n    };\n\n    render() {\n        const { approverSelectorContacts, className, error, isDisabled, intl, editMode, taskType } = this.props;\n        const { dueDate, approvers, message, formValidityState, isLoading, completionRule } = this.state;\n        const inputContainerClassNames = classNames('bcs-task-input-container', 'bcs-task-input-is-open', className);\n        const isCreateEditMode = editMode === TASK_EDIT_MODE_CREATE;\n        const selectedApprovers = convertAssigneesToSelectorItems(approvers);\n\n        // filter out selected approvers\n        // map to datalist item format\n        const approverOptions = approverSelectorContacts.filter(\n            ({ id }) => !selectedApprovers.find(({ value }) => value === id),\n        );\n\n        const pillSelectorOverlayClasses = classNames({\n            scrollable: approverOptions.length > 4,\n        });\n\n        const submitButtonMessage = isCreateEditMode\n            ? messages.tasksAddTaskFormSubmitLabel\n            : messages.tasksEditTaskFormSubmitLabel;\n        const shouldShowCompletionRule = approvers.length > 0;\n\n        // Enable checkbox when there is a group or multiple users being assigned\n        // TODO: consider setting contants for assignee types to src/constants.js\n        // - move from src/features/collaborator-avatars/constants.js\n        const isCompletionRuleCheckboxDisabled =\n            approvers.filter(approver => approver.target.type === 'group').length <= 0 &&\n            approvers.filter(approver => approver.target.type === 'user').length <= 1;\n\n        const isCompletionRuleCheckboxChecked = completionRule === TASK_COMPLETION_RULE_ANY;\n        const isForbiddenErrorOnEdit = isLoading || (getProp(error, 'status') === 403 && !isCreateEditMode);\n\n        return (\n            <div className={inputContainerClassNames} data-resin-component=\"taskform\">\n                <div className=\"bcs-task-input-form-container\">\n                    <TaskError editMode={editMode} error={error} taskType={taskType} />\n                    <Form\n                        formValidityState={formValidityState}\n                        onInvalidSubmit={this.handleInvalidSubmit}\n                        onValidSubmit={this.handleValidSubmit}\n                    >\n                        <PillSelectorDropdown\n                            className={pillSelectorOverlayClasses}\n                            error={this.getErrorByFieldname('taskAssignees')}\n                            disabled={isForbiddenErrorOnEdit}\n                            inputProps={{ 'data-testid': 'task-form-assignee-input' }}\n                            isRequired\n                            label={<FormattedMessage {...messages.tasksAddTaskFormSelectAssigneesLabel} />}\n                            name=\"taskAssignees\"\n                            onBlur={() => this.validateForm('taskAssignees')}\n                            onInput={this.handleApproverSelectorInput}\n                            onRemove={this.handleApproverSelectorRemove}\n                            onSelect={this.handleApproverSelectorSelect}\n                            placeholder={intl.formatMessage(commentFormMessages.approvalAddAssignee)}\n                            selectedOptions={selectedApprovers}\n                            selectorOptions={approverOptions}\n                            shouldSetActiveItemOnOpen\n                            shouldClearUnmatchedInput\n                            validateForError={() => this.validateForm('taskAssignees')}\n                        >\n                            {approverOptions.map(({ id, name, item = {} }) => (\n                                <ContactDatalistItem\n                                    key={id}\n                                    data-testid=\"task-assignee-option\"\n                                    name={name}\n                                    subtitle={\n                                        item.type === 'group' ? (\n                                            <FormattedMessage {...messages.taskCreateGroupLabel} />\n                                        ) : (\n                                            item.email\n                                        )\n                                    }\n                                />\n                            ))}\n                        </PillSelectorDropdown>\n\n                        {shouldShowCompletionRule && (\n                            <>\n                                <FeatureFlag feature=\"activityFeed.tasks.assignToGroup\">\n                                    <Checkbox\n                                        data-testid=\"task-form-completion-rule-checkbox-group\"\n                                        isChecked={isCompletionRuleCheckboxChecked}\n                                        isDisabled={isCompletionRuleCheckboxDisabled || isForbiddenErrorOnEdit}\n                                        label={<FormattedMessage {...messages.taskAnyCheckboxLabel} />}\n                                        tooltip={intl.formatMessage(messages.taskAnyInfoGroupTooltip)}\n                                        name=\"completionRule\"\n                                        onChange={this.handleCompletionRuleChange}\n                                    />\n                                </FeatureFlag>\n                                <FeatureFlag not feature=\"activityFeed.tasks.assignToGroup\">\n                                    <Checkbox\n                                        data-testid=\"task-form-completion-rule-checkbox\"\n                                        isChecked={isCompletionRuleCheckboxChecked}\n                                        isDisabled={isCompletionRuleCheckboxDisabled || isForbiddenErrorOnEdit}\n                                        label={<FormattedMessage {...messages.taskAnyCheckboxLabel} />}\n                                        tooltip={intl.formatMessage(messages.taskAnyInfoTooltip)}\n                                        name=\"completionRule\"\n                                        onChange={this.handleCompletionRuleChange}\n                                    />\n                                </FeatureFlag>\n                            </>\n                        )}\n\n                        <TextArea\n                            className=\"bcs-task-name-input\"\n                            data-testid=\"task-form-name-input\"\n                            disabled={isDisabled || isForbiddenErrorOnEdit}\n                            error={this.getErrorByFieldname('taskName')}\n                            isRequired\n                            label={<FormattedMessage {...messages.tasksAddTaskFormMessageLabel} />}\n                            name=\"taskName\"\n                            onBlur={() => this.validateForm('taskName')}\n                            onChange={this.handleChangeMessage}\n                            placeholder={intl.formatMessage(commentFormMessages.commentWrite)}\n                            value={message}\n                        />\n                        <DatePicker\n                            className=\"bcs-task-add-due-date-input\"\n                            error={this.getErrorByFieldname('taskDueDate')}\n                            inputProps={{\n                                [INTERACTION_TARGET]: ACTIVITY_TARGETS.TASK_DATE_PICKER,\n                                'data-testid': 'task-form-date-input',\n                            }}\n                            isAccessible\n                            isDisabled={isForbiddenErrorOnEdit}\n                            isKeyboardInputAllowed\n                            isRequired={false}\n                            label={<FormattedMessage {...messages.tasksAddTaskFormDueDateLabel} />}\n                            minDate={new Date()}\n                            name=\"taskDueDate\"\n                            onChange={this.handleDueDateChange}\n                            placeholder={intl.formatMessage(commentFormMessages.approvalSelectDate)}\n                            value={dueDate || undefined}\n                        />\n                        <ModalActions>\n                            <Button\n                                className=\"bcs-task-input-cancel-btn\"\n                                data-resin-target={ACTIVITY_TARGETS.APPROVAL_FORM_CANCEL}\n                                data-testid=\"task-form-cancel-button\"\n                                onClick={this.handleCancelClick}\n                                isDisabled={isLoading}\n                                type=\"button\"\n                                {...this.addResinInfo()}\n                            >\n                                <FormattedMessage {...messages.tasksAddTaskFormCancelLabel} />\n                            </Button>\n                            <PrimaryButton\n                                className=\"bcs-task-input-submit-btn\"\n                                data-resin-target={ACTIVITY_TARGETS.APPROVAL_FORM_POST}\n                                data-testid=\"task-form-submit-button\"\n                                isDisabled={isForbiddenErrorOnEdit}\n                                isLoading={isLoading}\n                                {...this.addResinInfo()}\n                            >\n                                <FormattedMessage {...submitButtonMessage} />\n                            </PrimaryButton>\n                        </ModalActions>\n                    </Form>\n                </div>\n            </div>\n        );\n    }\n}\n\n// For testing only\nexport { TaskForm as TaskFormUnwrapped };\nexport type { TaskFormConsumerProps as TaskFormProps };\n\nexport default injectIntl(TaskForm);\n","// extracted by mini-css-extract-plugin","// @flow\nexport * from './TaskForm';\nexport { default } from './TaskForm';\n","/**\n * @flow\n * @file i18n messages\n * @author Box\n */\n\nimport { defineMessages } from 'react-intl';\n\nconst messages = defineMessages({\n    taskCreateErrorTitle: {\n        id: 'be.contentSidebar.activityFeed.taskForm.taskCreateErrorTitle',\n        description: 'Title shown above error message when a task creation fails',\n        defaultMessage: 'Error',\n    },\n    taskEditWarningTitle: {\n        id: 'be.contentSidebar.activityFeed.taskForm.taskEditWarningTitle',\n        description: 'Title shown above warning message when a task create/edit partially fails',\n        defaultMessage: 'Task Updated with Errors',\n    },\n    taskGroupExceedsLimitWarningTitle: {\n        id: 'be.contentSidebar.activityFeed.taskForm.taskGroupExceedsWarningTitle',\n        description: 'Title shown above warning message when task group exceeds limit',\n        defaultMessage: 'Exceeded max assignees per group',\n    },\n    taskUpdateErrorMessage: {\n        id: 'be.contentSidebar.activityFeed.taskForm.taskUpdateErrorMessage',\n        description: 'Error message when a task edit fails',\n        defaultMessage: 'An error occurred while modifying this task. Please try again.',\n    },\n    taskApprovalAssigneeRemovalWarningMessage: {\n        id: 'be.contentSidebar.activityFeed.taskForm.taskApprovalAssigneeRemovalWarningMessage',\n        description: 'Warning message showing that, while the task was updated, not all assignees (1+) were removed',\n        defaultMessage: 'Unable to remove assignee(s) because the task is now approved.',\n    },\n    taskGeneralAssigneeRemovalWarningMessage: {\n        id: 'be.contentSidebar.activityFeed.taskForm.taskGeneralAssigneeRemovalWarningMessage',\n        description: 'Warning message showing that, while the task was updated, not all assignees (1+) were removed',\n        defaultMessage: 'Unable to remove assignee(s) because the task is now completed.',\n    },\n    tasksAddTaskFormSelectAssigneesLabel: {\n        id: 'be.contentSidebar.activityFeed.taskForm.tasksAddTaskFormSelectAssigneesLabel',\n        defaultMessage: 'Select Assignees',\n        description: 'label for task create form assignee input',\n    },\n    tasksAddTaskFormMessageLabel: {\n        id: 'be.contentSidebar.activityFeed.taskForm.tasksAddTaskFormMessageLabel',\n        defaultMessage: 'Message',\n        description: 'label for task create form message input',\n    },\n    tasksAddTaskFormDueDateLabel: {\n        id: 'be.contentSidebar.activityFeed.taskForm.tasksAddTaskFormDueDateLabel',\n        defaultMessage: 'Due Date',\n        description: 'label for task create form due date input',\n    },\n    tasksAddTaskFormSubmitLabel: {\n        id: 'be.contentSidebar.activityFeed.taskForm.tasksAddTaskFormSubmitLabel',\n        defaultMessage: 'Create',\n        description: 'label for create button in create task modal in create mode',\n    },\n    tasksEditTaskFormSubmitLabel: {\n        id: 'be.contentSidebar.activityFeed.taskForm.tasksEditTaskFormSubmitLabel',\n        defaultMessage: 'Update',\n        description: 'label for edit button in create task modal in edit mode',\n    },\n    tasksAddTaskFormCancelLabel: {\n        id: 'be.contentSidebar.activityFeed.taskForm.tasksAddTaskFormCancelLabel',\n        defaultMessage: 'Cancel',\n        description: 'label for cancel button in create task popup',\n    },\n    taskAnyCheckboxLabel: {\n        id: 'be.contentSidebar.activityFeed.taskForm.taskAnyCheckboxLabel',\n        defaultMessage: 'Only one assignee is required to complete this task',\n        description: 'Label for checkbox to set a task that requires only one assignee to complete.',\n    },\n    taskAnyInfoTooltip: {\n        id: 'be.contentSidebar.activityFeed.taskForm.taskAnyInfoTooltip',\n        defaultMessage:\n            'By default, all assignees are required to take action before a task is complete. Selecting this option will require only one assignee to complete this task.',\n        description: 'Text in tooltip explaining completion rule for an any assignee task.',\n    },\n    taskAnyInfoGroupTooltip: {\n        id: 'be.contentSidebar.activityFeed.taskForm.taskAnyInfoGroupTooltip',\n        defaultMessage:\n            'Selecting this option will require only one assignee to complete this task. This will include assignees across all groups.',\n        description: 'Text in tooltip explaining completion rule for an any assignee task (with optional groups).',\n    },\n    taskCreateGroupLabel: {\n        id: 'be.contentSidebar.activityFeed.taskForm.taskCreateGroupLabel',\n        description: 'Subheading for dropdown where user can select assignees and the item is a group',\n        defaultMessage: 'Group',\n    },\n});\n\nexport default messages;\n","// @flow strict\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport classNames from 'classnames';\nimport ActivityDatestamp from '../common/activity-datestamp';\nimport commonMessages from '../../../common/messages';\nimport messages from './messages';\nimport { TASK_NEW_APPROVED, TASK_NEW_REJECTED, TASK_NEW_COMPLETED, TASK_NEW_NOT_STARTED } from '../../../../constants';\nimport type { ISODate } from '../../../../common/types/core';\n\nimport './AssigneeDetails.scss';\n\nconst statusMessages = {\n    [TASK_NEW_APPROVED]: messages.tasksFeedStatusApproved,\n    [TASK_NEW_REJECTED]: messages.tasksFeedStatusRejected,\n    [TASK_NEW_COMPLETED]: messages.tasksFeedStatusCompleted,\n    [TASK_NEW_NOT_STARTED]: null,\n};\n\ntype Props = {\n    className?: string,\n    completedAt?: ?ISODate | Date,\n    status: $Keys<typeof statusMessages>,\n    user: { name: string },\n};\n\nconst AssigneeDetails = React.memo<Props>(({ user, status, completedAt, className }: Props) => {\n    const statusMessage = statusMessages[status] || null;\n    return (\n        <div className={classNames(className, 'bcs-AssigneeDetails')}>\n            <div className=\"bcs-AssigneeDetails-name\">\n                {user.name ? user.name : <FormattedMessage {...commonMessages.priorCollaborator} />}\n            </div>\n            {statusMessage && completedAt && (\n                <div className=\"bcs-AssigneeDetails-status\">\n                    <FormattedMessage\n                        {...statusMessage}\n                        values={{ dateTime: <ActivityDatestamp date={completedAt} /> }}\n                    />\n                </div>\n            )}\n        </div>\n    );\n});\n\nexport default AssigneeDetails;\n","// extracted by mini-css-extract-plugin","// @flow strict\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport PlainButton from '../../../../components/plain-button';\nimport messages from './messages';\nimport AvatarGroupAvatar from './AvatarGroupAvatar';\nimport AssigneeDetails from './AssigneeDetails';\nimport type { TaskAssigneeCollection } from '../../../../common/types/tasks';\nimport type { GetAvatarUrlCallback } from '../../../common/flowTypes';\n\nimport './AssigneeList.scss';\n\nconst DEFAULT_ASSIGNEES_SHOWN = 3;\nconst TASKS_PAGE_SIZE = 20; // service does not return the page size to the client at the moment\n\ntype Props = {|\n    getAvatarUrl: GetAvatarUrlCallback,\n    initialAssigneeCount: number,\n    isOpen: boolean,\n    onCollapse: () => void | Promise<void>,\n    onExpand: () => void | Promise<void>,\n    users: TaskAssigneeCollection,\n|};\n\nfunction AssigneeList(props: Props) {\n    const {\n        initialAssigneeCount = DEFAULT_ASSIGNEES_SHOWN,\n        users = {},\n        getAvatarUrl,\n        isOpen,\n        onCollapse,\n        onExpand,\n    } = props;\n    const { entries = [], next_marker } = users;\n    const entryCount = entries.length;\n    const numVisibleAssignees = isOpen ? entryCount : initialAssigneeCount;\n    const visibleUsers = entries\n        .slice(0, numVisibleAssignees)\n        .map(({ id, target, status, completed_at: completedAt }) => {\n            return (\n                <li key={id} className=\"bcs-AssigneeList-listItem\" data-testid=\"assignee-list-item\">\n                    <AvatarGroupAvatar\n                        status={status}\n                        className=\"bcs-AssigneeList-listItemAvatar\"\n                        user={target}\n                        getAvatarUrl={getAvatarUrl}\n                    />\n                    <AssigneeDetails user={target} status={status} completedAt={completedAt} />\n                </li>\n            );\n        });\n\n    const hiddenAssigneeCount = Math.max(0, entryCount - initialAssigneeCount);\n    const maxAdditionalAssignees = TASKS_PAGE_SIZE - initialAssigneeCount;\n    const hasMoreAssigneesThanPageSize = hiddenAssigneeCount > maxAdditionalAssignees || next_marker;\n    const additionalAssigneeMessage = hasMoreAssigneesThanPageSize\n        ? messages.taskShowMoreAssigneesOverflow\n        : messages.taskShowMoreAssignees;\n\n    return (\n        <div className=\"bcs-AssigneeList\">\n            <ul className=\"bcs-AssigneeList-list\" data-testid=\"task-assignee-list\">\n                {visibleUsers}\n            </ul>\n            {!isOpen && hiddenAssigneeCount > 0 && (\n                <div className=\"bcs-AssigneeList-toggleBtn\">\n                    <PlainButton\n                        data-resin-target=\"showmorebtn\"\n                        data-testid=\"show-more-assignees\"\n                        onClick={onExpand}\n                        className=\"lnk\"\n                    >\n                        <FormattedMessage\n                            {...additionalAssigneeMessage}\n                            values={{\n                                additionalAssigneeCount: hasMoreAssigneesThanPageSize\n                                    ? maxAdditionalAssignees\n                                    : hiddenAssigneeCount,\n                            }}\n                        />\n                    </PlainButton>\n                </div>\n            )}\n            {isOpen && (\n                <div className=\"bcs-AssigneeList-toggleBtn\">\n                    <PlainButton\n                        data-resin-target=\"showlessbtn\"\n                        data-testid=\"show-less-assignees\"\n                        onClick={onCollapse}\n                        className=\"lnk\"\n                    >\n                        <FormattedMessage {...messages.taskShowLessAssignees} />\n                    </PlainButton>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default AssigneeList;\n","// extracted by mini-css-extract-plugin","// @flow\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport classNames from 'classnames';\nimport camelCase from 'lodash/camelCase';\nimport IconComplete from '../../../../icons/general/IconVerified';\nimport IconReject from '../../../../icons/general/IconRejected';\nimport Avatar from '../Avatar';\nimport { TASK_NEW_APPROVED, TASK_NEW_REJECTED, TASK_NEW_COMPLETED, TASK_NEW_NOT_STARTED } from '../../../../constants';\nimport messages from './messages';\nimport type { TaskCollabStatus } from '../../../../common/types/tasks';\nimport type { UserMini } from '../../../../common/types/core';\nimport type { GetAvatarUrlCallback } from '../../../common/flowTypes';\n\nimport './AvatarGroupAvatar.scss';\n\ntype Props = {\n    className?: string,\n    getAvatarUrl?: GetAvatarUrlCallback,\n    status: TaskCollabStatus,\n    user: UserMini,\n};\n\nconst StatusIcon = ({ status, ...rest }: { status: TaskCollabStatus }) => {\n    switch (status) {\n        case TASK_NEW_APPROVED:\n        case TASK_NEW_COMPLETED:\n            return <IconComplete {...rest} />;\n        case TASK_NEW_REJECTED:\n            return <IconReject {...rest} />;\n        case TASK_NEW_NOT_STARTED:\n        default:\n            return null;\n    }\n};\n\nconst AvatarGroupAvatar = React.memo<Props>(({ user, status, getAvatarUrl, className, ...rest }: Props) => (\n    <div\n        className={classNames('bcs-AvatarGroupAvatar', className)}\n        data-testid=\"avatar-group-avatar-container\"\n        {...rest}\n    >\n        <Avatar className=\"bcs-AvatarGroupAvatar-avatar\" user={user} getAvatarUrl={getAvatarUrl} />\n        <StatusIcon\n            status={status}\n            className={`bcs-AvatarGroupAvatar-statusIcon ${camelCase(status)}`}\n            height={12}\n            width={12}\n            title={<FormattedMessage {...messages.taskAssignmentCompleted} />}\n        />\n    </div>\n));\n\nexport default AvatarGroupAvatar;\n","// extracted by mini-css-extract-plugin","// @flow\nimport * as React from 'react';\nimport noop from 'lodash/noop';\nimport flow from 'lodash/flow';\nimport get from 'lodash/get';\nimport { FormattedMessage } from 'react-intl';\nimport classNames from 'classnames';\nimport TetherComponent from 'react-tether';\nimport { withFeatureConsumer, getFeatureConfig } from '../../../common/feature-checking';\nimport { withAPIContext } from '../../../common/api-context';\nimport Avatar from '../Avatar';\nimport Media from '../../../../components/media';\nimport { MenuItem } from '../../../../components/menu';\nimport ActivityCard from '../ActivityCard';\nimport ActivityError from '../common/activity-error';\nimport ActivityMessage from '../common/activity-message';\nimport ActivityTimestamp from '../common/activity-timestamp';\nimport DeleteConfirmation from '../common/delete-confirmation';\nimport IconTaskApproval from '../../../../icons/two-toned/IconTaskApproval';\nimport IconTaskGeneral from '../../../../icons/two-toned/IconTaskGeneral';\nimport IconTrash from '../../../../icons/general/IconTrash';\nimport IconPencil from '../../../../icons/general/IconPencil';\nimport UserLink from '../common/user-link';\nimport API from '../../../../api/APIFactory';\nimport {\n    TASK_COMPLETION_RULE_ALL,\n    TASK_NEW_APPROVED,\n    TASK_NEW_REJECTED,\n    TASK_NEW_NOT_STARTED,\n    TASK_NEW_IN_PROGRESS,\n    TASK_NEW_COMPLETED,\n    TASK_TYPE_APPROVAL,\n    PLACEHOLDER_USER,\n    TASK_EDIT_MODE_EDIT,\n} from '../../../../constants';\nimport type { TaskAssigneeCollection, TaskNew } from '../../../../common/types/tasks';\nimport { ACTIVITY_TARGETS } from '../../../common/interactionTargets';\nimport { bdlGray80 } from '../../../../styles/variables';\nimport TaskActions from './TaskActions';\nimport TaskCompletionRuleIcon from './TaskCompletionRuleIcon';\nimport TaskDueDate from './TaskDueDate';\nimport TaskStatus from './TaskStatus';\nimport AssigneeList from './AssigneeList';\nimport TaskModal from '../../TaskModal';\nimport TaskMultiFileIcon from './TaskMultiFileIcon';\nimport commonMessages from '../../../common/messages';\nimport messages from './messages';\nimport type { GetAvatarUrlCallback, GetProfileUrlCallback } from '../../../common/flowTypes';\nimport type { ElementsXhrError } from '../../../../common/types/api';\nimport type { SelectorItems, User } from '../../../../common/types/core';\nimport type { ActionItemError } from '../../../../common/types/feed';\nimport type { Translations } from '../../flowTypes';\nimport type { FeatureConfig } from '../../../common/feature-checking';\n\nimport './Task.scss';\n\ntype Props = {|\n    ...TaskNew,\n    api: API,\n    approverSelectorContacts: SelectorItems<>,\n    currentUser: User,\n    error?: ActionItemError,\n    features?: FeatureConfig,\n    getApproverWithQuery?: Function,\n    getAvatarUrl: GetAvatarUrlCallback,\n    getMentionWithQuery?: Function,\n    getUserProfileUrl?: GetProfileUrlCallback,\n    isPending?: boolean,\n    onAssignmentUpdate: Function,\n    onDelete?: Function,\n    onEdit?: Function,\n    onModalClose?: Function,\n    onView?: Function,\n    translatedTaggedMessage?: string,\n    translations?: Translations,\n|};\n\ntype State = {\n    // the complete list of assignees (when task.assigned_to is truncated)\n    assignedToFull: TaskAssigneeCollection,\n    isAssigneeListOpen: boolean,\n    isConfirmingDelete: boolean,\n    isEditing: boolean,\n    isLoading: boolean,\n    loadCollabError: ?ActionItemError,\n    modalError: ?ElementsXhrError,\n};\n\nclass Task extends React.Component<Props, State> {\n    static defaultProps = {\n        completion_rule: TASK_COMPLETION_RULE_ALL,\n    };\n\n    state = {\n        loadCollabError: undefined,\n        assignedToFull: this.props.assigned_to,\n        modalError: undefined,\n        isEditing: false,\n        isLoading: false,\n        isAssigneeListOpen: false,\n        isConfirmingDelete: false,\n    };\n\n    handleAssigneeListExpand = () => {\n        this.getAllTaskCollaborators(() => {\n            this.setState({ isAssigneeListOpen: true });\n        });\n    };\n\n    handleAssigneeListCollapse = () => {\n        this.setState({ isAssigneeListOpen: false });\n    };\n\n    handleEditClick = () => {\n        this.getAllTaskCollaborators(() => {\n            this.setState({ isEditing: true });\n        });\n    };\n\n    handleDeleteClick = () => {\n        this.setState({ isConfirmingDelete: true });\n    };\n\n    handleDeleteConfirm = (): void => {\n        const { id, onDelete, permissions } = this.props;\n\n        if (onDelete) {\n            onDelete({ id, permissions });\n        }\n    };\n\n    handleDeleteCancel = (): void => {\n        this.setState({ isConfirmingDelete: false });\n    };\n\n    handleEditModalClose = () => {\n        const { onModalClose } = this.props;\n        this.setState({ isEditing: false, modalError: undefined });\n\n        if (onModalClose) {\n            onModalClose();\n        }\n    };\n\n    handleEditSubmitError = (error: ElementsXhrError) => {\n        this.setState({ modalError: error });\n    };\n\n    getAllTaskCollaborators = (onSuccess: () => any) => {\n        const { id, api, task_links, assigned_to } = this.props;\n        const { errorOccured } = commonMessages;\n        const { taskCollaboratorLoadErrorMessage } = messages;\n\n        // skip fetch when there are no additional collaborators\n        if (!assigned_to.next_marker) {\n            this.setState({ assignedToFull: assigned_to });\n            onSuccess();\n            return;\n        }\n\n        // fileid is required for api calls, check for presence\n        const fileId = get(task_links, 'entries[0].target.id');\n        if (!fileId) {\n            return;\n        }\n\n        this.setState({ isLoading: true });\n        api.getTaskCollaboratorsAPI(false).getTaskCollaborators({\n            task: { id },\n            file: { id: fileId },\n            errorCallback: () => {\n                this.setState({\n                    isLoading: false,\n                    loadCollabError: {\n                        message: taskCollaboratorLoadErrorMessage,\n                        title: errorOccured,\n                    },\n                });\n            },\n            successCallback: assignedToFull => {\n                this.setState({ assignedToFull, isLoading: false });\n                onSuccess();\n            },\n        });\n    };\n\n    handleTaskAction = (taskId: string, assignmentId: string, taskStatus: string) => {\n        const { onAssignmentUpdate } = this.props;\n\n        this.setState({ isAssigneeListOpen: false });\n\n        onAssignmentUpdate(taskId, assignmentId, taskStatus);\n    };\n\n    render() {\n        const {\n            approverSelectorContacts,\n            assigned_to,\n            completion_rule,\n            created_at,\n            created_by,\n            currentUser,\n            due_at,\n            error,\n            features,\n            getApproverWithQuery,\n            getAvatarUrl,\n            getUserProfileUrl,\n            id,\n            isPending,\n            description,\n            onEdit,\n            onView,\n            permissions,\n            status,\n            task_links,\n            task_type,\n            translatedTaggedMessage,\n            translations,\n        } = this.props;\n\n        const {\n            assignedToFull,\n            modalError,\n            isEditing,\n            isLoading,\n            loadCollabError,\n            isAssigneeListOpen,\n            isConfirmingDelete,\n        } = this.state;\n\n        const inlineError = loadCollabError || error;\n\n        const assignments = assigned_to && assigned_to.entries;\n\n        const currentUserAssignment = assignments && assignments.find(({ target }) => target.id === currentUser.id);\n\n        const createdByUser = created_by.target || PLACEHOLDER_USER;\n\n        const createdAtTimestamp = new Date(created_at).getTime();\n\n        const isTaskCompleted = !(status === TASK_NEW_NOT_STARTED || status === TASK_NEW_IN_PROGRESS);\n\n        const isCreator = created_by.target.id === currentUser.id;\n\n        const isMultiFile = task_links.entries.length > 1;\n\n        let shouldShowActions;\n        if (isTaskCompleted) {\n            shouldShowActions = false;\n        } else if (isMultiFile && isCreator) {\n            shouldShowActions = true;\n        } else {\n            shouldShowActions =\n                currentUserAssignment &&\n                currentUserAssignment.permissions &&\n                currentUserAssignment.permissions.can_update &&\n                currentUserAssignment.status === TASK_NEW_NOT_STARTED;\n        }\n\n        const TaskTypeIcon = task_type === TASK_TYPE_APPROVAL ? IconTaskApproval : IconTaskGeneral;\n\n        const isMenuVisible = (permissions.can_delete || permissions.can_update) && !isPending;\n\n        return (\n            <ActivityCard\n                className=\"bcs-Task\"\n                data-resin-feature=\"tasks\"\n                data-resin-taskid={id}\n                data-resin-tasktype={task_type}\n                data-resin-numassignees={assignments && assignments.length}\n            >\n                {/* $FlowFixMe */}\n                {inlineError ? <ActivityError {...inlineError} /> : null}\n                <Media\n                    className={classNames('bcs-Task-media', {\n                        'bcs-is-pending': isPending || isLoading,\n                    })}\n                    data-testid=\"task-card\"\n                >\n                    <Media.Figure className=\"bcs-Task-avatar\">\n                        <Avatar getAvatarUrl={getAvatarUrl} user={createdByUser} />\n                        <TaskTypeIcon width={20} height={20} className=\"bcs-Task-avatarBadge\" />\n                    </Media.Figure>\n                    <Media.Body>\n                        {isMenuVisible && (\n                            <TetherComponent\n                                attachment=\"top right\"\n                                className=\"bcs-Task-deleteConfirmationModal\"\n                                constraints={[{ to: 'scrollParent', attachment: 'together' }]}\n                                targetAttachment=\"bottom right\"\n                            >\n                                <Media.Menu\n                                    isDisabled={isConfirmingDelete}\n                                    data-testid=\"task-actions-menu\"\n                                    menuProps={{\n                                        'data-resin-component': ACTIVITY_TARGETS.TASK_OPTIONS,\n                                    }}\n                                >\n                                    {permissions.can_update && (\n                                        <MenuItem\n                                            data-resin-target={ACTIVITY_TARGETS.TASK_OPTIONS_EDIT}\n                                            data-testid=\"edit-task\"\n                                            onClick={this.handleEditClick}\n                                        >\n                                            <IconPencil color={bdlGray80} />\n                                            <FormattedMessage {...messages.taskEditMenuItem} />\n                                        </MenuItem>\n                                    )}\n                                    {permissions.can_delete && (\n                                        <MenuItem\n                                            data-resin-target={ACTIVITY_TARGETS.TASK_OPTIONS_DELETE}\n                                            data-testid=\"delete-task\"\n                                            onClick={this.handleDeleteClick}\n                                        >\n                                            <IconTrash color={bdlGray80} />\n                                            <FormattedMessage {...messages.taskDeleteMenuItem} />\n                                        </MenuItem>\n                                    )}\n                                </Media.Menu>\n                                {isConfirmingDelete && (\n                                    <DeleteConfirmation\n                                        data-resin-component={ACTIVITY_TARGETS.TASK_OPTIONS}\n                                        isOpen={isConfirmingDelete}\n                                        message={messages.taskDeletePrompt}\n                                        onDeleteCancel={this.handleDeleteCancel}\n                                        onDeleteConfirm={this.handleDeleteConfirm}\n                                    />\n                                )}\n                            </TetherComponent>\n                        )}\n                        <div className=\"bcs-Task-headline\">\n                            <UserLink\n                                {...createdByUser}\n                                data-resin-target={ACTIVITY_TARGETS.PROFILE}\n                                getUserProfileUrl={getUserProfileUrl}\n                            />\n                        </div>\n                        <div>\n                            <ActivityTimestamp date={createdAtTimestamp} />\n                        </div>\n                        <div className=\"bcs-Task-status\">\n                            <TaskStatus status={status} />\n                            <TaskMultiFileIcon isMultiFile={isMultiFile} />\n                            <TaskCompletionRuleIcon completionRule={completion_rule} />\n                        </div>\n                        <div className=\"bcs-Task-dueDate\">\n                            {!!due_at && <TaskDueDate dueDate={due_at} status={status} />}\n                        </div>\n                        <div>\n                            <ActivityMessage\n                                id={id}\n                                tagged_message={description}\n                                translatedTaggedMessage={translatedTaggedMessage}\n                                {...translations}\n                                translationFailed={error ? true : null}\n                                getUserProfileUrl={getUserProfileUrl}\n                            />\n                        </div>\n                        <div className=\"bcs-Task-assigneeListContainer\">\n                            <AssigneeList\n                                isOpen={isAssigneeListOpen}\n                                onCollapse={this.handleAssigneeListCollapse}\n                                onExpand={this.handleAssigneeListExpand}\n                                getAvatarUrl={getAvatarUrl}\n                                initialAssigneeCount={3}\n                                users={isAssigneeListOpen ? assignedToFull : assigned_to}\n                            />\n                        </div>\n                        {shouldShowActions && (\n                            <div className=\"bcs-Task-actionsContainer\" data-testid=\"action-container\">\n                                <TaskActions\n                                    isMultiFile={isMultiFile}\n                                    taskType={task_type}\n                                    onTaskApproval={\n                                        isPending\n                                            ? noop\n                                            : () =>\n                                                  // $FlowFixMe checked by shouldShowActions\n                                                  this.handleTaskAction(id, currentUserAssignment.id, TASK_NEW_APPROVED)\n                                    }\n                                    onTaskReject={\n                                        isPending\n                                            ? noop\n                                            : () =>\n                                                  // $FlowFixMe checked by shouldShowActions\n                                                  this.handleTaskAction(id, currentUserAssignment.id, TASK_NEW_REJECTED)\n                                    }\n                                    onTaskComplete={\n                                        isPending\n                                            ? noop\n                                            : () =>\n                                                  this.handleTaskAction(\n                                                      id,\n                                                      // $FlowFixMe checked by shouldShowActions\n                                                      currentUserAssignment.id,\n                                                      TASK_NEW_COMPLETED,\n                                                  )\n                                    }\n                                    onTaskView={onView && (() => onView(id, isCreator))}\n                                />\n                            </div>\n                        )}\n                    </Media.Body>\n                </Media>\n                <TaskModal\n                    editMode={TASK_EDIT_MODE_EDIT}\n                    error={modalError}\n                    feedbackUrl={getFeatureConfig(features, 'activityFeed.tasks').feedbackUrl || ''}\n                    onSubmitError={this.handleEditSubmitError}\n                    onSubmitSuccess={this.handleEditModalClose}\n                    onModalClose={this.handleEditModalClose}\n                    isTaskFormOpen={isEditing}\n                    taskFormProps={{\n                        id,\n                        approvers: assignedToFull.entries,\n                        approverSelectorContacts,\n                        completionRule: completion_rule,\n                        getApproverWithQuery,\n                        getAvatarUrl,\n                        createTask: () => {},\n                        editTask: onEdit,\n                        dueDate: due_at,\n                        message: description,\n                    }}\n                    taskType={task_type}\n                />\n            </ActivityCard>\n        );\n    }\n}\n\nexport { Task as TaskComponent };\nexport default flow([withFeatureConsumer, withAPIContext])(Task);\n","// extracted by mini-css-extract-plugin","// @flow\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport { ACTIVITY_TARGETS } from '../../../common/interactionTargets';\nimport messages from './messages';\nimport Button from '../../../../components/button';\nimport PrimaryButton from '../../../../components/primary-button';\nimport { TASK_TYPE_APPROVAL, TASK_TYPE_GENERAL } from '../../../../constants';\nimport type { TaskType } from '../../../../common/types/tasks';\n\nimport './TaskActions.scss';\n\ntype Props = {|\n    isMultiFile: boolean,\n    onTaskApproval: Function,\n    onTaskComplete: Function,\n    onTaskReject: Function,\n    onTaskView: Function,\n    taskType: TaskType,\n|};\n\nconst TaskActions = ({\n    isMultiFile,\n    onTaskApproval,\n    onTaskReject,\n    onTaskComplete,\n    onTaskView,\n    taskType,\n}: Props): React.Node => {\n    let action = null;\n    if (isMultiFile) {\n        action = onTaskView && (\n            <PrimaryButton\n                className=\"bcs-TaskActions-button\"\n                data-testid=\"view-task\"\n                onClick={onTaskView}\n                data-resin-target={ACTIVITY_TARGETS.TASK_VIEW_DETAILS}\n            >\n                <FormattedMessage {...messages.tasksFeedViewDetailsAction} />\n            </PrimaryButton>\n        );\n    } else if (taskType === TASK_TYPE_APPROVAL) {\n        action = (\n            <>\n                <Button\n                    className=\"bcs-TaskActions-button\"\n                    data-testid=\"reject-task\"\n                    onClick={onTaskReject}\n                    data-resin-target={ACTIVITY_TARGETS.TASK_REJECT}\n                >\n                    <FormattedMessage {...messages.tasksFeedRejectAction} />\n                </Button>\n                <PrimaryButton\n                    className=\"bcs-TaskActions-button\"\n                    data-testid=\"approve-task\"\n                    onClick={onTaskApproval}\n                    data-resin-target={ACTIVITY_TARGETS.TASK_APPROVE}\n                >\n                    <FormattedMessage {...messages.tasksFeedApproveAction} />\n                </PrimaryButton>\n            </>\n        );\n    } else if (taskType === TASK_TYPE_GENERAL) {\n        action = (\n            <PrimaryButton\n                className=\"bcs-TaskActions-button\"\n                data-testid=\"complete-task\"\n                onClick={onTaskComplete}\n                data-resin-target={ACTIVITY_TARGETS.TASK_COMPLETE}\n            >\n                <FormattedMessage {...messages.tasksFeedCompleteAction} />\n            </PrimaryButton>\n        );\n    }\n    return <div className=\"bcs-TaskActions\">{action}</div>;\n};\n\nexport default TaskActions;\n","// extracted by mini-css-extract-plugin","// @flow\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { TASK_COMPLETION_RULE_ANY } from '../../../../constants';\nimport messages from './messages';\n// $FlowFixMe LabelPill is in typescript\nimport LabelPill from '../../../../components/label-pill';\nimport Tooltip from '../../../../components/tooltip';\nimport Avatar16 from '../../../../icon/line/Avatar16';\nimport type { TaskCompletionRule } from '../../../../common/types/tasks';\n\nimport './TaskCompletionRuleIcon.scss';\n\ntype Props = {|\n    completionRule: ?TaskCompletionRule,\n|};\n\nconst TaskCompletionRuleIcon = ({ completionRule }: Props): React.Node =>\n    completionRule === TASK_COMPLETION_RULE_ANY && (\n        <span className=\"bcs-TaskCompletionRuleIcon\">\n            <Tooltip position=\"top-center\" text={<FormattedMessage {...messages.taskAnyAffordanceTooltip} />}>\n                <LabelPill.Pill>\n                    <LabelPill.Icon Component={Avatar16} />\n                    <LabelPill.Text className=\"bcs-TaskCompletionRuleIcon-oneSize\">1</LabelPill.Text>\n                </LabelPill.Pill>\n            </Tooltip>\n        </span>\n    );\n\nexport default TaskCompletionRuleIcon;\n","// extracted by mini-css-extract-plugin","// @flow\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport ActivityDatestamp from '../common/activity-datestamp';\nimport messages from './messages';\n// $FlowFixMe LabelPill is in typescript\nimport LabelPill from '../../../../components/label-pill';\nimport { TASK_NEW_NOT_STARTED } from '../../../../constants';\n\nimport type { TaskStatus } from '../../../../common/types/tasks';\nimport type { ISODate } from '../../../../common/types/core';\n\ntype Props = {\n    dueDate: ISODate,\n    status: TaskStatus,\n};\n\nconst TaskDueDate = ({ dueDate, status }: Props): React.Node => {\n    const isOverdue = dueDate ? status === TASK_NEW_NOT_STARTED && new Date(dueDate) < Date.now() : false;\n    const fullDueDate = new Date(dueDate);\n    const pillProps = isOverdue ? { 'data-testid': 'task-overdue-date', type: 'error' } : { type: 'default' };\n    return (\n        <div data-testid=\"task-due-date\">\n            <LabelPill.Pill {...pillProps}>\n                <LabelPill.Text>\n                    <FormattedMessage\n                        {...messages.taskFeedStatusDue}\n                        values={{\n                            dateTime: <ActivityDatestamp date={fullDueDate.getTime()} uppercase />,\n                        }}\n                    />\n                </LabelPill.Text>\n            </LabelPill.Pill>\n        </div>\n    );\n};\n\nexport default TaskDueDate;\n","// @flow\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport messages from './messages';\n// $FlowFixMe LabelPill is in typescript\nimport LabelPill from '../../../../components/label-pill';\nimport Tooltip from '../../../../components/tooltip';\nimport MoveCopy16 from '../../../../icon/line/MoveCopy16';\n\ntype Props = {|\n    isMultiFile: boolean,\n|};\n\nconst TaskMultiFileIcon = ({ isMultiFile }: Props): React.Node => {\n    return (\n        isMultiFile && (\n            <Tooltip position=\"top-center\" text={<FormattedMessage {...messages.taskMultipleFilesAffordanceTooltip} />}>\n                <LabelPill.Pill data-testid=\"multifile-badge\">\n                    <LabelPill.Icon Component={MoveCopy16} />\n                </LabelPill.Pill>\n            </Tooltip>\n        )\n    );\n};\n\nexport default TaskMultiFileIcon;\n","// @flow\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport {\n    TASK_NEW_APPROVED,\n    TASK_NEW_REJECTED,\n    TASK_NEW_COMPLETED,\n    TASK_NEW_NOT_STARTED,\n    TASK_NEW_IN_PROGRESS,\n} from '../../../../constants';\nimport messages from './messages';\n// $FlowFixMe LabelPill is in typescript\nimport LabelPill from '../../../../components/label-pill';\nimport type { TaskStatus } from '../../../../common/types/tasks';\n\ntype Props = {|\n    status: TaskStatus,\n|};\n\nconst statusMessageKeyMap = {\n    [TASK_NEW_APPROVED]: messages.taskFeedApprovedUppercaseLabel,\n    [TASK_NEW_COMPLETED]: messages.taskFeedCompletedUppercaseLabel,\n    [TASK_NEW_REJECTED]: messages.taskFeedRejectedUppercaseLabel,\n    [TASK_NEW_NOT_STARTED]: messages.taskFeedInProgressUppercaseLabel,\n    [TASK_NEW_IN_PROGRESS]: messages.taskFeedInProgressUppercaseLabel,\n};\n\nconst typeKeyMap = {\n    [TASK_NEW_APPROVED]: 'success',\n    [TASK_NEW_COMPLETED]: 'success',\n    [TASK_NEW_REJECTED]: 'error',\n    [TASK_NEW_NOT_STARTED]: 'default',\n    [TASK_NEW_IN_PROGRESS]: 'default',\n};\n\nconst Status = React.memo<Props>(({ status }: Props) => (\n    <LabelPill.Pill type={typeKeyMap[status]}>\n        <LabelPill.Text>\n            <FormattedMessage {...statusMessageKeyMap[status]} />\n        </LabelPill.Text>\n    </LabelPill.Pill>\n));\n\nexport default Status;\n","// @flow\nexport { default } from './Task';\nexport { TaskComponent } from './Task';\n","/**\n * @flow\n * @file i18n messages\n * @author Box\n */\n\nimport { defineMessages } from 'react-intl';\n\nconst messages = defineMessages({\n    taskCollaboratorLoadErrorMessage: {\n        id: 'be.contentSidebar.activityFeed.taskNew.taskCollaboratorLoadErrorMessage',\n        description: 'Error message when we failed to load the collaborators when user tries to edit a task',\n        defaultMessage: 'An error has occurred while loading collaborators for this task. Please try again.',\n    },\n    taskShowMoreAssignees: {\n        id: 'be.contentSidebar.activityFeed.taskNew.taskShowMoreAssignees',\n        description:\n            'Button name to expand task assignee list, additionalAssigneeCount is the number of additional task assignees that can be shown.',\n        defaultMessage: 'Show {additionalAssigneeCount} More',\n    },\n    taskShowMoreAssigneesOverflow: {\n        id: 'be.contentSidebar.activityFeed.taskNew.taskShowMoreAssigneesOverflow',\n        description:\n            'Button name to expand task assignee list, when there is an unknown number of assignees beyond additionalAssigneeCount.',\n        defaultMessage: '{additionalAssigneeCount, plural, one {Show #+ More} other {Show #+ More}}',\n    },\n    taskShowLessAssignees: {\n        id: 'be.contentSidebar.activityFeed.taskNew.taskShowLessAssignees',\n        description: 'Button name to hide task assignee list',\n        defaultMessage: 'Show Less',\n    },\n    taskDueDateLabel: {\n        id: 'be.contentSidebar.activityFeed.taskNew.taskDueDateLabel',\n        defaultMessage: 'Due: {date}',\n        description: 'Label and date for task due date',\n    },\n    tasksFeedApproveAction: {\n        id: 'be.contentSidebar.activityFeed.taskNew.tasksFeedApproveAction',\n        defaultMessage: 'Approve',\n        description: 'Approve option for an approval task',\n    },\n    tasksFeedCompleteAction: {\n        id: 'be.contentSidebar.activityFeed.taskNew.tasksFeedCompleteAction',\n        defaultMessage: 'Mark as Complete',\n        description: 'Completion option for a general task',\n    },\n    tasksFeedRejectAction: {\n        id: 'be.contentSidebar.activityFeed.taskNew.tasksFeedRejectAction',\n        defaultMessage: 'Reject',\n        description: 'Reject option for an approval task',\n    },\n    tasksFeedViewDetailsAction: {\n        id: 'be.contentSidebar.activityFeed.taskNew.tasksFeedViewDetailsAction',\n        defaultMessage: 'View Task Details',\n        description: 'View the details for a task',\n    },\n    tasksFeedCompletedLabel: {\n        id: 'be.contentSidebar.activityFeed.taskNew.tasksFeedCompletedLabel',\n        defaultMessage: 'Completed',\n        description: 'Label for a completed task',\n    },\n    taskFeedCompletedUppercaseLabel: {\n        id: 'be.contentSidebar.activityFeed.taskNew.tasksFeedCompletedUppercaseLabel',\n        defaultMessage: 'COMPLETED',\n        description: 'Label for an completed task (in upper-case in supported language)',\n    },\n    tasksFeedApprovedLabel: {\n        id: 'be.contentSidebar.activityFeed.taskNew.tasksFeedApprovedLabel',\n        defaultMessage: 'Approved',\n        description: 'Label for an approved task',\n    },\n    taskFeedApprovedUppercaseLabel: {\n        id: 'be.contentSidebar.activityFeed.taskNew.tasksFeedApprovedUppercaseLabel',\n        defaultMessage: 'APPROVED',\n        description: 'Label for an approved task (in upper-case in supported language)',\n    },\n    tasksFeedRejectedLabel: {\n        id: 'be.contentSidebar.activityFeed.taskNew.tasksFeedRejectedLabel',\n        defaultMessage: 'Rejected',\n        description: 'Label for a rejected task',\n    },\n    taskFeedRejectedUppercaseLabel: {\n        id: 'be.contentSidebar.activityFeed.taskNew.tasksFeedRejectedUppercaseLabel',\n        defaultMessage: 'REJECTED',\n        description: 'Label for a task rejected (in upper-case in supported language)',\n    },\n    tasksFeedInProgressLabel: {\n        id: 'be.contentSidebar.activityFeed.taskNew.tasksFeedInProgressLabel',\n        defaultMessage: 'In Progress',\n        description: 'Label for a task in progress',\n    },\n    taskFeedInProgressUppercaseLabel: {\n        id: 'be.contentSidebar.activityFeed.taskNew.tasksFeedInProgressUppercaseLabel',\n        defaultMessage: 'IN PROGRESS',\n        description: 'Label for a task in progress (in upper-case in supported language)',\n    },\n    tasksFeedHeadlineApprovalCurrentUser: {\n        id: 'be.contentSidebar.activityFeed.taskNew.tasksFeedHeadlineApprovalCurrentUser',\n        defaultMessage: '{user} assigned you an Approval Task',\n        description: 'Comment headline for an approval task assigned to the current user',\n    },\n    tasksFeedHeadlineApproval: {\n        id: 'be.contentSidebar.activityFeed.taskNew.tasksFeedHeadlineApproval',\n        defaultMessage: '{user} assigned an Approval Task',\n        description: 'Comment headline for an approval task',\n    },\n    tasksFeedHeadlineGeneralCurrentUser: {\n        id: 'be.contentSidebar.activityFeed.taskNew.tasksFeedHeadlineGeneralCurrentUser',\n        defaultMessage: '{user} assigned you a Task',\n        description: 'Comment headline for a general task assigned to the current user',\n    },\n    tasksFeedHeadlineGeneral: {\n        id: 'be.contentSidebar.activityFeed.taskNew.tasksFeedHeadlineGeneral',\n        defaultMessage: '{user} assigned a Task',\n        description: 'Comment headline for a general task',\n    },\n    tasksFeedMoreAssigneesLabel: {\n        id: 'be.contentSidebar.activityFeed.taskNew.tasksFeedMoreAssigneesLabel',\n        defaultMessage: 'See all assignees',\n        description: 'Label for button to expand flyout to see all task assignees',\n    },\n    tasksFeedAssigneeListTitle: {\n        id: 'be.contentSidebar.activityFeed.taskNew.tasksFeedAssigneeListTitle',\n        defaultMessage: 'Assignees',\n        description: 'Title for list of all task assignees',\n    },\n    tasksFeedStatusRejected: {\n        id: 'be.contentSidebar.activityFeed.taskNew.tasksFeedStatusRejected',\n        defaultMessage: 'Rejected {dateTime}',\n        description: 'Rejected task status, where dateTime is a readable time like \"Today at 2pm\"',\n    },\n    tasksFeedStatusApproved: {\n        id: 'be.contentSidebar.activityFeed.taskNew.tasksFeedStatusApproved',\n        defaultMessage: 'Approved {dateTime}',\n        description: 'Approved task status, where dateTime is a readable time like \"Today at 2pm\"',\n    },\n    tasksFeedStatusCompleted: {\n        id: 'be.contentSidebar.activityFeed.taskNew.tasksFeedStatusCompleted',\n        defaultMessage: 'Completed {dateTime}',\n        description: 'Completed task status, where dateTime is a readable time like \"Today at 2pm\"',\n    },\n    taskFeedStatusDue: {\n        id: 'be.contentSidebar.activityFeed.taskNew.taskFeedStatusDue',\n        defaultMessage: 'DUE {dateTime}',\n        description:\n            'Text for due date description formatted with relative date and relative time. (Upper-case in supported languages)',\n    },\n    taskAssignmentCompleted: {\n        id: 'be.contentSidebar.activityFeed.taskNew.taskAssignmentCompleted',\n        defaultMessage: 'Completed',\n        description: 'Title for checkmark icon indicating someone completed a task',\n    },\n    taskDeleteMenuItem: {\n        id: 'be.contentSidebar.activityFeed.task.taskDeleteMenuItem',\n        defaultMessage: 'Delete task',\n        description: 'Text to show on menu item to delete task',\n    },\n    taskEditMenuItem: {\n        id: 'be.contentSidebar.activityFeed.task.taskEditMenuItem',\n        defaultMessage: 'Modify task',\n        description: 'Text to show on menu item to edit task',\n    },\n    taskDeletePrompt: {\n        id: 'be.contentSidebar.activityFeed.task.taskDeletePrompt',\n        defaultMessage: 'Are you sure you want to permanently delete this task?',\n        description: 'Confirmation prompt text to delete task',\n    },\n    taskAnyAffordanceTooltip: {\n        id: 'be.contentSidebar.activityFeed.task.taskAnyAffordanceTooltip',\n        defaultMessage: 'Only one assignee is required to complete this task',\n        description: 'Tooltip text for any task icon, explaining that the task only needs one assignee to complete.',\n    },\n    taskMultipleFilesAffordanceTooltip: {\n        id: 'be.contentSidebar.activityFeed.task.taskMultipleFilesAffordanceTooltip',\n        defaultMessage: 'There are multiple files associated with this task',\n        description: 'Tooltip text for multi-file icon, explaining that the task involves multiple files',\n    },\n});\n\nexport default messages;\n","/**\n * @flow\n * @file Util for formatting tagged messages\n */\n\nimport * as React from 'react';\nimport { Link } from '../../../../components/link';\nimport { ACTIVITY_TARGETS } from '../../../common/interactionTargets';\nimport UserLink from '../common/user-link';\n\n// this regex matches one of the following regular expressions:\n// mentions: ([@＠﹫]\\[[0-9]+:[^\\]]+])\n// urls: (?:\\b)((?:(?:ht|f)tps?:\\/\\/)[\\w\\._\\-]+(:\\d+)?(\\/[\\w\\-_\\.~\\+\\/#\\?&%=:\\[\\]@!$'\\(\\)\\*;,]*)?)\n// NOTE: There are useless escapes in the regex below, should probably remove them when safe\n// eslint-disable-next-line\nconst splitRegex = /((?:[@＠﹫]\\[[0-9]+:[^\\]]+])|(?:\\b(?:(?:ht|f)tps?:\\/\\/)[\\w\\._\\-]+(?::\\d+)?(?:\\/[\\w\\-_\\.~\\+\\/#\\?&%=:\\[\\]@!$'\\(\\)\\*;,]*)?))/gim;\n\n/**\n * Formats a message a string and replaces the following:\n * - all occurrence of mention patterns with a UserLink component\n * - all occurrence of urls with a Link component\n * Ex mention format: @[123:Hello World]\n * @param {String} tagged_message The message string to format\n * @param {String} itemID The id of the tagged message\n * @param {Boolean} shouldReturnString The boolean value whether it should return string\n * @param {Function} [getUserProfileUrl] The method to generate a user profile url\n * @returns {String|React.Node}\n */\nconst formatTaggedMessage = (\n    tagged_message: string,\n    itemID: string,\n    shouldReturnString: boolean,\n    getUserProfileUrl?: Function,\n): React.Node | string => {\n    const contentItems = tagged_message.split(splitRegex).map((text: string, contentIndex: number) => {\n        const contentKey = `${contentIndex}-${itemID}`;\n        // attempt mention match\n        const mentionMatch = text.match(/([@＠﹫])\\[([0-9]+):([^\\]]+)]/i);\n        if (mentionMatch) {\n            const [, trigger, id, name] = mentionMatch;\n            if (shouldReturnString) {\n                return `${trigger}${name}`;\n            }\n\n            return (\n                <UserLink\n                    key={contentKey}\n                    className=\"bcs-comment-mention\"\n                    data-resin-target={ACTIVITY_TARGETS.MENTION}\n                    getUserProfileUrl={getUserProfileUrl}\n                    id={id}\n                    name={`${trigger}${name}`}\n                />\n            );\n        }\n\n        if (!shouldReturnString) {\n            // attempt url match\n            // NOTE: There are useless escapes in the regex below, should probably remove them when safe\n            const urlMatch = text.match(\n                // eslint-disable-next-line no-useless-escape\n                /((?:(?:ht|f)tps?:\\/\\/)[\\w\\._\\-]+(?::\\d+)?(?:\\/[\\w\\-_\\.~\\+\\/#\\?&%=:\\[\\]@!$'\\(\\)\\*;,]*)?)/i,\n            );\n            if (urlMatch) {\n                const [, url] = urlMatch;\n                return (\n                    <Link key={contentKey} href={url}>\n                        {url}\n                    </Link>\n                );\n            }\n        }\n\n        return text;\n    });\n\n    return shouldReturnString ? contentItems.join('') : contentItems;\n};\n\nexport default formatTaggedMessage;\n","/**\n * @flow\n * @file Collapsed Version component\n */\n\nimport * as React from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport type { InjectIntlProvidedProps } from 'react-intl';\nimport ActivityCard from '../ActivityCard';\nimport IconInfo from '../../../../icons/general/IconInfo';\nimport PlainButton from '../../../../components/plain-button';\nimport messages from '../../../common/messages';\nimport selectors from '../../../common/selectors/version';\nimport { ACTIVITY_TARGETS } from '../../../common/interactionTargets';\nimport type { User, FileVersions } from '../../../../common/types/core';\nimport './Version.scss';\n\nfunction getMessageForAction(\n    action: string,\n    collaborators: { [collaborator_id: string]: User },\n    version_start: number,\n    version_end: number,\n): React.Node {\n    // We only support collapsing for multiple upload versions\n    if (action !== 'upload') {\n        return null;\n    }\n\n    const collaboratorIDs = Object.keys(collaborators);\n    const numberOfCollaborators = collaboratorIDs.length;\n\n    const versionRange: React.Node = (\n        <span className=\"bcs-Version-range\">\n            {version_start} - {version_end}\n        </span>\n    );\n\n    if (numberOfCollaborators === 1) {\n        const collaborator = collaborators[collaboratorIDs[0]];\n        return (\n            <FormattedMessage\n                {...messages.versionUploadCollapsed}\n                values={{\n                    name: <strong>{collaborator.name}</strong>,\n                    versions: versionRange,\n                }}\n            />\n        );\n    }\n\n    return (\n        <FormattedMessage\n            {...messages.versionMultipleUsersUploaded}\n            values={{\n                numberOfCollaborators,\n                versions: versionRange,\n            }}\n        />\n    );\n}\n\ntype Props = {\n    collaborators: { [collaborator_id: string]: User },\n    onInfo?: Function,\n    version_end: number,\n    version_start: number,\n    versions: FileVersions,\n} & InjectIntlProvidedProps;\n\nconst CollapsedVersion = (props: Props): React.Node => {\n    // $FlowFixMe\n    const action = selectors.getVersionAction(props);\n    const { collaborators, intl, onInfo, versions, version_start, version_end } = props;\n\n    return (\n        <ActivityCard className=\"bcs-Version\">\n            <span className=\"bcs-Version-message\">\n                {getMessageForAction(action, collaborators, version_start, version_end)}\n            </span>\n            {onInfo ? (\n                <span className=\"bcs-Version-actions\">\n                    <PlainButton\n                        aria-label={intl.formatMessage(messages.getVersionInfo)}\n                        className=\"bcs-Version-info\"\n                        data-resin-target={ACTIVITY_TARGETS.VERSION_CARD}\n                        onClick={() => {\n                            onInfo({ versions });\n                        }}\n                        type=\"button\"\n                    >\n                        <IconInfo height={16} width={16} />\n                    </PlainButton>\n                </span>\n            ) : null}\n        </ActivityCard>\n    );\n};\n\nexport { CollapsedVersion as CollapsedVersionBase };\nexport default injectIntl(CollapsedVersion);\n","/**\n * @flow\n * @file Version component\n */\n\nimport * as React from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport type { InjectIntlProvidedProps } from 'react-intl';\nimport ActivityCard from '../ActivityCard';\nimport IconInfo from '../../../../icons/general/IconInfo';\nimport messages from '../../../common/messages';\nimport PlainButton from '../../../../components/plain-button';\nimport selectors from '../../../common/selectors/version';\nimport { ACTIVITY_TARGETS } from '../../../common/interactionTargets';\nimport {\n    FILE_REQUEST_NAME,\n    VERSION_UPLOAD_ACTION,\n    VERSION_DELETE_ACTION,\n    VERSION_PROMOTE_ACTION,\n    VERSION_RESTORE_ACTION,\n} from '../../../../constants';\nimport type { User } from '../../../../common/types/core';\nimport './Version.scss';\n\ntype Props = {\n    id: string,\n    modified_by: User,\n    onInfo?: Function,\n    version_number: string,\n    version_promoted?: string,\n} & InjectIntlProvidedProps;\n\nconst ACTION_MAP = {\n    [VERSION_DELETE_ACTION]: messages.versionDeleted,\n    [VERSION_PROMOTE_ACTION]: messages.versionPromoted,\n    [VERSION_RESTORE_ACTION]: messages.versionRestored,\n    [VERSION_UPLOAD_ACTION]: messages.versionUploaded,\n};\n\nconst Version = (props: Props): React.Node => {\n    // $FlowFixMe\n    const action = selectors.getVersionAction(props);\n    const { id, intl, onInfo, version_number, version_promoted } = props;\n    // $FlowFixMe\n    const user = selectors.getVersionUser(props);\n    const name = user.name === FILE_REQUEST_NAME ? intl.formatMessage(messages.fileRequestDisplayName) : user.name;\n    return (\n        <ActivityCard className=\"bcs-Version\">\n            <span className=\"bcs-Version-message\">\n                <FormattedMessage\n                    {...ACTION_MAP[action]}\n                    values={{\n                        name: <strong>{name}</strong>,\n                        version_number,\n                        version_promoted,\n                    }}\n                />\n            </span>\n            {onInfo ? (\n                <span className=\"bcs-Version-actions\">\n                    <PlainButton\n                        aria-label={intl.formatMessage(messages.getVersionInfo)}\n                        className=\"bcs-Version-info\"\n                        data-resin-target={ACTIVITY_TARGETS.VERSION_CARD}\n                        onClick={() => {\n                            onInfo({ id, version_number });\n                        }}\n                        type=\"button\"\n                    >\n                        <IconInfo height={16} width={16} />\n                    </PlainButton>\n                </span>\n            ) : null}\n        </ActivityCard>\n    );\n};\n\nexport { Version as VersionBase };\nexport default injectIntl(Version);\n","// extracted by mini-css-extract-plugin","// @flow\nexport { default as CollapsedVersion } from './CollapsedVersion';\nexport { default } from './Version';\n","/* eslint-disable react/jsx-sort-props */\nimport * as React from 'react';\nimport * as vars from '../../styles/variables';\nimport AccessibleSVG, { SVGProps } from '../../components/accessible-svg/AccessibleSVG';\n\n/**\n * This is an auto-generated component and should not be edited\n * manually in contributor pull requests.\n *\n * If you have problems with this component:\n * - https://github.com/box/box-ui-elements/issues/new?template=Bug_report.md\n *\n * If there are missing features in this component:\n * - https://github.com/box/box-ui-elements/issues/new?template=Feature_request.md\n */\n\nconst Checkmark16 = (props: SVGProps) => (\n    <AccessibleSVG width={16} height={16} viewBox=\"0 0 16 16\" {...props}>\n        <path\n            fill={vars.bdlGray50}\n            d=\"M6.617 14c.55 0 .968-.2 1.253-.603l6.34-9.273c.102-.15.175-.296.221-.438.046-.143.069-.28.069-.41a1.2 1.2 0 00-.387-.912C13.855 2.121 13.53 2 13.139 2c-.26 0-.482.05-.666.15-.183.101-.357.275-.52.523l-5.357 8.152-2.693-3.12a1.327 1.327 0 00-1.05-.476c-.39 0-.714.121-.97.364-.255.243-.383.55-.383.919 0 .163.029.319.087.466.058.147.162.302.311.466l3.518 4.023c.318.355.719.533 1.201.533z\"\n        />\n    </AccessibleSVG>\n);\n\nexport default Checkmark16;\n","/* eslint-disable react/jsx-sort-props */\nimport * as React from 'react';\nimport * as vars from '../../styles/variables';\nimport AccessibleSVG, { SVGProps } from '../../components/accessible-svg/AccessibleSVG';\n\n/**\n * This is an auto-generated component and should not be edited\n * manually in contributor pull requests.\n *\n * If you have problems with this component:\n * - https://github.com/box/box-ui-elements/issues/new?template=Bug_report.md\n *\n * If there are missing features in this component:\n * - https://github.com/box/box-ui-elements/issues/new?template=Feature_request.md\n */\n\nconst Trash16 = (props: SVGProps) => (\n    <AccessibleSVG width={16} height={16} viewBox=\"0 0 16 16\" {...props}>\n        <path\n            fill={vars.bdlGray50}\n            fillRule=\"evenodd\"\n            d=\"M14 2l-1.8 11c-.1.6-.7 1-1.2 1H5c-.6 0-1.1-.5-1.2-1L2 2h12zm-3.5 2h-5c-.3 0-.5.2-.5.5s.2.5.5.5h5c.3 0 .5-.2.5-.5s-.2-.5-.5-.5z\"\n        />\n    </AccessibleSVG>\n);\n\nexport default Trash16;\n","/* eslint-disable react/jsx-sort-props */\nimport * as React from 'react';\nimport * as vars from '../../styles/variables';\nimport AccessibleSVG, { SVGProps } from '../../components/accessible-svg/AccessibleSVG';\n\n/**\n * This is an auto-generated component and should not be edited\n * manually in contributor pull requests.\n *\n * If you have problems with this component:\n * - https://github.com/box/box-ui-elements/issues/new?template=Bug_report.md\n *\n * If there are missing features in this component:\n * - https://github.com/box/box-ui-elements/issues/new?template=Feature_request.md\n */\n\nconst Avatar16 = (props: SVGProps) => (\n    <AccessibleSVG width={16} height={16} viewBox=\"0 0 16 16\" {...props}>\n        <path\n            fill={vars.bdlGray}\n            fillRule=\"evenodd\"\n            d=\"M8 9.5a6.497 6.497 0 015.63 3.251.5.5 0 01-.865.5A5.497 5.497 0 008 10.5a5.497 5.497 0 00-4.767 2.754.5.5 0 11-.866-.5A6.497 6.497 0 018 9.5zM8 2a3 3 0 110 6 3 3 0 010-6zm0 1a2 2 0 100 4 2 2 0 000-4z\"\n        />\n    </AccessibleSVG>\n);\n\nexport default Avatar16;\n","/* eslint-disable react/jsx-sort-props */\nimport * as React from 'react';\nimport * as vars from '../../styles/variables';\nimport AccessibleSVG, { SVGProps } from '../../components/accessible-svg/AccessibleSVG';\n\n/**\n * This is an auto-generated component and should not be edited\n * manually in contributor pull requests.\n *\n * If you have problems with this component:\n * - https://github.com/box/box-ui-elements/issues/new?template=Bug_report.md\n *\n * If there are missing features in this component:\n * - https://github.com/box/box-ui-elements/issues/new?template=Feature_request.md\n */\n\nconst MoveCopy16 = (props: SVGProps) => (\n    <AccessibleSVG width={16} height={16} viewBox=\"0 0 16 16\" {...props}>\n        <path\n            fill={vars.bdlGray}\n            fillRule=\"evenodd\"\n            d=\"M13 3c.557 0 .942.345.994.875L14 4v11H4V3h9zm0 1H5v10h8V4zm-2-3v1H3v10H2V1h9zm-.5 9c.3 0 .5.2.5.5s-.2.5-.5.5h-3c-.3 0-.5-.2-.5-.5s.2-.5.5-.5h3zm0-3c.3 0 .5.2.5.5s-.2.5-.5.5h-3c-.3 0-.5-.2-.5-.5s.2-.5.5-.5h3z\"\n        />\n    </AccessibleSVG>\n);\n\nexport default MoveCopy16;\n","/* eslint-disable react/jsx-sort-props */\nimport * as React from 'react';\nimport * as vars from '../../styles/variables';\nimport AccessibleSVG, { SVGProps } from '../../components/accessible-svg/AccessibleSVG';\n\n/**\n * This is an auto-generated component and should not be edited\n * manually in contributor pull requests.\n *\n * If you have problems with this component:\n * - https://github.com/box/box-ui-elements/issues/new?template=Bug_report.md\n *\n * If there are missing features in this component:\n * - https://github.com/box/box-ui-elements/issues/new?template=Feature_request.md\n */\n\nconst Pencil16 = (props: SVGProps) => (\n    <AccessibleSVG width={16} height={16} viewBox=\"0 0 16 16\" {...props}>\n        <path\n            fill={vars.bdlGray}\n            fillRule=\"evenodd\"\n            d=\"M3.829 9.096l7.392-7.392a.997.997 0 011.418.01l1.4 1.4c.395.395.397 1.032.01 1.419l-7.392 7.392L3.83 9.096zm1.414 0l1.414 1.414 6.685-6.684c-.005.004-.005 0-.01-.004l-1.4-1.401c-.005-.005-.006-.007-.006-.008L5.243 9.096zM2.925 10l2.829 2.828-3.398 1.184c-.52.18-.791-.105-.614-.614L2.925 10zm3.904 3h7v1h-7v-1z\"\n        />\n    </AccessibleSVG>\n);\n\nexport default Pencil16;\n","/* eslint-disable react/jsx-sort-props */\nimport * as React from 'react';\nimport * as vars from '../../styles/variables';\nimport AccessibleSVG, { SVGProps } from '../../components/accessible-svg/AccessibleSVG';\n\n/**\n * This is an auto-generated component and should not be edited\n * manually in contributor pull requests.\n *\n * If you have problems with this component:\n * - https://github.com/box/box-ui-elements/issues/new?template=Bug_report.md\n *\n * If there are missing features in this component:\n * - https://github.com/box/box-ui-elements/issues/new?template=Feature_request.md\n */\n\nconst Trash16 = (props: SVGProps) => (\n    <AccessibleSVG width={16} height={16} viewBox=\"0 0 16 16\" {...props}>\n        <path\n            fill={vars.bdlGray}\n            fillRule=\"evenodd\"\n            d=\"M14 2l-1.8 11c-.1.6-.7 1-1.2 1H5c-.6 0-1.1-.5-1.2-1L2 2h12zm-1.2 1H3.2l1.6 9.9s.1.1.2.1h6c.06 0 .12-.036.158-.065l.042-.035L12.8 3zm-2.3 1c.3 0 .5.2.5.5s-.2.5-.5.5h-5c-.3 0-.5-.2-.5-.5s.2-.5.5-.5z\"\n        />\n    </AccessibleSVG>\n);\n\nexport default Trash16;\n","import * as React from 'react';\n\nimport AccessibleSVG from '../accessible-svg';\n\nimport { Icon } from '../iconTypes';\n\nconst IconPencil = ({ className = '', color = '#777777', height = 13, title, width = 13 }: Icon) => (\n    <AccessibleSVG\n        className={`icon-pencil ${className}`}\n        height={height}\n        title={title}\n        viewBox=\"0 0 13 13\"\n        width={width}\n    >\n        <path\n            className=\"fill-color\"\n            d=\"M12,1c-0.8-0.8-2.1-0.8-2.9,0L2,8.1c0,0,0,0-0.1,0.1l0,0c0,0,0,0,0,0.1l0,0L0.6,12c-0.1,0.2,0,0.4,0.2,0.5\n                c0.1,0,0.2,0,0.2,0l3.7-1.3l0,0c0,0,0,0,0.1,0l0,0c0,0,0,0,0.1-0.1l6.5-6.5l0,0L12,3.9C12.8,3.1,12.8,1.8,12,1z M4.6,10.2L2.8,8.4\n                l6-6l1.8,1.8L4.6,10.2z M2.4,9.1l1.5,1.5l-2.4,0.8L2.4,9.1z M11.5,3.4l-0.4,0.4L9.3,1.9l0.4-0.4c0.5-0.5,1.3-0.5,1.8,0\n                C12,2.1,12,2.9,11.5,3.4z\"\n            fill={color}\n        />\n    </AccessibleSVG>\n);\n\nexport default IconPencil;\n","import * as React from 'react';\n\nimport AccessibleSVG from '../accessible-svg';\n\nimport { Icon } from '../iconTypes';\n\nconst IconRejected = ({ className = '', color = '#ED3757', height = 18, title, width = 18 }: Icon) => (\n    <AccessibleSVG\n        className={`icon-rejected ${className}`}\n        height={height}\n        title={title}\n        viewBox=\"0 0 18 18\"\n        width={width}\n    >\n        <g fill=\"none\" fillRule=\"evenodd\">\n            <circle cx={9} cy={9} fill={color} r={9} />\n            <path\n                d=\"M9 7.586l2.828-2.829 1.415 1.415L10.414 9l2.829 2.828-1.415 1.415L9 10.414l-2.828 2.829-1.415-1.415L7.586 9 4.757 6.172l1.415-1.415z\"\n                fill=\"#FFF\"\n                fillRule=\"nonzero\"\n            />\n        </g>\n    </AccessibleSVG>\n);\n\nexport default IconRejected;\n","import * as React from 'react';\n\nimport AccessibleSVG from '../accessible-svg';\nimport { TwoTonedIcon } from '../iconTypes';\nimport { bdlBoxBlue, white } from '../../styles/variables';\n\nconst IconTaskApproval = ({ className = '', height = 24, title, width = 24 }: TwoTonedIcon) => (\n    <AccessibleSVG\n        className={`bdl-IconTaskApproval ${className}`}\n        height={height}\n        title={title}\n        viewBox=\"0 0 32 32\"\n        width={width}\n    >\n        <g fill=\"none\" fillRule=\"nonzero\">\n            <circle className=\"background-color\" fill={bdlBoxBlue} cx=\"16\" cy=\"16\" r=\"16\" />\n            <g transform=\"translate(8 5.333)\" className=\"foreground-color\" fill={white}>\n                <path d=\"M11.267 6.51c-1.133 2.242-1.669 4.276-1.614 6.102.006.213-.177.388-.405.388H6.752c-.228 0-.41-.175-.405-.388.055-1.826-.481-3.86-1.614-6.102C2.953 2.986 4.557 0 8 0s5.047 2.986 3.267 6.51z\" />\n                <rect y=\"14.337\" width=\"16\" height=\"3.353\" rx=\"1.676\" />\n                <rect x=\"1.143\" y=\"18.808\" width=\"13.714\" height=\"1.192\" rx=\".596\" />\n            </g>\n        </g>\n    </AccessibleSVG>\n);\n\nexport default IconTaskApproval;\n","import * as React from 'react';\n\nimport AccessibleSVG from '../accessible-svg';\nimport { TwoTonedIcon } from '../iconTypes';\nimport { bdlBoxBlue, white } from '../../styles/variables';\n\nconst IconTaskGeneral = ({ className = '', height = 24, title, width = 24 }: TwoTonedIcon) => (\n    <AccessibleSVG\n        className={`bdl-IconTaskGeneral ${className}`}\n        height={height}\n        title={title}\n        viewBox=\"0 0 32 32\"\n        width={width}\n    >\n        <g fillRule=\"nonzero\" fill=\"none\">\n            <circle className=\"background-color\" fill={bdlBoxBlue} cx=\"16.162\" cy=\"16.162\" r=\"16\" />\n            <path\n                d=\"M11.717 8.162v.889c0 1.472.995 2.666 2.222 2.666h4.445c1.227 0 2.222-1.194 2.222-2.666v-.89h1.281c.766 0 1.386.62 1.386 1.386v13.23c0 .764-.62 1.385-1.386 1.385H10.436c-.765 0-1.385-.62-1.385-1.386V9.546c0-.764.62-1.384 1.385-1.384h1.281zm6.463 6.503l-2.741 2.924-1.354-1.203a.889.889 0 1 0-1.18 1.329l2 1.778c.36.32.909.295 1.238-.057l3.334-3.555a.889.889 0 1 0-1.297-1.216zm-4.981-6.503h5.926v.889c0 .49-.332.888-.741.888h-4.445c-.409 0-.74-.398-.74-.888v-.89z\"\n                className=\"foreground-color\"\n                fill={white}\n            />\n        </g>\n    </AccessibleSVG>\n);\n\nexport default IconTaskGeneral;\n","/* eslint-disable react/jsx-sort-props */\nimport * as React from 'react';\nimport * as vars from '../styles/variables';\nimport AccessibleSVG, { SVGProps } from '../components/accessible-svg/AccessibleSVG';\n\n/**\n * This is an auto-generated component and should not be edited\n * manually in contributor pull requests.\n *\n * If you have problems with this component:\n * - https://github.com/box/box-ui-elements/issues/new?template=Bug_report.md\n *\n * If there are missing features in this component:\n * - https://github.com/box/box-ui-elements/issues/new?template=Feature_request.md\n */\n\nconst EmptyStatePreviewActivity140 = (props: SVGProps) => (\n    <AccessibleSVG width={140} height={140} viewBox=\"0 0 140 140\" {...props}>\n        <g fill=\"none\" fillRule=\"evenodd\">\n            <circle cx={102} cy={93} r={8} fill={vars.bdlBoxBlue10} />\n            <path\n                fill={vars.white}\n                fillRule=\"nonzero\"\n                d=\"M81 32c18.809 0 34 13.02 34 29 0 15.373-14.1 28.104-32.087 28.955l-1.51.071 1.043 2.17.467 1.008C83.625 94.771 84 95.76 84 96c0 .684-.263 1-1 1-1.161 0-2.917-.894-5.391-2.793l-.298-.233-.57-.462c-.951-.787-2.218-1.898-3.793-3.329l-1.455-1.33-.244-.063c-.5-.128-.996-.265-1.486-.41.11-.659.182-1.325.215-1.999l.018-.507L70 85.5c0-10.979-10.064-19.881-22.672-20.47A24.93 24.93 0 0147 61c0-15.98 15.191-29 34-29z\"\n            />\n            <path\n                fill={vars.bdlBoxBlue}\n                fillRule=\"nonzero\"\n                d=\"M81 30c19.851 0 36 13.842 36 31 0 15.857-13.831 28.974-31.75 30.786l-.544.052-.211.016.338.734.25.564c.547 1.258.843 2.115.905 2.651l.01.11L86 96c0 1.716-1.07 3-3 3-1.733 0-3.807-1.056-6.609-3.207l-.35-.274-.597-.485a95.536 95.536 0 01-2.599-2.251l-.633-.569-1.705-1.551-.206-.053c-.327-.088-.652-.18-.974-.274-1.684 5.956-6.435 10.994-12.974 13.666l-.222.088-1.698 1.465-.895.76-.807.674a48.3 48.3 0 01-2.053 1.626l-.151.11c-2.04 1.467-3.76 2.275-5.027 2.275-1.526 0-2.5-.921-2.5-2.391l.003-.104c.031-.492.275-1.198.745-2.195l.187-.386-.345-.026C31.478 104.867 22 96.148 22 85.5c0-11.065 10.223-20.021 22.97-20.481l.33-.01a26.72 26.72 0 01-.276-2.868l-.02-.726L45 61c0-17.158 16.149-31 36-31zM46 67c-12.183 0-22 8.323-22 18.5 0 10.039 9.561 18.297 21.556 18.496l1.64.028-.775 1.445c-.931 1.736-1.421 2.886-1.421 3.14 0 .34.055.391.5.391.733 0 2.134-.658 3.86-1.899l.262-.193.521-.4.4-.315c.698-.56 1.569-1.284 2.608-2.173l1.924-1.663.163-.063C62.972 99.277 68 92.754 68 85.5 68 75.323 58.183 67 46 67zm35-35c-18.809 0-34 13.02-34 29 0 1.364.112 2.71.328 4.032C59.933 65.616 70 74.52 70 85.5l-.004.374a17.608 17.608 0 01-.159 2.023l-.073.482c.326.097.655.19.986.28l.743.193 1.455 1.331 1.274 1.148.58.515a71.767 71.767 0 002.329 1.984l.18.144.298.233.58.436C80.359 96.243 81.932 97 83 97c.737 0 1-.316 1-1 0-.276-.496-1.542-1.43-3.54l-.124-.264-1.044-2.17 1.511-.071C100.9 89.104 115 76.373 115 61c0-15.98-15.191-29-34-29zM55.332 71.082c4.425 2.02 7.83 5.802 9.598 10.501.198.527-.038 1.128-.529 1.341-.49.214-1.048-.04-1.246-.568-1.58-4.198-4.619-7.572-8.571-9.377-.487-.223-.714-.827-.508-1.351.207-.524.77-.768 1.256-.546zm42.053-32.005c5.722 2.384 10.755 8.18 12.564 13.607a1.001 1.001 0 01-1.898.632c-1.633-4.9-6.271-10.241-11.436-12.393a1 1 0 01.77-1.846z\"\n            />\n            <path\n                fill={vars.white}\n                fillRule=\"nonzero\"\n                d=\"M46 67c-12.183 0-22 8.323-22 18.5 0 10.039 9.561 18.297 21.556 18.496l1.64.028-.775 1.445c-.931 1.736-1.421 2.886-1.421 3.14 0 .34.055.391.5.391.733 0 2.134-.658 3.86-1.899l.262-.193.521-.4a94.07 94.07 0 003.008-2.488l1.924-1.663.163-.063C62.972 99.277 68 92.754 68 85.5 68 75.323 58.183 67 46 67z\"\n            />\n            <path\n                fill={vars.bdlBoxBlue}\n                fillRule=\"nonzero\"\n                d=\"M38 82a3 3 0 110 6 3 3 0 010-6zm8 0a3 3 0 110 6 3 3 0 010-6zm8 0a3 3 0 110 6 3 3 0 010-6zm-16 2a1 1 0 100 2 1 1 0 000-2zm8 0a1 1 0 100 2 1 1 0 000-2zm8 0a1 1 0 100 2 1 1 0 000-2zm23.901-29.435l.048.119 5.136 15.409 4.987-12.464a1 1 0 011.685-.283l.075.1L93.535 63h4.636a3 3 0 11-.001 2H93c-.293 0-.568-.128-.757-.346l-.075-.1-2.946-4.418-5.294 13.235c-.33.826-1.472.83-1.83.06l-.047-.115L77 58.161l-2.051 6.155a1 1 0 01-.833.677L74 65h-8.17a3 3 0 11-.001-2h7.45l2.772-8.316c.29-.87 1.479-.91 1.85-.119zM63 63a1 1 0 100 2 1 1 0 000-2zm38 0a1 1 0 100 2 1 1 0 000-2z\"\n            />\n            <circle cx={37} cy={39} r={10} fill={vars.bdlBoxBlue10} />\n        </g>\n    </AccessibleSVG>\n);\n\nexport default EmptyStatePreviewActivity140;\n","/**\n * @flow\n * @file Helper functions for keyboard events\n * @author Box\n */\n\n/**\n * Function to decode key events into keys.\n * Works for both React synthetic and native events.\n *\n * Will output in the format Shift+I, Control+I...\n * Will outpur Space for spacebar.\n * Will return empty string for modifiers only.\n *\n * @public\n * @param {Event} event - Keyboard event\n * @return {string} Decoded keydown key or empty string\n */\nfunction decode(event: KeyboardEvent | SyntheticKeyboardEvent<HTMLElement>) {\n    let modifier = '';\n\n    // KeyboardEvent.key is the new spec supported in Chrome, Firefox and IE.\n    // KeyboardEvent.keyIdentifier is the old spec supported in Safari.\n    // Priority is given to the new spec.\n    // $FlowFixMe\n    const { keyIdentifier } = event;\n    let key: string = event.key || keyIdentifier || '';\n\n    // Get the modifiers on their own\n    if (event.ctrlKey) {\n        modifier = 'Control';\n    } else if (event.shiftKey) {\n        modifier = 'Shift';\n    } else if (event.metaKey) {\n        modifier = 'Meta';\n    }\n\n    // The key and keyIdentifier specs also include modifiers.\n    // Since we are manually getting the modifiers above we do\n    // not want to trap them again here.\n    if (key === modifier) {\n        key = '';\n    }\n\n    // keyIdentifier spec returns UTF8 char codes\n    // Need to convert them back to ascii.\n    if (key.indexOf('U+') === 0) {\n        if (key === 'U+001B') {\n            key = 'Escape';\n        } else {\n            key = String.fromCharCode(Number(key.replace('U+', '0x')));\n        }\n    }\n\n    // If nothing was pressed or we evaluated to nothing, just return\n    if (!key) {\n        return '';\n    }\n\n    // Special casing for space bar\n    if (key === ' ') {\n        key = 'Space';\n    }\n\n    // Edge bug which outputs \"Esc\" instead of \"Escape\"\n    // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/5290772/\n    if (key === 'Esc') {\n        key = 'Escape';\n    }\n\n    // keyIdentifier spec does not prefix the word Arrow.\n    // Newer key spec does it automatically.\n    if (key === 'Right' || key === 'Left' || key === 'Down' || key === 'Up') {\n        key = `Arrow${key}`;\n    }\n\n    if (modifier) {\n        modifier += '+';\n    }\n\n    return modifier + key;\n}\n\nexport { decode }; // eslint-disable-line\n","/**\n * Parse a comma separated values text and return an array of separated strings\n *\n * @param  {string} text The input string\n * @return {array} A list of separated strings\n *\n * @example\n * parse('a, b, \"c, d\"')\n * returns [\"a\", \"b\", \"c, d\"]\n */\nfunction parseCSV(text) {\n    if (text === null || typeof text === 'undefined') {\n        // Input text is either null or undefined\n        return [];\n    }\n\n    // Convert the comma separated text into array\n    //\n    // The logic of the regular expression is simple\n    // look ahead comma or carriage return and retrieve:\n    //   1. either strings that are surrounded by double quotes\n    //   2. or strings that do not contain comma and carriage return\n    const components = text.match(/(\".*?\"|[^\",\\r\\n]+)(?=\\s*[,\\r\\n]|\\s*$)/g);\n    if (!components) {\n        // No match pattern is found\n        return [];\n    }\n\n    return components.map(c => {\n        // Trim the leading and trailing spaces\n        c = c.trim();\n\n        // Remove double quote pairs from both ends\n        // example '\"\"\"abc\"\"\"' will be altered to 'abc'\n        while (c.length >= 2 && c.charAt(0) === '\"' && c.charAt(c.length - 1) === '\"') {\n            c = c.substr(1, c.length - 2);\n        }\n\n        return c;\n    });\n}\n\nexport default parseCSV;\n"],"sourceRoot":""}